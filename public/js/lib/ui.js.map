{
  "version": 3,
  "sources": ["../../../lib/ui/layers/view.mjs", "../../../lib/ui/layers/listview.mjs", "../../../lib/ui/layers/filters.mjs", "../../../lib/ui/layers/panels/draw.mjs", "../../../lib/ui/layers/panels/filter.mjs", "../../../lib/ui/layers/panels/gazetteer.mjs", "../../../lib/ui/layers/panels/dataviews.mjs", "../../../lib/ui/layers/panels/reports.mjs", "../../../lib/ui/layers/panels/style.mjs", "../../../lib/ui/layers/legends/categorized.mjs", "../../../lib/ui/layers/legends/distributed.mjs", "../../../lib/ui/layers/legends/graduated.mjs", "../../../lib/ui/layers/legends/grid.mjs", "../../../lib/ui/layers/legends/basic.mjs", "../../../lib/ui/layers/_layers.mjs", "../../../lib/ui/locations/view.mjs", "../../../lib/ui/locations/listview.mjs", "../../../lib/ui/locations/infoj.mjs", "../../../lib/ui/locations/entries/boolean.mjs", "../../../lib/ui/locations/entries/dataview.mjs", "../../../lib/ui/locations/entries/date.mjs", "../../../lib/ui/locations/entries/defaults.mjs", "../../../lib/ui/locations/entries/documents.mjs", "../../../lib/ui/locations/entries/geometry.mjs", "../../../lib/ui/locations/entries/images.mjs", "../../../lib/ui/locations/entries/isoline.mjs", "../../../lib/ui/locations/entries/json.mjs", "../../../lib/ui/locations/entries/mvt_clone.mjs", "../../../lib/ui/locations/entries/numeric.mjs", "../../../lib/ui/locations/entries/pin.mjs", "../../../lib/ui/locations/entries/report.mjs", "../../../lib/ui/locations/entries/streetview.mjs", "../../../lib/ui/locations/entries/tab.mjs", "../../../lib/ui/locations/entries/text.mjs", "../../../lib/ui/locations/entries/textarea.mjs", "../../../lib/ui/locations/entries/time.mjs", "../../../lib/ui/locations/entries/_entries.mjs", "../../../lib/ui/locations/_locations.mjs", "../../../lib/ui/Dataview.mjs", "../../../lib/ui/Tabview.mjs", "../../../lib/ui/elements/card.mjs", "../../../lib/ui/elements/chkbox.mjs", "../../../lib/ui/elements/contextMenu.mjs", "../../../lib/ui/elements/drawer.mjs", "../../../lib/ui/elements/drawing.mjs", "../../../lib/ui/elements/dropdown.mjs", "../../../lib/ui/elements/dropdown_multi.mjs", "../../../lib/ui/elements/isoline_params_here.mjs", "../../../lib/ui/elements/isoline_params_mapbox.mjs", "../../../lib/ui/elements/legendIcon.mjs", "../../../lib/ui/elements/modal.mjs", "../../../lib/ui/elements/slider.mjs", "../../../lib/ui/elements/slider_ab.mjs", "../../../lib/ui/elements/toolbar_el.mjs", "../../../lib/ui/elements/_elements.mjs", "../../../lib/ui/utils/Chart.mjs", "../../../lib/ui/utils/Tabulator.mjs", "../../../lib/ui/utils/tabulatorUtils.mjs", "../../../lib/ui/utils/idleLogout.mjs", "../../../lib/ui/utils/imagePreview.mjs", "../../../lib/ui/utils/resizeHandler.mjs", "../../../lib/ui/utils/_utils.mjs", "../../../lib/ui/Gazetteer.mjs", "../../../lib/ui.mjs"],
  "sourcesContent": ["mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_zoom_to_extent: \"Zoom to filtered layer extent\",\n    layer_visibility: \"Toggle visibility\",\n  },\n  de: {\n    layer_zoom_to_extent: \"Zoom zum Ausma\u00DF des gefilterten Datensatzes\",\n    layer_visibility: \"Umschalten der Ansicht\",\n  },\n  cn: {\n    layer_zoom_to_extent: \"\u7F29\u653E\u81F3\u76F8\u5E94\u7B5B\u9009\u8303\u56F4\",\n    layer_visibility: \"\u5207\u6362\u53EF\u89C1\u6027\",\n  },\n  pl: {\n    layer_zoom_to_extent: \"Poka\u017C zasi\u0119g warstwy\",\n    layer_visibility: \"Widoczno\u015B\u0107\",\n  },\n  ko: {\n    layer_zoom_to_extent: \"\uD544\uD130\uB41C \uB808\uC774\uC5B4\uD06C\uAE30\uC5D0 \uC90C(zoom)\",\n    layer_visibility: \"\uD1A0\uAE00 \uAC00\uC2DC\uC131\",\n  },\n  fr: {\n    layer_zoom_to_extent: \"Zoom sur l'\u00E9tendue de la couche\",\n    layer_visibility: \"Changer la visiblit\u00E9\",\n  },\n  ja: {\n    layer_zoom_to_extent: \"\u30D5\u30A3\u30EB\u30BF\u30FC\u3055\u308C\u305F\u30EC\u30A4\u30E4\u30FC\u7BC4\u56F2\u3092\u30BA\u30FC\u30E0\u306B\",\n    layer_visibility: \"\u8868\u793A\u5207\u66FF\",\n  }\n})\n\nexport default (layer) => {\n\n  const fullScreen = layer.filter.zoomToExtent && mapp.utils.html`\n    <button\n      data-id=zoomToExtent\n      title=${mapp.dictionary.layer_zoom_to_extent}\n      class=\"mask-icon fullscreen\"\n      onclick=${async e=>{\n        \n        // response indicates whether locations were found.\n        let response = await layer.zoomToExtent()\n\n        // disable button if no locations were found.\n        e.target.disabled = !response\n      }}>` || ``\n \n  const toggleDisplay = mapp.utils.html.node`\n    <button\n      data-id=display-toggle\n      title=${mapp.dictionary.layer_visibility}\n      class=\"${`mask-icon toggle ${layer.display && 'on' || 'off'}`}\"\n      onclick=${e=>{\n        layer.display ? layer.hide() : layer.show()\n      }}>`\n\n  const header = mapp.utils.html`\n    <h2>${layer.name || layer.key}</h2>\n    ${fullScreen}\n    ${toggleDisplay}\n    <div class=\"mask-icon expander\"></div>`\n    \n  // Create content from layer view panels and plugins\n  const content = Object.keys(layer)\n    .map(key => mapp.ui.layers.panels[key] && mapp.ui.layers.panels[key](layer))\n    .filter(panel => typeof panel !== 'undefined')\n\n  if (layer.meta) {\n    const meta = mapp.utils.html.node`<p class=\"meta\">`\n    meta.innerHTML = layer.meta\n    content.unshift(meta)\n  }\n\n  layer.view = mapp.ui.elements.drawer({\n    data_id: `layer-drawer`,\n    class: 'layer-view raised',\n    header: header,\n    content: content\n  })\n\n  layer.showCallbacks.push(()=>{\n    toggleDisplay.classList.add(\"on\")\n  })\n\n  layer.hideCallbacks.push(()=>{\n    toggleDisplay.classList.remove(\"on\")\n  })\n\n  // The layer view drawer should be disabled if layer.tables are not available for the current zoom level.\n  layer.mapview.Map.getTargetElement().addEventListener('changeEnd', ()=>{\n    if (!layer.tables) return;\n    if (layer.tableCurrent() === null) return layer.view.classList.add(\"disabled\")\n    layer.view.classList.remove(\"disabled\")\n  })\n\n  // Adding the empty class to the layer view drawer element will hide the drawer toggle icon and prevent the expand action.\n  layer.view.children.length <= 1 && layer.view.classList.add('empty')\n}", "import view from './view.mjs'\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_group_hide_layers: \"Hide all layers in group\",\n  },\n  de: {\n    layer_group_hide_layers: \"Ausschalten aller Ebenen in Gruppe\",\n  },\n  cn: {\n    layer_group_hide_layers: \"\u9690\u85CF\u56FE\u5C42\",\n  },\n  pl: {\n    layer_group_hide_layers: \"Ukryj warstwy z tej grupy\",\n  },\n  ko: {\n    layer_group_hide_layers: \"\uADF8\uB8F9\uC5D0\uC11C \uB808\uC774\uC5B4 \uC228\uAE30\uAE30\",\n  },\n  fr: {\n    layer_group_hide_layers: \"Cacher les couches du groupe\",\n  },\n  ja: {\n    layer_group_hide_layers: \"\u30B0\u30EB\u30FC\u30D7\u304B\u3089\u30EC\u30A4\u30E4\u30FC\u3092\u96A0\u3059\",\n  }\n})\n\nexport default function (params){\n\n  if (!params.mapview) return\n\n  if (!params.target) return\n\n  const listview = {\n    node: params.target,\n    groups: {}\n  }\n\n  // Loop through the layers and add to layers list.\n  Object.values(params.mapview.layers).forEach(layer => add(layer))\n\n  // Loop through the layers and add to layers list.\n  function add(layer){\n\n    if (layer.hidden) return;\n\n    // Create the layer view.\n    view(layer)\n\n    if (!layer.group) {\n      listview.node.appendChild(layer.view)\n      listview.node.dispatchEvent(new CustomEvent('addLayerView', {\n        detail: layer\n      }))\n      return\n    }\n\n    // Create new layer group if group does not exist yet.\n    if (!listview.groups[layer.group]) createGroup(layer)\n\n    // Add layer to group.\n    listview.groups[layer.group].addLayer(layer)\n\n    listview.node.dispatchEvent(new CustomEvent('addLayerView', {\n      detail: layer\n    }))\n  }\n\n  function createGroup(layer) {\n\n    // Create group object.\n    const group = {\n      list: []\n    }\n  \n    // Assign layer group to listview object.\n    listview.groups[layer.group] = group\n\n    // Create hide all group layers button.\n    const hideLayers = mapp.utils.html.node`\n      <button\n        class=\"mask-icon on visibility-off\"\n        title=${mapp.dictionary.layer_group_hide_layers}\n        onclick=${e => {\n\n          e.target.style.visibility = 'hidden'\n\n          group.list\n            .filter(layer => layer.display)\n            .forEach(layer => layer.hide())\n\n        }}>`\n \n    group.meta = mapp.utils.html.node`<div class=\"meta\">`\n\n    group.drawer = mapp.ui.elements.drawer({\n      data_id: `layer-drawer`,\n      class: 'layer-group',\n      header: mapp.utils.html`\n        <h2>${layer.group}</h2>\n        ${hideLayers}\n        <div class=\"mask-icon expander\"></div>`,\n      content: group.meta\n    })\n\n    listview.node.appendChild(group.drawer)\n\n    // Check whether some layers group are visible and toggle visible button display accordingly.\n    group.chkVisibleLayer = () => {\n\n      hideLayers.style.visibility = group.list.some(layer => layer.display) ?\n        'visible' : 'hidden'\n    }\n\n    group.addLayer = (layer) => {\n\n      layer.group = group\n  \n      if (layer.groupmeta) {\n        const metaContent = group.meta.appendChild(mapp.utils.html.node`<div>`)\n        metaContent.innerHTML = layer.groupmeta\n      }\n  \n      group.list.push(layer)\n  \n      group.drawer.appendChild(layer.view)\n\n      group.chkVisibleLayer()\n\n      layer.showCallbacks.push(()=>group.chkVisibleLayer())\n\n      layer.hideCallbacks.push(()=>group.chkVisibleLayer())      \n    }\n  \n  }\n}", "export default {\n  like: filter_text,\n  match: filter_text,\n  numeric: filter_numeric,\n  integer: filter_numeric,\n  in: filter_in,\n  date: filter_date,\n  datetime: filter_date,\n  boolean: filter_boolean,\n  null: filter_null,\n}\n\nlet timeout;\n\nfunction applyFilter(layer, zoom) {\n  clearTimeout(timeout);\n\n  // enable zoomToExtent button.\n  let btn = layer.view.querySelector('[data-id=zoomToExtent]')\n  if (btn) btn.disabled = false;\n\n  // Debounce layer reload by 500\n  timeout = setTimeout(() => {\n    timeout = null;\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }, 500);\n}\n\nfunction filter_text(layer, entry){\n  return mapp.utils.html.node`\n  <input\n    type=\"text\"\n    onkeyup=${(e) => {\n      if (!e.target.value.length) {\n\n        // Delete filter for empty input.\n        delete layer.filter.current[entry.filter.field]\n      } else {\n        layer.filter.current[entry.filter.field] = {\n          [entry.filter.type]: encodeURIComponent(`${entry.filter.leading_wildcard && '%' || ''}${e.target.value}`)\n        }\n      }\n      applyFilter(layer)\n    }}>`;\n}\n\nfunction filter_boolean(layer, entry) {\n\n  function booleanFilter(checked) {\n    layer.filter.current[entry.filter.field] = {\n      boolean: checked\n    }\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }\n\n  booleanFilter(false)\n\n  return mapp.ui.elements.chkbox({\n    label: entry.label || entry.title || 'chkbox',\n    onchange: booleanFilter\n  })\n}\n\nfunction filter_null(layer, entry) {\n\n  function nullFilter(checked) {\n    layer.filter.current[entry.filter.field] = {\n      null: checked\n    }\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }\n\n  nullFilter(false)\n\n  return mapp.ui.elements.chkbox({\n    label: entry.label || entry.title || 'chkbox',\n    onchange: nullFilter\n  })\n}\n\nasync function filter_numeric(layer, entry){\n\n  if (!entry.filter.max) {\n\n    let response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?${mapp.utils.paramString({\n      template: 'field_max',\n      locale: layer.mapview.locale.key,\n      layer: layer.key,\n      table: layer.tableCurrent(),\n      field: entry.field,\n    })}`);\n\n    entry.filter.max = response.max\n  }\n\n  if (!entry.filter.min) {\n\n    let response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?${mapp.utils.paramString({\n      template: 'field_min',\n      locale: layer.mapview.locale.key,\n      layer: layer.key,\n      table: layer.tableCurrent(),\n      field: entry.field,\n    })}`);\n\n    entry.filter.min = response.min\n  }\n\n  if (!entry.filter.step) {\n\n    entry.filter.step = entry.filter.type === 'integer' ? 1 : 0.01;\n  }\n\n\n  layer.filter.current[entry.field] = Object.assign(\n    {\n      gte: Number(entry.filter.min),\n      lte: Number(entry.filter.max)\n    },\n    layer.filter.current[entry.field]);\n\n  applyFilter(layer);\n\n  return mapp.ui.elements.slider_ab({\n    min: Number(entry.filter.min),\n    max: Number(entry.filter.max),\n    step: entry.filter.step,\n    label_a: 'Greater than',\n    val_a: Number(entry.filter.min),\n    callback_a: e => {\n      layer.filter.current[entry.field].gte = Number(e.target.value)\n      applyFilter(layer)\n    },\n    label_b: 'Lesser than',\n    val_b: Number(entry.filter.max),\n    callback_b: e => {\n      layer.filter.current[entry.field].lte = Number(e.target.value)\n      applyFilter(layer)\n    }\n\n  })\n\n}\n\nasync function filter_in(layer, entry) {\n\n  if (entry.filter.distinct) {\n\n    const response = await mapp.utils.xhr(`${layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'distinct_values',\n        dbs: layer.dbs,\n        table: layer.tableCurrent(),\n        field: entry.field\n      }))\n\n    entry.filter.in = response\n      .map(r=>r[entry.field])\n      .filter(f=>f !== null)\n  }\n\n  const chkSet = new Set(layer.filter?.current[entry.filter.field]?.in || []);\n\n  if (entry.filter.dropdown) {\n\n    return mapp.ui.elements.dropdown_multi({\n      placeholder: 'Select Multiple',\n      entries: entry.filter.in.map(val => ({\n        title: val,\n        option: val,\n        selected: chkSet.has(val)\n      })),\n      callback: async (e, options) => {\n        Object.assign(layer.filter.current, {\n          [entry.filter.field]:{\n            in: options\n          }\n        })\n        layer.reload()\n        layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n      }\n    })\n  }\n\n  return entry.filter.in.map(val => mapp.ui.elements.chkbox({\n    val: val,\n    label: val,\n    checked: chkSet.has(val),\n    onchange: (checked, val) => {\n  \n      if (checked) {\n  \n        if (!layer.filter.current[entry.filter.field]) layer.filter.current[entry.filter.field] = {}\n  \n        if (!layer.filter.current[entry.filter.field].in) {\n          layer.filter.current[entry.filter.field].in = []\n        }\n  \n        // Add value to filter array.\n        layer.filter.current[entry.filter.field].in.push(encodeURIComponent(val));\n                  \n      } else {\n  \n        // Get index of value in filter array.\n        let idx = layer.filter.current[entry.filter.field]['in'].indexOf(encodeURIComponent(val));\n  \n        // Splice filter array on idx.\n        layer.filter.current[entry.filter.field].in.splice(idx, 1);\n  \n        if (!layer.filter.current[entry.filter.field].in.length) {\n          delete layer.filter.current[entry.filter.field].in\n        }\n  \n      }\n  \n      layer.reload()\n      layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  \n    }\n  }))\n}\n\nfunction filter_date(layer, entry) {\n\n  const inputAfter = mapp.utils.html.node`\n    <input\n      data-id=\"inputAfter\"\n      onchange=${onClose}\n      type=${entry.type === \"datetime\" && \"datetime-local\" || \"date\"}>`;\n\n  const inputBefore = mapp.utils.html.node`\n    <input\n      data-id=\"inputBefore\"\n      onchange=${onClose}\n      type=${entry.type === \"datetime\" && \"datetime-local\" || \"date\"}>`;\n\n  function onClose(e) {\n\n    if (e.target.dataset.id === 'inputAfter') {\n\n      layer.filter.current[entry.field] = Object.assign(\n        layer.filter.current[entry.field] || {},\n        {\n          gt: new Date(e.target.value).getTime() / 1000\n        })\n      \n    }\n\n    if (e.target.dataset.id === 'inputBefore') {\n\n      layer.filter.current[entry.field] = Object.assign(\n        layer.filter.current[entry.field] || {},\n        {\n          lt: new Date(e.target.value).getTime() / 1000\n        })\n      \n    }\n\n    layer.reload();\n    layer.mapview.Map.getTargetElement().dispatchEvent(new Event('changeEnd'))\n  }\n\n  return mapp.utils.html`\n    <div style=\"\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n      grid-gap: 5px;\">\n      <label>Date after\n        ${inputAfter}</label>\n      <label>Date before\n        ${inputBefore}</label>`\n\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_add_new_location: \"Add new locations\",\n  },\n  de: {\n    layer_add_new_location: \"Erstelle neue Lage\",\n  },\n  cn: {\n    layer_add_new_location: \"\u6570\u636E\u68C0\u89C6\",\n  },\n  pl: {\n    layer_add_new_location: \"Dodaj nowe miejsca\",\n  },\n  ko: {\n    layer_add_new_location: \"\uC0C8\uB85C\uC6B4 \uC704\uCE58 \uCD94\uAC00\",\n  },\n  fr: {\n    layer_add_new_location: \"Ajouter des nouveaux lieux\",\n  },\n  ja: {\n    layer_add_new_location: \"\u65B0\u3057\u3044\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u8FFD\u52A0\",\n  }\n})\n\nexport default layer => {\n\n  const options = {\n    layer,\n    srid: layer.srid,\n    edit: layer.edit,\n    mapview: layer.mapview\n  };\n  \n  const cards = typeof layer.edit === 'object' && Object.keys(layer.edit)\n    .map(key => mapp.ui.elements.drawing[key] && mapp.ui.elements.drawing[key](options, draw))\n    .filter(node => !!node)\n\n  // Short circuit panel creation without cards.\n  if (!cards.length) return;\n\n  const panel = mapp.ui.elements.drawer({\n    data_id: `draw-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_add_new_location}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`\n      ${cards}`,\n  });\n\n  return panel;\n}\n\nfunction draw(e, options) {\n\n  const btn = e.target\n\n  if (btn.classList.contains('active')) {\n    btn.classList.remove('active')\n    options.mapview.interactions.highlight()\n    return;\n  }\n\n  btn.classList.add('active')\n  \n  options.layer.show()\n\n  options.layer.view.querySelector('.header').classList.add('edited', 'active')\n\n  options.mapview.interactions.draw({\n    type: options.type,\n    geometryFunction: options.geometryFunction,\n    tooltip: options.tooltip,\n    //snapSource: layer.L.getSource(),\n    srid: options.srid,\n    callback: async feature => {\n      if (feature) {\n\n        const location = {\n          layer: options.layer,\n          new: true\n        }\n\n        location.id = await mapp.utils.xhr({\n          method: 'POST',\n          url: `${location.layer.mapview.host}/api/location/new?` +\n            mapp.utils.paramString({\n              locale: location.layer.mapview.locale.key,\n              layer: location.layer.key,\n              table: location.layer.tableCurrent()\n            }),\n          body: JSON.stringify({\n            [location.layer.geom]: feature.geometry\n          })\n        })\n      \n        options.layer.reload()\n                                \n        mapp.location.get(location)\n      }\n\n      options.layer.view.querySelector('.header').classList.remove('edited', 'active')\n\n      if (btn.classList.contains('active')) {\n        btn.classList.remove('active')\n        options.mapview.interactions.highlight()\n      }\n     \n    }\n  })\n\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_filter_header: \"Filter\",\n    layer_filter_select: \"Select filter from list\",\n  },\n  de: {\n    layer_filter_header: \"Filter\",\n    layer_filter_select: \"Filter Auswahl\",\n  },\n  cn: {\n    layer_filter_header: \"\u7B5B\u9009\",\n    layer_filter_select: \"\u4ECE\u5217\u8868\u7B5B\u9009\",\n  },\n  pl: {\n    layer_filter_header: \"Filtruj\",\n    layer_filter_select: \"Wybierz filtr z listy\",\n  },\n  ko: {\n    layer_filter_header: \"\uD544\uD130\",\n    layer_filter_select: \"\uB9AC\uC2A4\uD2B8\uB85C \uBD80\uD130 \uD544\uD130 \uC120\uD0DD\",\n  },\n  fr: {\n    layer_filter_header: \"Filtres\",\n    layer_filter_select: \"Choisir un filtre dans la liste\",\n  },\n  ja: {\n    layer_filter_header: \"\u30D5\u30A3\u30EB\u30BF\u30FC\",\n    layer_filter_select: \"\u30EA\u30B9\u30C8\u304B\u3089\u30D5\u30A3\u30EB\u30BF\u30FC\u3092\u9078\u629E\",\n  }\n})\n\nexport default layer => {\n\n  if (!layer.infoj?.some((entry) => entry.filter)) return;\n\n  layer.filter.list = layer.infoj\n    .filter(entry => entry.filter)\n    .filter(entry => !layer.filter?.exclude?.includes(entry.field))\n    .map(entry => {\n      entry.title = entry.filter.title || entry.title || entry.field\n      return entry\n    })\n\n  const dropdown = mapp.ui.elements.dropdown({\n    data_id: `${layer.key}-filter-dropdown`,\n    placeholder: mapp.dictionary.layer_filter_select,\n    entries: layer.filter.list,\n    callback: async (e, entry) => {\n      \n      // Display clear all button.\n      layer.filter.view.querySelector(\"[data-id=clearall]\").style.display = 'block';\n\n      if (entry.filter.card) return;\n\n      entry.filter.field = entry.filter.field || entry.field\n\n      entry.filter.remove = () => {\n        delete layer.filter.current[entry.filter.field];\n        delete entry.filter.card\n        layer.reload();\n\n        // enable zoomToExtent button.\n        let btn = layer.view.querySelector('[data-id=zoomToExtent]')\n        if (btn) btn.disabled = false;\n    \n        // Only show the clearall filter button when filter cards are displayed as children to the filter view.\n        layer.filter.view.querySelector(\"[data-id=clearall]\").style.display = layer.filter.view.children.length === 3 ? 'none' : 'block';\n      };\n\n      if (!mapp.ui.layers.filters[entry.filter.type]) return;\n\n      // If not implicit in the filter object the field will be assigned from the entry.\n      entry.filter.field = entry.filter.field || entry.field\n\n      const input = await mapp.ui.layers.filters[entry.filter.type](layer, entry);\n\n      entry.filter.card = layer.filter.view.appendChild(mapp.ui.elements.card({\n        header: entry.filter.title || entry.title,\n        close: entry.filter.remove,\n        content: input\n      })).title\n    }\n  })\n\n  const clearAll = mapp.utils.html`\n    <button\n      data-id=clearall\n      class=\"primary-colour\"\n      style=\"display: none; margin-bottom: 5px;\"\n      onclick=${e => {\n\n        layer.filter.list\n          .filter((entry) => entry.filter.card)\n          .forEach(entry => {\n            entry.filter.card.querySelector(\"[data-id=close]\").click()\n          })\n\n        // enable zoomToExtent button.\n        let btn = layer.view.querySelector('[data-id=zoomToExtent]')\n        if (btn) btn.disabled = false;\n\n        layer.reload()\n\n      }}>${mapp.dictionary.layer_filter_clear_all}`\n\n  layer.filter.view = mapp.ui.elements.drawer({\n    data_id: `filter-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_filter_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`\n      ${dropdown}\n      ${clearAll}`\n  })\n\n  return layer.filter.view\n}", "export default layer => {\n\n  const gazetteer = mapp.utils.html.node`\n  <div class=\"dropdown active\">\n    <input id=\"gazetteerInput\" type=\"text\" placeholder=${layer.gazetteer.placeholder || 'Search'}>\n    <ul></ul>`\n\n  mapp.ui.Gazetteer(Object.assign({\n    mapview: layer.mapview,\n    target: gazetteer,\n    layer: layer.key\n  }, layer.gazetteer));\n  \n  return gazetteer\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_dataview_header: \"Data Views\",\n  },\n  de: {\n    layer_dataview_header: \"Datenansichten\",\n  },\n  cn: {\n    layer_dataview_header: \"\u6570\u636E\u68C0\u89C6\",\n  },\n  pl: {\n    layer_dataview_header: \"Widoki danych\",\n  },\n  ko: {\n    layer_dataview_header: \"\uB370\uC774\uD130 \uBCF4\uAE30\",\n  },\n  fr: {\n    layer_dataview_header: \"Vues des donn\u00E9es\",\n  },\n  ja: {\n    layer_dataview_header: \"\u30C7\u30FC\u30BF\u30D3\u30E5\u30FC\",\n  }\n})\n\nexport default layer => {\n  \n  // Create chkbox controls for each dataview entry.\n  const dataviewChkboxes = Object.entries(layer.dataviews).map(entry => {\n\n    if (typeof entry[1] !== 'object') return;\n\n    // Assign layer and key to the dataview entry object.\n    const dataview = Object.assign(entry[1], {\n      key: entry[0],\n      layer,\n      host: layer.mapview.host\n    })\n\n    // Find tabview element from data-id attribute.\n    const tabview = document.querySelector(`[data-id=${dataview.target}]`)\n\n    // Return if the named tabview is not found in document.\n    if (!tabview) return;\n\n    // Assign target html element for dataview.\n    dataview.target = mapp.utils.html.node`<div class=\"dataview-target\">`\n\n    // Create dataview from entry.\n    layer.display && dataview.display && createTabAndShow()\n\n    function createTabAndShow() {\n\n      if (dataview.show) return dataview.show()\n\n      mapp.ui.Dataview(dataview)\n        .then(() => dataview.show())\n\n      // Pass dataview entry as detail to the tabview.\n      // The dataview entry becomes a tab.\n      tabview.dispatchEvent(new CustomEvent('addTab', {\n        detail: dataview\n      }))\n    }\n\n    layer.showCallbacks.push(()=>{\n      dataview.display && createTabAndShow()\n    })\n\n    // Return the chkbox control.\n    return mapp.ui.elements.chkbox({\n      label: dataview.title || dataview.key,\n      checked: !!dataview.display,\n      onchange: (checked) => {\n  \n        dataview.display = checked\n\n        // Show or remove tab according to the checked/display value.\n        dataview.display ?\n          createTabAndShow() :\n          dataview.remove()\n    \n      }\n    })\n\n  })\n\n  if (layer.dataviews.hide) return;\n\n  // Create a drawer with the dataview chkbox controls.\n  const drawer = mapp.ui.elements.drawer({\n    data_id: `dataviews-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_dataview_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`${dataviewChkboxes}`\n  })\n\n  return drawer\n}", "export default layer => {\n\n  // Create chkbox controls for each dataview entry.\n  const reportLinks = Object.keys(layer.reports).map(key => {\n\n    const report = layer.reports[key]\n  \n    report.key = key\n  \n    report.host = layer.mapview.host\n  \n    const href = `${report.host}/view?${mapp.utils.paramString({\n      template: report.template,\n      locale: layer.mapview.locale.key,\n      lat: mapp.hooks.current?.lat,\n      lng: mapp.hooks.current?.lng,\n      z: mapp.hooks.current?.z,\n    })}`;\n  \n    return mapp.utils.html`\n      <a\n        class=\"link-with-img\"\n        target=\"_blank\"\n        href=\"${href}\">\n        <div class=\"mask-icon event-note\"></div>\n        <span>${report.title || report.key}`;\n  \n  });\n  \n  // Create a drawer with the dataview chkbox controls.\n  const drawer = mapp.ui.elements.drawer({\n    data_id: `reports-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>Reports</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`${reportLinks}`\n  })\n  \n  return drawer\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    layer_style_header: \"Style\",\n    layer_style_select_theme: \"Select thematic style\",\n    layer_style_display_labels: \"Display labels\",\n    layer_style_switch_caption: \"Click on labels to switch visibility or \",\n    layer_style_switch_all: \"switch all\",\n    layer_grid_legend_ratio: \"Display colour as a ratio to the size\",\n    layer_style_cluster: \"Multiple locations\",\n  },\n  de: {\n    layer_style_header: \"Stil\",\n    layer_style_select_theme: \"Auswahl eines thematischen Stiles\",\n    layer_style_display_labels: \"Umschalten der Label Ansicht\",\n    layer_style_switch_caption: \"Auswahl der Label schaltet Ansicht um oder \",\n    layer_style_switch_all: \"Alle ausw\u00E4hlen\",\n    layer_grid_legend_ratio: \"Farbe im Verh\u00E4ltnis zur Gr\u00F6\u00DFe\",\n    layer_style_cluster: \"Mehrere Lagen\",\n  },\n  cn: {\n    layer_style_header: \"\u98CE\u683C\u6837\u5F0F\",\n    layer_style_select_theme: \"\u9009\u62E9\u4E3B\u9898\u98CE\u683C\",\n    layer_style_display_labels: \"\u663E\u793A\u6807\u7B7E\",\n    layer_style_switch_caption: \"\u5355\u51FB\u56FE\u6807\u4EE5\u5207\u6362\u53EF\u89C1\u6027 \",\n    layer_style_switch_all: \"\u5168\u90E8\u5207\u6362\",\n    layer_grid_legend_ratio: \"\u663E\u793A\u989C\u8272\u4E0E\u5C3A\u5BF8\u6BD4\u4F8B\",\n    layer_style_cluster: \"\u591A\u4E2A\u5730\u70B9\",\n  },\n  pl: {\n    layer_style_header: \"Styl\",\n    layer_style_select_theme: \"Wybierz styl tematyczny\",\n    layer_style_display_labels: \"Poka\u017C etykiety\",\n    layer_style_switch_caption: \"Kliknij etykiety aby zmieni\u0107 widoczno\u015B\u0107 albo \",\n    layer_style_switch_all: \"zmie\u0144 wszystkie\",\n    layer_grid_legend_ratio: \"Poka\u017C kolor w proporcji do rozmiaru\",\n    layer_style_cluster: \"Wi\u0119cej miejsc\",\n  },\n  ko: {\n    layer_style_header: \"\uC2A4\uD0C0\uC77C\",\n    layer_style_select_theme: \"\uC8FC\uC81C\uBCC4 \uC2A4\uD0C0\uC77C \uC120\uD0DD\",\n    layer_style_display_labels: \"\uB77C\uBCA8 \uD45C\uC2DC\",\n    layer_style_switch_caption: \"\uAC00\uC2DC\uC131 \uBCC0\uACBD\uC744 \uC704\uD574 \uB77C\uBCA8 \uD074\uB9AD \uB610\uB294 \",\n    layer_style_switch_all: \"\uBAA8\uB450 \uBCC0\uACBD\",\n    layer_grid_legend_ratio: \"\uD06C\uAE30\uBE44\uC728\uC5D0 \uB530\uB978 \uC0C9\uC0C1 \uD45C\uC2DC\",\n    layer_style_cluster: \"\uBCF5\uC218 \uC704\uCE58\",\n  },\n  fr: {\n    layer_style_header: \"Style\",\n    layer_style_select_theme: \"Choisir un th\u00E8me dans la liste\",\n    layer_style_display_labels: \"Afficher les \u00E9tiquettes\",\n    layer_style_switch_caption: \"Cliquer sur l'etiquette pour changer la visiblit\u00E9 ou \",\n    layer_style_switch_all: \"changer tout\",\n    layer_grid_legend_ratio: \"Rapport de coleur et de taille\",\n    layer_style_cluster: \"Plusieurs lieux\",\n  },\n  ja: {\n    layer_style_header: \"\u30B9\u30BF\u30A4\u30EB\",\n    layer_style_select_theme: \"\u30C6\u30FC\u30DE\u30B9\u30BF\u30A4\u30EB\u3092\u9078\u629E\",\n    layer_style_display_labels: \"\u30E9\u30D9\u30EB\u3092\u8868\u793A\",\n    layer_style_switch_caption: \"\u8868\u793A\u5207\u66FF\u3048\u306B\u306F\u5404\u30E9\u30D9\u30EB\u3092\u30AF\u30EA\u30C3\u30AF\u3059\u308B\u304B \",\n    layer_style_switch_all: \"\u5168\u8868\u793A\u6216\u3044\u306F\u5168\u975E\u8868\u793A\",\n    layer_grid_legend_ratio: \"\u8272\u306F\u30B5\u30A4\u30BA\u306E\u6BD4\u7387\u3067\u8868\u793A\",\n    layer_style_cluster: \"\u591A\u6570\u306E\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\",\n  }\n})\n\nexport default layer => {\n\n  if (layer.style.hidden) return;\n\n  const content = []\n\n  if (layer.style.opacitySlider) {\n\n    content.push(mapp.ui.elements.slider({\n      label: 'Change layer opacity:',\n      min: 0,\n      max: 100,\n      val: parseInt(layer.L.getOpacity()*100),\n      callback: e => {\n        layer.L.setOpacity(parseFloat(e.target.value/100))\n      }\n    }))\n  }\n  \n  // Add toggle for label layer.\n  if (layer.style.label) {\n\n    const labelCheckbox = mapp.ui.elements.chkbox({\n      data_id: 'labelCheckbox',\n      label: layer.style.label.title || mapp.dictionary.layer_style_display_labels,\n      checked: !!layer.style.label.display,\n      onchange: (checked) => {\n        layer.style.label.display = checked\n        layer.L.setStyle(layer.L.getStyle())\n      }\n    })\n\n    if (layer.style.label.minZoom || layer.style.label.maxZoom) {\n      layer.mapview.Map.getTargetElement().addEventListener(\"changeEnd\", () => {\n        const z = layer.mapview.Map.getView().getZoom();\n\n        const chkBox = layer.view.querySelector(\"[data-id=labelCheckbox]\")\n\n        if (z <= layer.style.label.minZoom || z >= layer.style.label.maxZoom) {\n          return chkBox.classList.add(\"disabled\");\n        }\n\n        chkBox.classList.remove(\"disabled\");\n      });\n    }\n\n    content.push(labelCheckbox)\n  }\n\n  // Add theme control\n  if (layer.style.themes && Object.keys(layer.style.themes).length > 1) {\n    content.push(mapp.utils.html`\n      <div>${mapp.dictionary.layer_style_select_theme}</div>\n        ${mapp.ui.elements.dropdown({\n          entries: Object.keys(layer.style.themes).map(key =>({\n            title:  layer.style.themes[key].title || key,\n            option: key\n          })),\n          callback: (e, entry) => {\n\n            // Set layer style theme from dropdown option.\n            layer.style.theme = layer.style.themes[entry.option]\n\n            // Clear the legend container.\n            layer.style.legend.innerHTML = ''\n            \n            // Render legend into drawer.\n            mapp.ui.layers.legends[layer.style.theme.type] && mapp.utils.render(\n              layer.style.legend.parentElement,\n              mapp.ui.layers.legends[layer.style.theme.type](layer))\n\n            layer.reload()\n          }\n        })}`)\n  }\n\n  if (layer.style.theme?.title && !layer.style.themes) {\n    content.push(mapp.utils.html`\n      <h3>${layer.style.theme.title}</h3>`)\n  }\n\n  function modalButton(){\n    return mapp.utils.html`\n      <button\n        style=\"height: 1.5em; width: 1.5em; float: right; margin-top: 5px;\"\n        class=\"mask-icon open-in-new\"\n        title=\"Open in Modal\"\n        onclick=${e=>{\n          let btn = e.target\n\n          btn.style.display = 'none'\n\n          mapp.ui.elements.modal({\n            target: layer.mapview.Map.getTargetElement(),\n            content: layer.style.legend.parentElement,\n            close: () => {\n              layer.style.drawer.append(layer.style.legend.parentElement)\n              btn.style.display = 'block'\n            }\n          })\n          \n        }}>`\n  }\n\n  mapp.ui.layers.legends[layer.style.theme?.type] && content.push(mapp.utils.html`\n    ${layer.style.allowModal && modalButton() || undefined}\n    <div class=\"legend\">\n      ${mapp.ui.layers.legends[layer.style.theme.type](layer)}`)\n\n  if (!content.length) return;\n\n  layer.style.drawer = mapp.ui.elements.drawer({\n    data_id: `style-drawer`,\n    class: 'raised',\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.layer_style_header}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: content\n  })\n\n  return layer.style.drawer\n}", "export default layer => {\n\n  const theme = layer.style.theme\n\n  const grid = []\n\n  // Switch all control\n  layer.filter && grid.push(mapp.utils.html`\n    <div\n      class=\"switch-all\"\n      style=\"grid-column: 1/3;\">\n      ${mapp.dictionary.layer_style_switch_caption}\n      <button\n        class=\"primary-colour bold\"\n        onclick=${e => {\n          e.target.closest('.legend').querySelectorAll('.switch').forEach(_switch => _switch.click())\n\n          // theme flag is set in styles or theme.\n          (layer.style.filter || theme.filter)\n            ? layer.L.changed()\n            : layer.reload()\n            \n        }}>${mapp.dictionary.layer_style_switch_all}</button>.`)\n\n  Object.entries(theme.cat).forEach(cat => {\n\n    // Assemble cat_style from defaults and cat style.\n    const cat_style = Object.assign(\n      {},\n      layer.style.default,\n      (cat[1].style && cat[1].style.icon || cat[1].style) || cat[1])\n\n    // Cat icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 24px; width: 24px; grid-column: 1;\">\n        ${mapp.ui.elements.legendIcon(\n          Object.assign({ width: 24, height: 24 }, cat_style)\n        )}`;\n\n    // Cat label with filter function.\n    let label = mapp.utils.html`\n      <div\n        class=${`label ${layer.filter && 'switch' ||''} ${\n          layer.filter?.current[theme.field]?.ni?.indexOf(cat[0]) === 0 ? 'disabled' : ''\n        }`}\n        style=\"grid-column: 2;\"\n        onclick=${e => {\n\n          if (!layer.filter) return;\n\n          e.target.classList.toggle('disabled')\n\n          // Add cat value to current NI (not in) field filter.\n          if (e.target.classList.contains('disabled')) {\n\n            // Create empty field filter object if non exists.\n            if (!layer.filter.current[theme.field]) {\n              layer.filter.current[theme.field] = {}\n            }\n\n            // Create empty NI filter array for field if non exists.\n            if (!layer.filter.current[theme.field].ni) {\n              layer.filter.current[theme.field].ni = []\n            }\n\n            // Push cat value into the NI filter array.\n            layer.filter\n              .current[theme.field].ni\n              .push(cat[1].keys || cat[0])\n           \n            // Flatten the filter in case of arrays filter.\n            layer.filter\n              .current[theme.field].ni = layer.filter.current[theme.field].ni.flat()\n\n          // Remove cat value from current NI field filter.\n          } else {\n\n            if (Array.isArray(cat[1].keys)) {\n\n              cat[1].keys.forEach(key => {\n\n                // Splice key out of the NI array.\n                layer.filter\n                  .current[theme.field].ni\n                  .splice(layer.filter.current[theme.field].ni.indexOf(key), 1)\n\n              })\n\n            } else {\n\n              // Splice value out of the NI array.\n              layer.filter\n                .current[theme.field].ni\n                .splice(layer.filter.current[theme.field].ni.indexOf(cat[0]), 1)\n\n            }\n \n            // Delete current field filter if NI array is empty.\n            if (!layer.filter.current[theme.field].ni.length) {\n              delete layer.filter.current[theme.field]\n            }\n          }\n\n          // theme flag is set in styles or theme.\n          (layer.style.filter || theme.filter)\n            ? layer.L.changed()\n            : layer.reload()\n\n        }}>${cat[1].label || cat[0]}`\n\n    // Push icon and label into legend grid.\n    grid.push(mapp.utils.html`\n    <div \n      data-id=${cat[0]}\n      class=\"contents\">\n      ${icon}${label}`)\n  })\n\n  // Attach row for cluster locations.\n  if (layer.style.cluster) {\n  \n    // Create cluster icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 40px; width: 40px;\">\n        ${mapp.ui.elements.legendIcon(Object.assign({\n          width: 40,\n          height: 40\n        }, layer.style.default, layer.style.cluster))}`\n   \n    // Create cluster label.\n    let label = mapp.utils.html`\n      <div\n        class=\"label\">\n        ${mapp.dictionary.layer_style_cluster}`\n\n    // Push icon and label into legend grid.\n    grid.push(mapp.utils.html`\n      <div \n        data-id=\"cluster\"\n        class=\"contents\">\n        ${icon}${label}`)\n  }\n\n  layer.style.legend = mapp.utils.html.node`<div class=\"grid\">${grid}`\n\n  return layer.style.legend\n}", "export default layer => {\n  layer.style.legend = mapp.utils.html.node`<div>`\n\n  return layer.style.legend\n}", "export default layer => {\n\n  const theme = layer.style.theme\n\n  const grid = []\n\n  theme.cat_arr.forEach(cat => {\n\n    // Assemble cat_style from defaults and cat style.\n    const cat_style = Object.assign(\n      {},\n      layer.style.default,\n      (cat.style && cat.style.icon || cat.style) || cat)\n\n    // Cat icon.\n    let icon = mapp.utils.html`\n      <div\n        style=\"height: 24px; width: 24px; grid-column: 1;\">\n        ${mapp.ui.elements.legendIcon(\n          Object.assign({ width: 24, height: 24 }, cat_style)\n        )}`;\n\n    // Cat label.\n    let label = mapp.utils.html`\n      <div class=\"label\" style=\"grid-column: 2;\">${cat.label || cat.value}`\n\n    // Push icon and label into legend grid.\n    grid.push(mapp.utils.html`\n      <div \n        data-id=${cat.value}\n        class=\"contents\">\n        ${icon}${label}`)\n\n  })\n\n  layer.style.legend = mapp.utils.html.node`<div class=\"grid\">${grid}`\n\n  return layer.style.legend\n}", "export default layer => {\n\n  const grid = []\n\n  grid.push(mapp.ui.elements.dropdown({\n    entries: Object.entries(layer.grid_fields).map(e=>({\n      title: e[0],\n      options: e[1]\n    })),\n    callback: (e, entry) => {\n      layer.grid_size = entry.options\n      layer.reload()\n    }\n  }))\n\n  const n = layer.style.range.length\n\n  const xmlSerializer = new XMLSerializer()\n\n  const centreBit = mapp.utils.html`\n  <div\n    class=\"grid\"\n    style=${`grid-template-columns: repeat(${n}, 1fr); grid-template-rows: 20px 20px 20px 20px;`}>\n    <div data-id=\"size-labels\" class=\"contents\">\n      <span data-id=\"size-min\" style=\"grid-row:1;grid-column:1;\">min</span>\n      <span data-id=\"size-avg\" style=${`grid-row:1;grid-column:${Math.ceil(n/2)};text-align:center;`}>avg</span>\n      <span data-id=\"size-max\" style=${`grid-row:1;grid-column:${n};text-align:end;`}>max</span>\n    </div>\n    <div data-id=\"size-icons\" class=\"contents\">\n      ${layer.style.range.map((colour, i)=>{\n\n        let icon = mapp.utils.svg.node`<svg height=50 width=50>\n          <circle\n            fill='#777'\n            cx=27\n            cy=27\n            r='${(23/n)*(i+1)}'/>\n          <circle\n            fill='#999'\n            cx=25\n            cy=25\n            r='${(23/n)*(i+1)}'/>`\n\n        let backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n\n        const inlineStyle = `\n          grid-row:2;\n          grid-column:${i+1};\n          background-position: center;\n          background-repeat: no-repeat;\n          background-size: contain;\n          width: 100%;\n          height: 100%;\n          background-image: url(${backgroundImage});`\n\n        return mapp.utils.html`<div style=${inlineStyle}>`\n\n      })}\n    </div>\n    <div data-id=\"colour-icons\" class=\"contents\">\n      ${layer.style.range.map((colour, i)=>mapp.utils.html`\n        <div style=${`grid-row:3;grid-column:${i+1};background-color:${colour};width:100%;height:100%;`}>\n      `)}\n    </div>\n    <div data-id=\"colour-labels\" class=\"contents\">\n      <span data-id=\"color-min\" style=\"grid-row:4;grid-column:1;\">min</span>\n      <span data-id=\"color-avg\" style=${`grid-row:4;grid-column:${Math.ceil(n/2)};text-align:center;`}>avg</span>\n      <span data-id=\"color-max\" style=${`grid-row:4;grid-column:${n};text-align:end;`}>max</span>\n    </div>\n  </div>`\n\n  grid.push(centreBit)\n\n  // Create grid_size dropdown.\n  grid.push(mapp.ui.elements.dropdown({\n    entries: Object.entries(layer.grid_fields).map(e=>({\n      title: e[0],\n      options: e[1]\n    })),\n    span: Object.keys(layer.grid_fields)[1],\n    callback: (e, entry) => {\n      layer.grid_color = entry.options\n      layer.reload()\n    }\n  }))\n\n  grid.push(mapp.ui.elements.chkbox({\n    label: mapp.dictionary.layer_grid_legend_ratio,\n    onchange: (checked) => {\n      layer.grid_ratio = checked\n      layer.reload()    \n    }}))\n\n  layer.style.legend = mapp.utils.html.node`\n    <div class=\"legend\">${grid}`\n\n  layer.style.legend.addEventListener('update', () => {\n      layer.style.legend.querySelector('[data-id=size-min]').textContent = layer.sizeMin.toLocaleString('en-GB', { maximumFractionDigits: 0 });\n      layer.style.legend.querySelector('[data-id=size-avg]').textContent = layer.sizeAvg.toLocaleString('en-GB', { maximumFractionDigits: 0 });\n      layer.style.legend.querySelector('[data-id=size-max]').textContent = layer.sizeMax.toLocaleString('en-GB', { maximumFractionDigits: 0 });\n\n      if (layer.grid_ratio) {\n\n        layer.style.legend.querySelector('[data-id=color-min]').textContent = layer.colorMin.toLocaleString('en-GB', { maximumFractionDigits: 0, style: 'percent' });\n        layer.style.legend.querySelector('[data-id=color-avg]').textContent = layer.colorAvg.toLocaleString('en-GB', { maximumFractionDigits: 0, style: 'percent' });\n        layer.style.legend.querySelector('[data-id=color-max]').textContent = layer.colorMax.toLocaleString('en-GB', { maximumFractionDigits: 0, style: 'percent' });\n\n      } else {\n\n        layer.style.legend.querySelector('[data-id=color-min]').textContent = layer.colorMin.toLocaleString('en-GB', { maximumFractionDigits: 0 });\n        layer.style.legend.querySelector('[data-id=color-avg]').textContent = layer.colorAvg.toLocaleString('en-GB', { maximumFractionDigits: 0 });\n        layer.style.legend.querySelector('[data-id=color-max]').textContent = layer.colorMax.toLocaleString('en-GB', { maximumFractionDigits: 0 });\n\n      }\n  })\n\n  return layer.style.legend\n}", "export default layer => {\n\n  const grid = []\n\n  let icon = mapp.utils.html`\n  <div\n    style=\"height: 24px; width: 24px;\">\n    ${mapp.ui.elements.legendIcon(\n      Object.assign({ width: 24, height: 24 }, Object.assign({}, layer.style.default, layer.style.theme.style))\n    )}`;\n\n  grid.push(mapp.utils.html`\n    <div \n      class=\"contents\">\n      ${icon}<div class=\"label\">${layer.style.theme.label}`)\n\n  layer.style.legend = mapp.utils.html.node`<div class=\"grid\">${grid}`\n\n  return layer.style.legend\n}", "import view from './view.mjs'\n\nimport listview from './listview.mjs'\n\nimport filters from './filters.mjs'\n\n// Panels\n\nimport edit from './panels/draw.mjs'\n\nimport filter from './panels/filter.mjs'\n\nimport gazetteer from './panels/gazetteer.mjs'\n\nimport dataviews from './panels/dataviews.mjs'\n\nimport reports from './panels/reports.mjs'\n\nimport style from './panels/style.mjs'\n\n// Styles\n\nimport categorized from './legends/categorized.mjs'\n\nimport distributed from './legends/distributed.mjs'\n\nimport graduated from './legends/graduated.mjs'\n\nimport grid from './legends/grid.mjs'\n\nimport basic from './legends/basic.mjs'\n\nexport default {\n  view,\n  listview,\n  filters,\n  panels: {\n    edit,\n    style,\n    filter,\n    gazetteer,\n    reports,\n    dataviews\n  },\n  legends: {\n    categorized,\n    distributed,\n    graduated,\n    grid,\n    basic,\n  },\n  styles: {\n    categorized: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return categorized(layer)},\n    graduated: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return graduated(layer)},\n    grid: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return grid(layer)},\n    basic: layer => {console.warn('Please use mapp.layers.legends instead of mapp.layers.styles'); return basic(layer)},\n  }\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    location_zoom: \"Zoom map to feature bounds\",\n    location_save: \"Save changes to cloud\",\n    location_remove: \"Remove feature from selection\",\n    location_delete: \"Delete location\",\n  },\n  de: {\n    location_zoom: \"Ansicht den Lagen Geometrien anpassen\",\n    location_save: \"Speichern der Daten\u00E4nderungen\",\n    location_remove: \"Lagen Auswahl aufheben\",\n    location_delete: \"L\u00F6schen der Lage\",\n  },\n  cn: {\n    location_zoom: \"\u7F29\u653E\u5730\u56FE\u81F3\u76EE\u6807\u8303\u56F4\",\n    location_save: \"\u5C06\u66F4\u6539\u4FDD\u5B58\u81F3\u4E91\",\n    location_remove: \"\u5220\u9664\u6240\u9009\u76EE\u6807\u8981\u7D20\",\n    location_delete: \"\u5220\u9664\u5730\u70B9\",\n  },\n  pl: {\n    location_zoom: \"Poka\u017C zasi\u0119g miejsca\",\n    location_save: \"Zapisz zmiany\",\n    location_remove: \"Odznacz miejsce\",\n    location_delete: \"Usu\u0144 miejsce\",\n  },\n  ko: {\n    location_zoom: \"\uD55C\uACC4\uB97C \uD3EC\uD568\uD55C \uC90C \uC9C0\uB3C4\",\n    location_save: \"\uBCC0\uACBD\uC0AC\uD56D \uD06C\uB77C\uC6B0\uB4DC \uC800\uC7A5\",\n    location_remove: \"\uC120\uD0DD\uC5D0\uC11C \uD2B9\uC9D5 \uC81C\uAC70\",\n    location_delete: \"\uC704\uCE58 \uC0AD\uC81C\",\n  },\n  fr: {\n    location_zoom: \"Zoom sur le lieu\",\n    location_save: \"Enregistrer les modifications\",\n    location_remove: \"Le d\u00E9s\u00E9lectionner\",\n    location_delete: \"Supprimer le lieu\",\n  },\n  ja: {\n    location_zoom: \"\u30D5\u30A3\u30FC\u30C1\u30E3\u7BC4\u56F2\u306B\u306F\u30DE\u30C3\u30D7\u3092\u30BA\u30FC\u30E0\",\n    location_save: \"\u30AF\u30E9\u30A6\u30C9\u306B\u5909\u66F4\u3092\u4FDD\u5B58\",\n    location_remove: \"\u9078\u629E\u304B\u3089\u30D5\u30A3\u30FC\u30C1\u30E3\u30FC\uFF08\u6A5F\u80FD\uFF09\u3092\u524A\u9664\",\n    location_delete: \"\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u524A\u9664\",\n  }\n})\n\nexport default location => {\n\n  location.removeCallbacks?.push(function(){\n    location.view.remove()\n  })\n\n  location.updateCallbacks?.push(function(){\n    location.view.dispatchEvent(new Event('updateInfo'))\n  })\n\n  // Header with expander icon. \n  const header = [\n    mapp.utils.html`<h2>${location.record.symbol}`,\n    mapp.utils.html`<div class=\"mask-icon expander\">`\n  ]\n\n  // Zoom to location bounds.\n  location.infoj.some(\n    entry => (entry.type === 'pin' || entry.type === 'geometry')\n      && entry.value) && header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_zoom}\n      class = \"mask-icon search\"\n      onclick = ${e => {\n        location.flyTo()\n      }}>`)\n\n  // Edit icon.\n  if (!location.new && location.layer?.toggleLocationViewEdits) {\n\n    // Remove edit from infoj entries\n    function removeEdits(){\n\n      location.infoj.forEach(entry => {\n\n        // Remove newValue\n        delete entry.newValue\n\n        if (!entry.edit) return;\n  \n        entry._edit = entry.edit\n        delete entry.edit\n      })\n    }\n\n    removeEdits()\n\n    // After location update...\n    location.updateCallbacks.push(()=>{\n\n      // Remove on class from toggle.\n      editToggle.classList.remove('on')\n      removeEdits()\n      infoj.remove()\n      infoj = mapp.ui.locations.infoj(location)\n      location.view.appendChild(infoj)\n    })\n\n    const editToggle = mapp.utils.html.node`\n      <button\n        title = \"Enable edits\"\n        class = \"mask-icon build\"\n        onclick = ${e => {\n\n          // Edits are on\n          if (e.target.classList.contains('on')) {\n\n            // Remove on class from button.\n            e.target.classList.remove('on')\n\n            // Remove edits from infoj.\n            removeEdits()\n\n          } else {\n\n            // Add on class to button.\n            e.target.classList.add('on')\n            \n            // Restore edit in infoj entries\n            location.infoj.forEach(entry => {\n\n              if (!entry._edit) return;\n\n              entry.edit = entry._edit\n              delete entry._edit\n            })\n\n          }\n\n          infoj.remove()\n        \n          infoj = mapp.ui.locations.infoj(location)\n      \n          location.view.appendChild(infoj)\n        }}>`\n\n    header.push(editToggle)\n  }\n\n  // Update icon.\n  header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_save}\n      class = \"mask-icon cloud-upload\"\n      style = \"display: none;\"\n      onclick = ${e => {\n        location.view.classList.add('disabled')\n        location.update()\n      }}>`)\n\n  // Trash icon.\n  location.layer?.edit?.delete && header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_delete}\n      class = \"mask-icon trash\"\n      onclick = ${e => {\n        location.trash()\n      }}>`)\n\n  // Clear selection.\n  header.push(mapp.utils.html`\n    <button\n      title = ${mapp.dictionary.location_remove}\n      class = \"mask-icon close no\"\n      onclick = ${e => {\n        location.remove()\n        // location.layer.mapview.Map.updateSize()\n      }}>`)\n\n  location.view = mapp.ui.elements.drawer({\n    class: 'location-view raised expanded',\n    header: header\n  })\n\n  let infoj = location.view.appendChild(mapp.ui.locations.infoj(location))\n\n  //location.view.dispatchEvent(new CustomEvent('appendInfoj'))\n\n  location.view.querySelector('.header').style.borderBottom = `3px solid ${location.record.colour}`\n\n  // Add listener for custom valChange event.\n  location.view.addEventListener('valChange', e => {\n\n    // entry object is provided as event detail.\n    if (e.detail.value != e.detail.newValue) {\n\n      // New value is different from current value.\n      e.detail.node.classList.add('val-changed')\n      \n    } else {\n\n      // New value is the same as current value.\n      delete e.detail.newValue\n      e.detail.node.classList.remove('val-changed')      \n    }\n\n    // Hide upload button if no other field in the infoj has a newValue.\n    location.view.querySelector('.cloud-upload')\n      .style.display = location.infoj\n        .some(entry => typeof entry.newValue !== 'undefined')\n          && 'inline-block' || 'none';\n\n  })\n\n  location.view.addEventListener('updateInfo', ()=>{\n\n    infoj.remove()\n\n    location.view.querySelector('.cloud-upload').style.display = 'none'\n\n    location.view.classList.remove('disabled')\n\n    infoj = mapp.ui.locations.infoj(location)\n\n    location.view.appendChild(infoj)\n  })\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    location_clear_all: \"Clear locations\",\n  },\n  de: {\n    location_clear_all: \"Entferne Auswahl\"\n  },\n  cn: {\n    location_clear_all: \"\uBAA8\uB4E0 \uC704\uCE58 \uC81C\uAC70\",\n  },\n  pl: {\n    location_clear_all: \"Wyczy\u015B\u0107 selekcje\",\n  },\n  ko: {\n    location_clear_all: \"\u6E05\u9664\u6240\u6709\u5730\u70B9\",\n  },\n  fr: {\n    location_clear_all: \"Des\u00E9lectionner tous les lieux.\",\n  },\n  ja: {\n    location_clear_all: \"\u5168\u30ED\u30B1\u30FC\u30B7\u30E7\u30F3\u3092\u30AF\u30EA\u30A2\",\n  }\n})\n\nconst list = [\n  {\n    symbol: 'A',\n    colour: '#2E6F9E'\n  },\n  {\n    symbol: 'B',\n    colour: '#EC602D'\n  },\n  {\n    symbol: 'C',\n    colour: '#5B8C5A'\n  },\n  {\n    symbol: 'D',\n    colour: '#B84444'\n  },\n  {\n    symbol: 'E',\n    colour: '#514E7E'\n  },\n  {\n    symbol: 'F',\n    colour: '#E7C547'\n  },\n  {\n    symbol: 'G',\n    colour: '#368F8B'\n  },\n  {\n    symbol: 'H',\n    colour: '#841C47'\n  },\n  {\n    symbol: 'I',\n    colour: '#61A2D1'\n  },\n  {\n    symbol: 'J',\n    colour: '#37327F'\n  }\n]\n\nexport default params => {\n\n  if (!params.mapview) return\n\n  if (!params.target) return\n\n  const listview = {\n    node: params.target,\n    mapview: params.mapview\n  }\n\n  const clearAll = listview.node.appendChild(mapp.utils.html.node`\n    <button \n      style=\"display: none; width: 100%; text-align: right;\"\n      class=\"tab-display bold primary-colour text-shadow\"\n      onclick=${e => {\n        Object.values(listview.mapview.locations)\n          .forEach(location => location.remove())\n      }}>\n      ${mapp.dictionary.location_clear_all}`)\n\n  params.mapview.locations = new Proxy(params.mapview.locations, {\n    set: function(target, key, location){\n\n      // Find a free record for location.\n      const record = list.find(record => !record.hook)\n\n      // Set record hook from location.\n      record.hook = location.hook\n\n      // Assign record to the location.\n      location.record = record\n\n      // Set style from record.\n      location.style = {\n        strokeColor: record.colour,\n        fillColor: record.colour,\n        fillOpacity: 0.1\n      };\n\n      // Create OL Style object.\n      location.Style = mapp.utils.style([\n        {\n          strokeColor: \"#000\",\n          strokeOpacity: 0.1,\n          strokeWidth: 8,\n        },\n        {\n          strokeColor: \"#000\",\n          strokeOpacity: 0.1,\n          strokeWidth: 6,\n        },\n        {\n          strokeColor: \"#000\",\n          strokeOpacity: 0.1,\n          strokeWidth: 4,\n        },\n        {\n          strokeColor: location.style.strokeColor || \"#000\",\n          strokeWidth: 2,\n          fillColor: location.style.fillColor\n          || location.style.strokeColor || \"#fff\",\n          fillOpacity: location.style.fillOpacity || 0.2,\n        }\n      ]);\n\n      // Create OL Style object for pin icon.\n      location.pinStyle = mapp.utils.style({\n        icon: {\n          type: 'markerLetter',\n          letter: record.symbol,\n          color: location.style.strokeColor,\n          scale: 3,\n          anchor: [0.5, 1]\n        }\n      })\n\n      Reflect.set(...arguments)\n\n      // Create location view.\n      mapp.ui.locations.view(location)\n\n      // Collapse all location view drawer in list.\n      Object.values(listview.node.children).forEach(el => el.classList.remove('expanded'))\n\n      // New location view should be inserted after clearAll but before first current location view.\n      listview.node.insertBefore(location.view, clearAll.nextSibling)\n\n      // Send event after the location view has been added to the DOM.\n      location.view.dispatchEvent(new Event('addLocationView'))\n\n      // Show the clear all button.\n      clearAll.style.display = 'block'\n\n      // Click locations tab header.\n      document.querySelector(\"[data-id=locations]\").click()\n\n      // Hide locations tab if no gazetteer input present.\n      document.querySelector(\"[data-id=locations]\").style.display = 'block'\n\n      return true\n    },\n    deleteProperty: function (target, hook) {\n      Reflect.deleteProperty(...arguments)\n\n      let record = list.find(record => record.hook === hook)\n      record && delete record.hook\n\n      setTimeout(() => {\n\n        // clearAll should not be shown without locations to clear\n        if (!document.querySelectorAll('#locations > .location-view').length) {\n          \n          // Activate the layers panel\n          document.querySelector(\"[data-id=layers]\").click()\n\n          clearAll.style.display = 'none'\n\n          let gazInput = document.querySelector('#locations #gazetteerInput')\n\n          if (gazInput) {\n\n            // Clear the gazetteer input value.\n            gazInput.value = '';\n          } else {\n\n            // Hide locations tab if no gazetteer input present.\n            document.querySelector(\"[data-id=locations]\").style.display = 'none'\n          }\n        }\n        \n      }, 300)\n\n      return true\n    },\n  })\n\n  return listview\n}", "export default (location, infoj) => {\n\n  if (!location.infoj) return\n\n  // Create a grid view div.\n  const listview = mapp.utils.html.node`<div class=\"location-view-grid\">`\n\n  // Create object to hold view groups.\n  const groups = {}\n\n  // Iterate through info fields and add to info table.\n  for (const entry of infoj || location.infoj) {\n\n    // The location view entries should not be processed if the view is disabled.\n    if (location.view && location.view.classList.contains('disabled')) break;\n\n    // Location view elements will appended to the entry.listview element.\n    entry.listview = listview\n\n    // The default entry type is text.\n    entry.type = entry.type || 'text'\n\n    // Lookup for json value field entry\n    if (entry.objectAssignFromField) {\n\n      let fieldEntry = entry.location.infoj.find(_entry => _entry.field === entry.objectAssignFromField)\n\n      fieldEntry && Object.assign(entry, fieldEntry.value)\n    }\n\n    if (entry.objectMergeFromField) {\n\n      let fieldEntry = entry.location.infoj.find(_entry => _entry.field === entry.objectMergeFromField)\n\n      fieldEntry && mapp.utils.merge(entry, fieldEntry.value)\n    }    \n\n    // Skip entry.\n    if (entry.skipEntry) continue;\n\n    // Skip entries which are falsy if flagged.\n    if (entry.skipFalsyValue\n      && !entry.value\n      && !entry.edit) continue;\n\n    // Skip entries which are undefined if flagged.\n    if (entry.skipUndefinedValue\n      && typeof entry.value === 'undefined'\n      && !entry.edit) continue;\n\n    // Skip entries which are null if flagged.\n    if (entry.skipNullValue\n      && entry.value === null\n      && !entry.edit) continue;\n\n    if (entry.nullValue\n      && entry.value === null\n      && !entry.defaults\n      && !entry.edit) entry.value = entry.nullValue;\n\n    // Groups must be checked first since it should be possible to next any type of location view element in a group.\n    if (entry.group) {\n\n      // Create new group\n      if (!groups[entry.group]) {\n\n        groups[entry.group] = entry.listview.appendChild(\n          mapp.ui.elements.drawer({\n            class: `group ${entry.expanded && 'expanded' || ''}`,\n            header: mapp.utils.html`\n              <h3>${entry.group}</h3>\n              <div class=\"mask-icon expander\"></div>`,\n          }))\n      }\n\n      // The group will replace the entry listview to which elements will be appended.\n      entry.listview = groups[entry.group]\n    }\n\n    entry.node = entry.listview.appendChild(mapp.utils.html.node`\n      <div\n        data-type=${entry.type}\n        class=${`contents ${entry.type} ${entry.class || ''} ${entry.inline && 'inline' || ''}`}>`)\n\n    if (entry.title) {\n\n      entry.node.append(mapp.utils.html.node`\n        <div\n          class=\"label\"\n          style=\"${`${entry.css_title || ''}`}\"\n          title=\"${entry.tooltip || null}\">${entry.title}`)\n    }\n\n    // Check whether entry has a value\n    if (entry.value === null || typeof entry.value === 'undefined') {\n\n      // Assign the default value if set.\n      entry.value = entry.default || entry.value\n    }\n\n    // Check whether query returns data.\n    if (entry.queryCheck) {\n\n      // Stringify paramString from object.\n      const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n      // Run the entry query.\n      mapp.utils\n        .xhr(`${entry.host || entry.location.layer.mapview.host}/api/query?${paramString}`)\n        .then(response => {\n          \n          // Return if response is null. entry.node will remain empty.\n          if (response === null) return;\n\n          // Assign response to entry data.\n          // Prevents dataviews to query again the same data.\n          entry.data = response;\n\n          // Create element to be appended into empty entry.node\n          const el = mapp.ui.locations.entries[entry.type]?.(entry)\n\n          el && entry.node.append(el)\n        })\n\n      continue;\n    }\n\n    // Create element to be appended into empty entry.node\n    const el = mapp.ui.locations.entries[entry.type]?.(entry)\n\n    // Break this for loop!\n    if (el === 'break') break;\n\n    el && entry.node.append(el)\n  }\n\n  return listview\n}", "export default entry => {\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || entry.title,\n    checked: entry.value,\n    disabled: !entry.edit,\n    onchange: (checked) => {\n\n      entry.newValue = checked\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', {\n          detail: entry\n        }))\n  \n    }\n  })\n\n  const node = mapp.utils.html.node`${chkbox}`\n\n  return node\n}", "export default entry => {\n\n  // Dataview methods require the layer and host to be defined on the entry.\n  entry.layer = entry.location.layer\n  entry.host = entry.host || entry.location.layer.mapview.host\n\n  // An entry which depend on another entry field will not be displayed if that field value is falsy.\n  if (entry.dependents && entry.dependents.some(\n      dependant => entry.location.infoj.some(\n        _entry => (!_entry.value && _entry.field === dependant)\n      ))) delete entry.display;\n\n  // Dataview has already been created. e.g. after the location (view) is updated.\n  if (entry.update) {\n\n    // Update dataview if displayed.\n    entry.display && entry.update()\n\n    // Return elements to location view.\n    return mapp.utils.html.node`\n      ${entry.chkbox || ''}\n      ${entry.locationViewTarget || ''}`\n  }\n\n  // Dataview will be rendered into target identified by ID.\n  if (typeof entry.target === 'string' && document.getElementById(entry.target)) {\n\n    // Assign element by ID as target.\n    entry.target = document.getElementById(entry.target)\n  \n    // Create and update the dataview.\n    mapp.ui.Dataview(entry).then(() => entry.update())\n  \n    return;\n  }\n\n  // Find tabview element from data-id attribute.\n  entry.tabview = entry.tabview || typeof entry.target === 'string'\n    && document.querySelector(`[data-id=${entry.target}]`)\n\n  // Dataview will be rendered into a tabview panel.\n  if (entry.tabview) {\n\n    // Assign target html element for dataview.\n    entry.target = mapp.utils.html.node`<div class=\"dataview-target\">`\n\n    // Dataview should be displayed.\n    entry.display && createTabAndShow(entry)\n  };\n\n  // Dataview will be rendered into location view.\n  if (typeof entry.target === 'string') {\n      \n    entry.locationViewTarget = mapp.utils.html.node`\n      <div\n        class=\"${`location ${entry.class}`}\">`\n  \n    entry.target = entry.locationViewTarget\n\n    entry.display && mapp.ui.Dataview(entry).then(() => entry.update())\n  }\n\n  // A checkbox will only be created if the label key value is provided.\n  entry.chkbox = entry.label && mapp.ui.elements.chkbox({\n    label: entry.label,\n    checked: !!entry.display,\n    onchange: (checked) => {\n\n      entry.display = checked\n\n      // Dataview is location view.\n      if (entry.locationViewTarget) {\n\n        // Hide dataview\n        if (!entry.display) {\n          entry.locationViewTarget.style.display = 'none'\n          return;\n        }\n\n        entry.locationViewTarget.style.display = 'block'\n        \n        // Location view has already been created.\n        typeof entry.update === 'function' && entry.update()\n\n        // Create location view.\n        typeof entry.update !== 'function' && mapp.ui.Dataview(entry).then(() => {\n\n          // Run update query if data has not already been asigned.\n          typeof entry.data === 'object'\n            ? entry.setData(entry.data)\n            : entry.update()\n        })\n\n        return;\n      }\n\n      // Dataview is in tabview\n      entry.display ? createTabAndShow(entry) : entry.remove()\n    }\n  })\n\n  // Return elements to location view.\n  return mapp.utils.html.node`\n    ${entry.chkbox || ''}\n    ${entry.locationViewTarget || ''}`\n}\n\nfunction createTabAndShow(entry) {\n\n  // The show method indicates that the tab has already been created.\n  if (entry.show) return entry.show()\n\n  // Dataview creation must be complete for methods to be available.\n  mapp.ui.Dataview(entry).then(() => {\n\n    // Assign border style based on the location view record (from list)\n    entry.tab_style = `border-bottom: 3px solid ${entry.location.style.strokeColor}`\n\n    // Create tab after dataview creation is complete.\n    entry.tabview.dispatchEvent(new CustomEvent('addTab', {\n      detail: entry\n    }))\n\n    // Show the tab if display is true.\n    entry.display && entry.show()\n  })\n}", "export default entry => {\n\n  let val\n\n  if (entry.edit) {\n\n    val = mapp.utils.html.node`\n      <input\n        type=${entry.type === \"datetime\" && \"datetime-local\" || \"date\"}\n        value=${entry.value &&\n          (entry.type === \"datetime\" && new Date(entry.value * 1000).toISOString().split('Z')[0]\n            || new Date(entry.value * 1000).toISOString().split('T')[0])}\n        onchange=${e => {\n\n          entry.newValue = new Date(e.target.value).getTime() / 1000\n\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n\n        }}>`;\n        \n  } else {\n\n    val = entry.value && new Date(entry.value * 1000).toLocaleString(entry.locale, entry.options)\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${val}`\n\n  return node\n}", "export default entry => {\n\n  let val = entry.value\n\n  if (!val) {\n\n    val = entry.defaults === 'user' && mapp.user?.email || entry.nullValue\n\n    if (val) {\n \n      mapp.utils.xhr({\n        method: \"POST\",\n        url: `${entry.location.layer.mapview.host}/api/location/update?` +\n          mapp.utils.paramString({\n            locale: entry.location.layer.mapview.locale.key,\n            layer: entry.location.layer.key,\n            table: entry.location.layer.table,\n            id: entry.location.id,\n          }),\n        body: JSON.stringify({\n          [entry.field]: val\n        }),\n      });\n\n    }\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${entry.prefix}${val}${entry.suffix}`\n\n  return node\n}", "export default entry => {\n\n  const docs = entry.value.map(doc => mapp.utils.html`\n\t\t<div class=\"link-with-img\">\n      ${(entry.edit) && mapp.utils.html.node`\n        <button\n          class=\"mask-icon trash no\"\n          data-name=${doc.replace(/.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n          data-href=${doc}\n          onclick=${e => removeDocument(e)}>\n        </button>`}\t\t\n        <a target=\"_blank\"\n          href=${doc}>${doc.replace(/.*\\//, '').replace(/\\.([\\w-]{3})/, '')}`)\n\n  const upLoadBtn = mapp.utils.html.node`\n    <div class=\"mask-icon cloud-upload\">\n      <input\n        style=\"opacity: 0; width: 3em; height: 3em;\"\n        type=\"file\"\n        accept=\".txt,.pdf,.doc,.docx,.xls,.xlsx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document;\"\n        onchange=${upload}>`\n\n  entry.edit && docs.push(upLoadBtn)\n\n  if (!docs.length) return;\n\n  const docs_list = mapp.utils.html.node`<div>${docs}`\n\n  return docs_list;\n\n  async function upload(e) {\n\n    entry.location.view?.classList.add('disabled')\n\n    const reader = new FileReader()\n      \n    const file = e.target.files[0]\n  \n    if (!file) return;\n\n    reader.onload = async readerOnload => {\n\n      const response = await mapp.utils.xhr({\n        method: 'POST',\n        requestHeader: {\n          'Content-Type': 'application/octet-stream'\n        },\n        url: `${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n          public_id: file.name,\n          resource_type: 'raw'\n        })}`,\n        body: readerOnload.target.result\n      })\n      \n      const secure_url = response.secure_url;\n      const public_id = response.public_id.replace(/.*\\//, '').replace(/\\.([\\w-]{3})/, '');\n\n      await mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query?` +\n        mapp.utils.paramString({\n          template: 'set_field_array',\n          locale: entry.location.layer.mapview.locale.key,\n          layer: entry.location.layer.key,\n          table: entry.location.table,\n          qID: entry.location.layer.qID,\n          id: entry.location.id,\n          action: 'append',\n          field: entry.field,\n          value: secure_url,\n        }))\n      \n      const newDoc = mapp.utils.html.node`\n        <div class=\"link-with-img\">\n          <button\n            class=\"mask-icon trash no\"\n            data-name=${public_id}\n            data-href=${secure_url}\n            onclick=${e => removeDocument(e)}>\n          </button>\n          <a target=\"_blank\"\n            href=${secure_url}>${public_id}`\n\n      docs_list.insertBefore(newDoc, upLoadBtn)\n\n      entry.location.view?.classList.remove('disabled')\n    }\n\n    reader.readAsDataURL(file)\n\n    e.target.value = ''\n  }\n\n\tasync function removeDocument(e) {\n\n\t\tif (!confirm('Remove document link?')) return;\n\n\t\tconst doc = e.target;\n\n    mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n      destroy: true,\n      public_id: doc.dataset.name\n    })}`)\n\n    await mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'set_field_array',\n        locale: entry.location.layer.mapview.locale.key,\n        layer: entry.location.layer.key,\n        table: entry.location.table,\n        qID: entry.location.layer.qID,\n        id: entry.location.id,\n        action: 'remove',\n        field: entry.field,\n        value: doc.dataset.href\n      }))    \n    \n    doc.parentNode.remove()\n  } \n}", "export default entry => {\n\n  entry.value = typeof entry.value === 'string' && JSON.parse(entry.value)\n    || entry.value\n\n  // Turn off display with no geometry to display.\n  entry.display = (entry.display && entry.value)\n\n  // Return if entry has no geometry value and is not editable.\n  if (!entry.value && !entry.edit) return;\n\n  // Assign Style if not already assigned.\n  entry.Style = entry.Style\n  \n    // Create OL style object from style object.\n    || typeof entry.style === 'object' && mapp.utils\n        .style(Object.assign({}, entry.location?.style || {}, entry.style))\n\n    // Assign style from location.\n    || entry.location.Style\n\n  // Assign method to show geometry in mapview.\n  entry.show = show\n\n  // Create checkbox to control geometry display.\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'Geometry',\n    data_id: `${entry.field}-chkbox`,\n    checked: !!entry.display,\n    disabled: !entry.value,\n    onchange: (checked) => {\n      \n      // Show geometry of checked.\n      if (checked) {\n        entry.show()\n\n      } else {\n        \n        // Remove the geometry layer from map.\n        entry.display = false\n        entry.L && entry.location.layer.mapview.Map.removeLayer(entry.L)\n      }\n    }\n  })\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show()\n\n  // Options for edit and modifying methods.\n  const options = {\n    entry,\n    layer: entry.location.layer,\n    srid: entry.srid || entry.location.layer.srid,\n    edit: entry.edit,\n    mapview: entry.location.layer.mapview,\n  };\n\n  // Push elements for drawing methods into list.\n  const list = typeof entry.edit === 'object' && Object.keys(entry.edit)\n    .map(key => mapp.ui.elements.drawing[key] && mapp.ui.elements.drawing[key](options, draw))\n    .filter(node => !!node)\n\n  // Push modify button into list.\n  if (entry.edit?.geometry) {\n\n    let modifyBtn = mapp.utils.html.node`\n      <button\n        class=\"flat bold wide primary-colour\"\n        onclick=${e=>modify(e, options)}>\n        Modify Geometry`\n\n    if (entry.edit?.modifyBtnOnly) {\n      return modifyBtn\n    }\n\n    list.push(modifyBtn)\n  }\n\n  // Push modify button into list.\n  entry.value && entry.edit?.delete && list.push(mapp.utils.html`\n    <button\n      class=\"flat wide no-colour\"\n      onclick=${() => {\n\n        if (entry.display) {\n          remove()\n          return;\n        }\n\n        entry.show()\n\n        // Allow for geometries to be shown before confirming the deletion.\n        setTimeout(remove, 500)\n\n        function remove(){\n\n          // Return if user does not confirm deletion.\n          if (!confirm('Delete Geometry?')) return;\n\n          // Set newValue to null in order update location field in database.\n          entry.newValue = null\n\n          // Must be removed prior to database update / re-render.\n          if (entry.L) {\n            entry.location.layer.mapview.Map.removeLayer(entry.L)\n            delete entry.L\n          }\n          \n          // Re-renders location view after database update.\n          options.entry.location.update()\n        }\n\n      }}>Delete Geometry`)\n\n  const icon = entry.style && mapp.utils.html`\n    ${mapp.ui.elements.legendIcon(\n      Object.assign({ width: 24, height: 24 }, entry.style)\n    )}`;\n\n  if (list) {\n\n    // Return drawer with list elements to entry node.\n    return mapp.ui.elements.drawer({\n      data_id: `draw-drawer`,\n      header: mapp.utils.html`\n        ${chkbox}\n        <div class=\"mask-icon expander\"></div>\n        ${icon}`,\n      content: mapp.utils.html`\n        ${list}`,\n    })\n\n  }\n\n  // Return checkbox only if list is empty.\n  return mapp.utils.html.node`<div class=\"flex-spacer\">${chkbox}${icon}`\n}\n\n// Method to toggle the entry's geometry display.\nfunction show() {\n\n  this.display = true\n\n  const chkbox = this.location\n    .view?.querySelector(`[data-id=${this.field}-chkbox] input`)\n  \n  if (chkbox) chkbox.checked = true\n    \n  if (this.L) {\n\n    // Remove existing layer to prevent assertion error.\n    this.location.layer.mapview.Map.removeLayer(this.L)\n    delete this.L\n  }\n\n  // Create new geometry layer from entry value\n  this.L = this.location.layer.mapview.geoJSON({\n    zIndex: this.zIndex || 99,\n    geometry: this.value,\n    Style: this.Style,\n    dataProjection: this.srid || this.location?.layer?.srid\n  })\n\n  // Removes layer from mapview when location is removed.\n  this.location.Layers.push(this.L)\n}\n\n// Method for button element to call draw interaction with options.\nfunction draw(e, options) {\n\n  // Get button from event target.\n  const btn = e.target\n\n  // Check whether to cancel interaction.\n  if (btn.classList.contains('active')) {\n    btn.classList.remove('active')\n\n    // Begin highlight interaction on mapview.\n    // Cancels current interaction.\n    options.mapview.interactions.highlight()\n    return;\n  }\n\n  btn.classList.add('active')\n\n  // Tick display checkbox if not already set.\n  !options.entry.display && options.entry.show()\n\n  // Remove existing entry geometry layer.\n  options.entry.L\n    && options.entry.location.layer.mapview.Map.removeLayer(options.entry.L)\n\n  options.mapview.interactions.draw({\n    type: options.type,\n    geometryFunction: options.geometryFunction,\n    tooltip: options.tooltip,\n    srid: options.srid,\n    callback: feature => {\n\n      // Reset interaction and button\n      btn.classList.remove('active')\n      options.mapview.interactions.highlight()\n\n      // The callback returns a feature as geojson.\n      if (feature) {\n\n        // Assign feature geometry as new value.\n        options.entry.newValue = feature.geometry\n        options.entry.location.update()\n        return;\n      }\n\n      // Add original layer back with no new feature geometry returned from draw interaction.\n      options.entry.L\n        && options.entry.location.layer.mapview.Map.addLayer(options.entry.L)\n\n    }\n  })\n}\n\n// Method for button element to call modify interaction with options.\nfunction modify(e, options) {\n\n  const btn = e.target\n\n  // Check whether to cancel interaction.\n  if (btn.classList.contains('active')) {\n    btn.classList.remove('active')\n\n    // Begin highlight interaction on mapview.\n    // Cancels current interaction.\n    options.mapview.interactions.highlight()\n    return;\n  }\n\n  btn.classList.add('active')\n\n  // Tick display checkbox if not already set.\n  !options.entry.display && options.entry.show()\n\n  // Remove existing entry geometry layer.\n  options.entry.location.layer.mapview.Map.removeLayer(options.entry.L)\n\n  const feature = options.entry.L.getSource().getFeatures()[0]\n\n  options.mapview.interactions.modify({\n    Feature: feature.clone(),\n    snapLayer: options.entry.location.layer,\n    srid: options.entry.srid || options.entry.location.layer.srid,\n    callback: feature => {\n\n      // Reset interaction and button\n      btn.classList.remove('active')\n      options.mapview.interactions.highlight()\n\n      // The callback returns a feature as geojson.\n      if (feature) {\n\n        // Assign feature geometry as new value.\n        options.entry.newValue = feature.geometry\n        options.entry.location.update()\n        return;\n      }\n\n      // Add original layer back with no new feature geometry returned from draw interaction.\n      options.entry.location.layer.mapview.Map.addLayer(options.entry.L)\n    }\n  })\n}", "export default entry => {\n\n  const images = entry.value.map(image => mapp.utils.html`\n    <div>\n      <img src=${image}\n        onclick=${mapp.ui.utils.imagePreview}>\n        ${(entry.edit) && mapp.utils.html.node`\n          <button\n            class=\"mask-icon trash no\"\n            data-name=${image.replace(/.*\\//, '').replace(/\\.([\\w-]{3})/, '')}\n            data-src=${image}\n            onclick=${e => removeDocument(e)}>`\n          }`)\n\n  const upLoadBtn = mapp.utils.html.node`\n    <div class=\"mask-icon add-photo pos-center\">\n      <input\n        type=\"file\"\n        accept=\"image/*;capture=camera\"\n        onchange=${upload}>`\n\n  entry.edit && images.push(upLoadBtn)\n\n  if (!images.length) return;\n\n  const images_grid = mapp.utils.html.node`\n    <div\n      class=\"images-grid\">${images}`\n\n  return images_grid;\n\n  async function upload(e) {\n\n    entry.location.view?.classList.add('disabled')\n\n    const reader = new FileReader()\n      \n    const file = e.target.files[0]\n  \n    if (!file) return;\n\n    reader.onload = readerOnload => {\n\n      const img = new Image()\n      \n      img.onload = async () => {\n        \n        let\n          canvas = mapp.utils.html.node`<canvas>`,\n          max_size = 1024,\n          width = img.width,\n          height = img.height\n\n        // resize\n        if (width > height && width > max_size) {\n          height *= max_size / width\n          width = max_size\n\n        } else if (height > max_size) {\n          width *= max_size / height\n          height = max_size\n        }\n\n        canvas.width = width\n        canvas.height = height\n\n        canvas.getContext('2d').drawImage(img, 0, 0, width, height)\n\n        const dataURL = canvas.toDataURL('image/jpeg', 0.5)\n\n        const response = await mapp.utils.xhr({\n          method: 'POST',\n          requestHeader: {\n            'Content-Type': 'application/octet-stream'\n          },\n          url: `${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n            public_id: file.name.replace(/.*\\//, '').replace(/\\.([\\w-]{3})/, ''),\n            resource_type: 'image'\n          })}`,\n          body: mapp.utils.dataURLtoBlob(dataURL)\n        })\n\n        await mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query?` +\n          mapp.utils.paramString({\n            template: 'set_field_array',\n            locale: entry.location.layer.mapview.locale.key,\n            layer: entry.location.layer.key,\n            table: entry.location.table,\n            qID: entry.location.layer.qID,\n            id: entry.location.id,\n            action: 'append',\n            field: entry.field,\n            value:  response.secure_url,\n          }))\n\n        const newImg = mapp.utils.html.node`\n          <div>\n            <img\n              src=${response.secure_url}\n              onclick=${mapp.ui.utils.imagePreview}>\n              <button\n                class=\"mask-icon trash no\"\n                data-name=${response.public_id}\n                data-src=${response.secure_url}\n                onclick=${e => removeDocument(e)}>`\n  \n        images_grid.insertBefore(newImg, upLoadBtn)\n\n        entry.location.view?.classList.remove('disabled')\n      }\n\n      img.src = readerOnload.target.result\n    }\n\n    reader.readAsDataURL(file)\n\n    e.target.value = ''\n  }\n\n  async function removeDocument(e) {\n\n    if (!confirm('Remove image?')) return;\n\n    const img = e.target;\n\n    mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/provider/cloudinary?${mapp.utils.paramString({\n      destroy: true,\n      public_id: img.dataset.name\n    })}`)\n\n    await mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query?` +\n      mapp.utils.paramString({\n        template: 'set_field_array',\n        locale: entry.location.layer.mapview.locale.key,\n        layer: entry.location.layer.key,\n        table: entry.location.table,\n        qID: entry.location.layer.qID,\n        id: entry.location.id,\n        action: 'remove',\n        field: entry.field,\n        value: img.dataset.src\n      }))      \n\n    img.parentNode.remove()\n  }\n}", "const typeMethods = {\n  isoline_here,\n  isoline_mapbox\n}\n\nexport default entry => {\n\n  entry.value = typeof entry.value === 'string'\n    && JSON.parse(entry.value)\n      || entry.value\n\n  // Assign Style if not already assigned.\n  entry.Style = entry.Style\n  \n    // Create OL style object from style object.\n    || typeof entry.style === 'object' && mapp.utils.style(entry.style)\n\n    // Assign style from location.\n    || entry.location.Style\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'Isoline',\n    checked: !!entry.display,\n    onchange: (checked) => {\n\n      // Show geometry of checked.\n      if (checked) {\n        entry.show()\n\n      } else {\n        \n        // Remove the geometry layer from map.\n        entry.display = false\n        entry.L && entry.location.layer.mapview.Map.removeLayer(entry.L)\n      }\n    }\n  })\n\n  entry.show = show\n\n  // entry.show() returns true if location.update() is called.\n  if (entry.display && entry.show()) return 'break';\n\n  const icon = entry.style && mapp.utils.html`\n    ${mapp.ui.elements.legendIcon(\n      Object.assign({ width: 24, height: 24 }, entry.style)\n    )}`;\n\n  return mapp.utils.html.node`<div class=\"flex-spacer\">${chkbox}${icon}`\n}\n\nfunction show() {\n\n  this.display = true\n\n  if (this.L) {\n\n    // Remove existing layer to prevent assertion error.\n    this.location.layer.mapview.Map.removeLayer(this.L)\n\n    // Add existing geometry layer to mapview\n    this.location.layer.mapview.Map.addLayer(this.L)\n    return;\n  }\n\n  if (this.value) {\n\n    this.L = this.location.layer.mapview.geoJSON({\n      zIndex: this.zIndex,\n      geometry: this.value,\n      Style: this.Style,\n      dataProjection: '4326'\n    })\n\n    this.location.Layers.push(this.L)\n    return;\n  }\n\n  const pin = this.location.infoj.find(lookup => lookup.type === 'pin')\n\n  this.params.latlng = ol.proj.transform(pin.value,\n    `EPSG:${pin.srid || '3857'}`,\n    'EPSG:4326')\n\n  this.location.view?.classList.add('disabled')\n\n  typeMethods[this.type](this)\n\n  return true;\n}\n\nfunction isoline_mapbox(entry) {\n\n  // Assign entry params to defaults\n  const params = Object.assign({\n    profile: 'driving',\n    minutes: 10\n  }, entry.params)\n\n  mapp.utils\n    .xhr(`https://api.mapbox.com/isochrone/v1/mapbox/`\n      +`${params.profile}/${params.latlng[0]},${params.latlng[1]}?`\n      +`${mapp.utils.paramString({\n        contours_minutes: params.minutes,\n        polygons: true,\n        access_token: params.access_token\n      })}`)\n    .then(async response => {\n\n      if (!entry.location.remove) return;\n\n      if (!response.features) return;\n\n      // Assign feature geometry as new value.\n      entry.newValue = response.features[0].geometry\n\n      // Update the location in the database.\n      // The location view will be updated through callback after the update method.\n      entry.location.update()\n    })\n\n}\n\nfunction isoline_here(entry) {\n\n  // Assign entry params to defaults\n  const params = Object.assign({\n    'range[type]': 'time',\n    minutes: 10,\n    reverseDirection: false,\n    transportMode: 'car',\n    optimizeFor: 'balanced'\n  }, entry.params)\n\n  params['range[values]'] = params.minutes * 60\n  delete params.minutes\n\n  params.origin = `${params.latlng[1]},${params.latlng[0]}`\n  delete params.latlng\n\n  mapp.utils\n    .xhr(`${entry.location.layer.mapview.host}/api/proxy?url=`\n      +`${encodeURIComponent(`https://isoline.router.hereapi.com/v8/isolines?`\n      +`${mapp.utils.paramString(params)}&{HERE}`)}`)\n    .then(response => {\n\n      if (!entry.location.remove) return;\n\n      if (!response.isolines) {\n        console.log(response)\n        return alert('Failed to process request')\n      }\n\n      const _coordinates = mapp.utils.here.decodeIsoline(response.isolines[0].polygons[0].outer)\n\n      _coordinates.polyline.forEach(p => p.reverse())\n\n      _coordinates.polyline.push(_coordinates.polyline[0])\n\n      // Assign feature geometry as new value.\n      entry.newValue = {\n        type: 'Polygon',\n        coordinates: [_coordinates.polyline]\n      }\n\n      // Update the location in the database.\n      // The location view will be updated through callback after the update method.\n      entry.location.update()\n    })\n\n}", "export default entry => {\n\n  if (entry.query) {\n\n    mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query/${entry.query}`)\n      .then(response => {\n        mapp.utils.render(\n          entry.node.querySelector('.val'),\n          mapp.utils.html`<pre><code>${JSON.stringify(response[entry.params.field], null, 2)}`)\n      })\n\n  }\n\n  let val = mapp.utils.html`\n    <pre><code>${JSON.stringify(entry.value, null, 2)}`\n\n  if (entry.edit) {\n\n    val = mapp.utils.html`\n    <textarea\n      style=\"auto; min-height: 50px;\"\n      onfocus=${e => {\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }}\n      onfocusout=${e => {\n        e.target.style.height = 'auto';\n      }}\n      oninput=${e => {\n\n        entry.json = (() => {\n          try {\n            return JSON.parse(e.target.value)\n          } catch (e) {\n            return false \n          }\n        })();\n\n        e.target.style.border = entry.json ? 'none' : '1px solid red';\n      }}\n      onkeyup=${e => {\n        entry.newValue = typeof entry.json !== 'object' ? entry.value : entry.json;\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}\n      onkeydown=${e => setTimeout(() => {\n        e.target.style.height = 'auto';\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }, 100)}>${JSON.stringify(entry.value, null, 2)}`\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">${val}`\n\n  return node\n}", "export default entry => {\n\n  // Assign mapview to entry to provide shortened lookup.\n  entry.mapview = entry.location.layer.mapview\n\n  // Assign the mvt layer to be cloned from mapview layers.\n  entry.Layer = entry.mapview.layers[entry.layer]\n\n  // The entry must have a style object.\n  entry.style = entry.style || {}\n\n  // The entry style must have a default style.\n  // The entry default style will be assigned to the mvt layer default style.\n  entry.style.default = Object.assign(entry.Layer.style.default, entry.style.default || {})\n\n  // Assign method to show the clone layer.\n  entry.show = async () => {\n\n    // The OL clone layer already exists.\n    if (entry.L) {\n\n      // Add clone layer to mapview Map.\n      entry.mapview.Map.addLayer(entry.L)\n\n      // Add clone layer to mvt layer clones.\n      entry.Layer.clones.add(entry.L)\n      return;\n    }\n\n    // Create query paramString from the entry object.\n    const paramString = mapp.utils.paramString(mapp.utils.queryParams(entry))\n\n    // Query the featureLookup.\n    entry.featureLookup = await mapp.utils.xhr(`${entry.host || entry.mapview.host}/api/query?${paramString}`)\n\n    // Create clone VectorTile layer.\n    entry.L = new ol.layer.VectorTile({\n      source: entry.Layer.L.getSource(),\n      renderBuffer: 200,\n      zIndex: entry.zIndex,\n\n      // Assign style from entry.style\n      style: mapp.layer.Style(entry)\n    });\n\n    // Add the clone layer to the mvt layer clones.\n    entry.Layer.clones.add(entry.L)\n\n    // Add the clone layer to the mapview.Map.\n    entry.mapview.Map.addLayer(entry.L)\n\n    // Add a location.removeCallback to remove the clone from mapview.Map as well as the mvt layer clones.\n    entry.location.removeCallbacks.push(() => {\n      entry.mapview.Map.removeLayer(entry.L)\n      entry.Layer.clones.delete(entry.L)\n    })\n  }\n\n  // Assign method to hide the clone layer.\n  entry.hide = async () => {\n\n    entry.display = false\n\n    // Remove the geometry layer from map.\n    entry.mapview.Map.removeLayer(entry.L)\n\n    // Remove the clone from the mvt layer clones.\n    entry.Layer.clones.delete(entry.L)\n  }\n\n  // Create checkbox to control geometry display.\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'MVT Clone',\n    data_id: `${entry.field}-chkbox`,\n    checked: !!entry.display,\n    onchange: (checked) => checked ? entry.show() : entry.hide()\n  })\n\n  // Show geometry if entry is set to display.\n  entry.display && entry.show()\n\n  // Create a style drawer for the location view entry.\n  entry.view = mapp.ui.layers.panels.style(entry)\n\n  // Create a node consistent of the chkbox and the style drawer.\n  const node = mapp.utils.html.node`<div>${chkbox}${entry.view}`\n\n  // Disable chkbox if layer is out of zoom range\n  function chkZoom() {\n    if (!entry.Layer.tables) return;\n\n    // Disable the checkbox input if necessary.\n    if (entry.Layer.tableCurrent() === null) return node.querySelector('input').disabled = true\n    node.querySelector('input').disabled = false\n  }\n  chkZoom()\n\n  // Add zoom level check to mapview changeEnd event.\n  entry.mapview.Map.getTargetElement().addEventListener('changeEnd', chkZoom)\n\n  // Remove zoom level check from mapview changeEnd event.\n  entry.location.removeCallbacks.push(()=>{\n    mapview.Map.getTargetElement().removeEventListener('changeEnd', chkZoom)\n  })\n\n  // Return the node to the location view.\n  return node\n}", "export default entry => {\n\n  let val = !isNaN(entry.value) && entry.type === 'integer' ?\n    parseInt(entry.value).toLocaleString('en-GB', { maximumFractionDigits: 0 }) :\n    parseFloat(entry.value).toLocaleString('en-GB', { maximumFractionDigits: 2 })\n\n  if (entry.edit) {\n\n    if (entry.edit.range) {\n\n      val = mapp.ui.elements.slider({\n        min: entry.edit.range.min,\n        max: entry.edit.range.max,\n        val: entry.value,\n        callback: e => {\n          val.value = parseFloat(e.target.value)\n          entry.newValue = val.value\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n        }\n      })\n\n    } else {\n\n      val = mapp.utils.html.node`\n      <input\n        type=\"number\"\n        value=\"${entry.value || ''}\"\n        onkeyup=${e => {\n          entry.newValue = e.target.value\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n        }}>`\n    }\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${entry.prefix}${val}${entry.suffix}`\n\n  return node\n}", "export default entry => {\n\n  entry.srid = entry.srid || entry.location.layer.srid\n\n  // Remove existing pin layer\n  entry.location.layer.mapview.Map.removeLayer(entry.L)\n\n  entry.L = entry.location.layer.mapview.geoJSON({\n    zIndex: Infinity,\n    geometry: {\n      type: 'Point',\n      coordinates: entry.value,\n    },\n    dataProjection: entry.srid,\n    Style: entry.style && mapp.utils.style(entry.style) || entry.Style || entry.location.pinStyle\n  })\n\n  // entry.location.removeCallbacks?.push(function(){\n  //   entry.location.layer.mapview.Map.removeLayer(entry.L)\n  // })\n\n  entry.location.Layers.push(entry.L)\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label || 'Pin',\n    checked: true,//!!entry.display,\n    onchange: (checked) => {\n      entry.display = checked\n      checked ?\n        entry.location.layer.mapview.Map.addLayer(entry.L) :\n        entry.location.layer.mapview.Map.removeLayer(entry.L);\n    }\n  })\n\n  const node = mapp.utils.html.node`${chkbox}`\n\n  return node\n}", "export default entry => {\n\n  if (!entry.report.template) return\n\n  const href = `${entry.location.layer.mapview.host}/view/`+\n  `${entry.report.template}?${mapp.utils.paramString(Object.assign({\n      id: entry.location.id,\n      layer: entry.location.layer.key,\n      locale: entry.location.layer.mapview.locale.key\n    }, entry.params || {}))}`\n\n  const node = mapp.utils.html.node`\n    <div class=\"link-with-img\">\n      <div\n        class=\"mask-icon wysiwyg\">\n      </div>\t\n      <a\n        target=\"_blank\"\n        href=${href}>${entry.report.label || 'Report'}`\n\n  return node\n}", "export default entry => {\n\n  const pin = entry.location.infoj.find(entry => entry.type === 'pin')\n\n  if (!pin || !pin.value) return;\n\n  const lnglat = ol.proj.toLonLat(\n    pin.value,\n    `EPSG:${pin.srid || entry.location.layer.mapview.srid}`,\n    'EPSG:4326')\n\n  const node = mapp.utils.html.node`\n    <a\n      target=\"_blank\"\n      href=${`https://www.google.com/maps?cbll=${lnglat[1]},${lnglat[0]}&layer=c`}>`\n\n  mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/proxy?url=${encodeURIComponent(\n    `https://maps.googleapis.com/maps/api/streetview/metadata` +\n    `?location=${lnglat[1]},${lnglat[0]}`+\n    `&source=outdoor&{GOOGLE}`)}`)\n    .then(response => {\n\n      if (response.status !== 'OK') return;\n\n      const src = `${entry.location.layer.mapview.host}/api/proxy?url=${encodeURIComponent(\n        `https://maps.googleapis.com/maps/api/streetview` +\n        `?location=${lnglat[1]},${lnglat[0]}`+\n        `&source=outdoor&size=300x230&{GOOGLE}`)}`\n\n      node.append(mapp.utils.html.node`<img src=${src}>`)\n\n    })\n\n  return node\n}", "export default entry => {\n\n  const tabview = document.querySelector(`[data-id=${entry.target}]`)\n\n  // Assign border style based on the location view record (from list)\n  entry.tab_style = `border-bottom: 3px solid ${entry.location.style.strokeColor}`\n\n  // Create tabview after dataview creation is complete.\n  tabview.dispatchEvent(new CustomEvent('addTab', {\n    detail: entry\n  }))\n\n  // Show the tab if display is true.\n  entry.display && entry.show()\n\n  const chkbox = mapp.ui.elements.chkbox({\n    label: entry.label,\n    checked: !!entry.display,\n    onchange: (checked) => {\n\n      entry.display = checked\n\n      // Show or remove tab according to the checked/display value.\n      entry.display ?\n        entry.show() :\n        entry.remove()\n  \n    }\n  })\n  \n  return mapp.utils.html.node`${chkbox}`\n}", "export default entry => {\n\n  let node, val = entry.value;\n\n  if (entry.query) {\n\n    const params = mapp.utils.queryParams(entry)\n\n    const paramString = mapp.utils.paramString(params)\n\n    mapp.utils\n      .xhr(`${entry.host || entry.location.layer.mapview.host}/api/query?${paramString}`)\n      .then(response => {\n        node.innerHTML = Object.values(response)[0]\n      })\n\n  }\n\n  if (entry.edit) {\n\n    if (entry.edit.options) {\n\n      val = options(entry)\n    } else {\n\n      val = mapp.utils.html`\n      <input\n        type=\"text\"\n        value=\"${entry.value || ''}\"\n        onkeyup=${e => {\n          entry.newValue = e.target.value\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n        }}>`\n    }\n  }\n\n  node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${entry.prefix}${val}${entry.suffix}`\n\n  return node\n}\n\nfunction options(entry){\n\n  const chk = entry.edit.options.find(\n    option => typeof option === 'object' && Object.values(option)[0] === entry.value || option === entry.value\n  ) || entry.value\n\n  entry.value = chk \n    && typeof chk === 'object' \n    && Object.keys(chk)[0] || chk || entry.value || ' ';\n\n  const entries = entry.edit.options.map(option => ({\n    title: typeof option === 'string' && option || Object.keys(option)[0],\n    option: typeof option === 'string' && option || Object.values(option)[0]\n  }))\n\n  const dropdown = mapp.ui.elements.dropdown({\n    span: entry.value,\n    entries: entries,\n    callback: (e, _entry) => {\n      entry.newValue = _entry.option\n      entry.location.view?.dispatchEvent(\n        new CustomEvent('valChange', {\n          detail: entry,\n        })\n      );\n    },\n  });\n\n  return dropdown\n}", "export default entry => {\n\n  if (entry.query) {\n\n    mapp.utils.xhr(`${entry.location.layer.mapview.host}/api/query/${entry.query}`)\n      .then(response => {\n        entry.node.querySelector('.val').innerHTML = response[entry.params.field]\n      })\n\n  }\n\n  let val = entry.type !== 'html' ? entry.value : ''\n\n  if (entry.edit) {\n\n    val = mapp.utils.html`\n    <textarea\n      style=\"auto; min-height: 50px;\"\n      onfocus=${e => {\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }}\n      onfocusout=${e => {\n        e.target.style.height = 'auto';\n      }}\n      onkeyup=${e => {\n        entry.newValue = e.target.value\n        entry.location.view?.dispatchEvent(\n          new CustomEvent('valChange', {\n            detail: entry\n          }))\n      }}\n      onkeydown=${e => setTimeout(() => {\n        e.target.style.height = 'auto';\n        e.target.style.height = e.target.scrollHeight + 'px';\n      }, 100)}>\n      ${entry.value || ''}`\n  }\n\n  const node = mapp.utils.html.node`\n  <div\n    class=\"val\"\n    style=\"${`${entry.css_val || ''}`}\">${val}`\n\n  if (!entry.edit && entry.type === 'html') {\n    node.innerHTML = entry.value || ''\n  }\n\n  return node\n}", "export default entry => {\n\n  let val\n\n  let stringVal = entry.value && entry.value.toString().replace('.',':')\n\n  stringVal = stringVal && stringVal.length < 3 && `${stringVal}:00` || stringVal\n\n  if (entry.edit) {\n\n    val = mapp.utils.html.node`\n      <input\n        type=\"time\"\n        value=${stringVal}\n        onchange=${e => {\n\n          entry.newValue = parseFloat(e.target.value.replace(':','.'))\n\n          entry.location.view?.dispatchEvent(\n            new CustomEvent('valChange', {\n              detail: entry\n            })\n          )\n\n        }}>`;\n        \n  } else {\n\n    val = stringVal\n  }\n\n  const node = mapp.utils.html.node`\n    <div\n      class=\"val\"\n      style=\"${`${entry.css_val || ''}`}\">\n      ${val}`\n\n  return node\n}", "import boolean from './boolean.mjs'\n\nimport dataview from './dataview.mjs'\n\nimport date from './date.mjs'\n\nimport defaults from './defaults.mjs'\n\nimport documents from './documents.mjs'\n\nimport geometry from './geometry.mjs'\n\nimport images from './images.mjs'\n\nimport isoline from './isoline.mjs'\n\nimport json from './json.mjs'\n\nimport mvt_clone from './mvt_clone.mjs'\n\nimport numeric from './numeric.mjs'\n\nimport pin from './pin.mjs'\n\nimport report from './report.mjs'\n\nimport streetview from './streetview.mjs'\n\nimport tab from './tab.mjs'\n\nimport text from './text.mjs'\n\nimport textarea from './textarea.mjs'\n\nimport time from './time.mjs'\n\nexport default {\n  key,\n  boolean,\n  dataview,\n  date,\n  datetime: date,\n  defaults,\n  documents,\n  geometry,\n  html: textarea,\n  images,\n  integer: numeric,\n  isoline_here: isoline,\n  isoline_mapbox: isoline,\n  json,\n  mvt_clone,\n  numeric,\n  pin,\n  report,\n  streetview,\n  tab,\n  text,\n  textarea,\n  time,\n}\n\nfunction key(entry) {\n\n  const node = mapp.utils.html.node`\n  <div class=\"layer-key\">\n    <span>\n      ${entry.location.layer.name}`\n\n  return node\n}", "import view from './view.mjs'\n\nimport listview from './listview.mjs'\n\nimport infoj from './infoj.mjs'\n\nimport entries from './entries/_entries.mjs'\n\nexport default {\n  view,\n  listview,\n  infoj,\n  entries\n}", "export default async (_this) => {\n\n  // The dataview target is defined as string.\n  if (typeof _this.target === 'string') {\n\n    // assign target element by ID.\n    _this.target = document.getElementById(_this.target)\n  }\n\n  // Dataviews must be rendered into a target element.\n  if (!_this.target) {\n\n    console.warn('Dataview creation requires a target key-value')\n    console.log(_this)\n    return;\n  }\n\n  // Update method for _this.\n  _this.update = async () => {\n\n    // Dataviews must not update without a query.\n    if (!_this.query) return;\n\n    // Compile params object from dataview entry.\n    const params = mapp.utils.queryParams(_this)\n\n    // Stringify paramString from object.\n    const paramString = mapp.utils.paramString(params)\n\n    // Query data as response from query.\n    const response = await mapp.utils\n      .xhr(`${_this.host || _this.location.layer.mapview.host}/api/query?${paramString}`)\n\n    if (response instanceof Error) return;\n\n    // The responseFunction must set the data to the dataview object.\n    if (typeof _this.responseFunction === 'function') {\n      _this.responseFunction(response);\n      return;\n    }\n   \n    typeof _this.setData === 'function' && _this.setData(response)\n  };\n\n  // Create a container to accomodate for a toolbar and dataview container.\n  // Target must already be HTMLElement\n  if (_this.toolbar && _this.target instanceof HTMLElement) {\n\n    // Target for the dataview\n    let target = mapp.utils.html.node`<div class=\"dataview-target\">`\n\n    let toolbar = typeof _this.toolbar === 'function'\n      && _this.toolbar()\n      || Object.keys(_this.toolbar).map(key => mapp.ui.elements.toolbar_el[key](_this))\n\n    // Append flex container target element and assign as panel to dataview entry.\n    // The panel will be assigned in a tabview.\n    _this.panel = _this.target.appendChild(mapp.utils.html.node`\n        <div class=\"flex-col\">\n          <div class=\"btn-row\">${toolbar}</div>\n          ${target}`)\n\n    // Assign dataview target as target.\n    _this.target = target\n  }\n\n  // Create a ChartJS dataview is chart is defined.\n  if (_this.chart) await Chart(_this);\n\n  // Columns in entry indicate missing table config.\n  if (typeof _this.columns !== 'undefined') {\n    console.warn('Table dataviews should be configured inside a tables object')\n\n    // Assign columns to table config.\n    _this.table = { columns: _this.columns }\n  }\n\n  // Create a Tabulator dataview if columns are defined.\n  if (_this.table) await Table(_this);\n\n  // Update the dataview on mapChange if set.\n  _this.mapChange && _this.layer && _this.layer.mapview.Map.getTargetElement()\n    .addEventListener('changeEnd', () => {\n\n      // Only update dataview if corresponding layer is visible.\n      if (_this.layer && !_this.layer.display) return;\n\n      // Only update dataview if _this.tab is active.\n      if (_this.tab && !_this.tab.classList.contains(\"active\")) return;\n\n      // Execute mapChange if defined as function or dataview update method.\n      typeof _this.mapChange === 'function'\n        && _this.mapChange()\n        || _this.update();\n    });\n\n  return _this;\n};\n\nasync function Chart(_this) {\n \n  // Charts most be rendered into a canvas type element.\n  const canvas = _this.target.appendChild(mapp.utils.html.node`<canvas>`);\n\n  // Await initialisation of ChartJS object.\n  _this.ChartJS = await mapp.ui.utils.Chart(canvas, mapp.utils.merge({\n    type: \"bar\",\n    options: {\n      plugins: {\n        legend: {\n          display: false\n        },\n        datalabels: {\n          display: false\n        }\n      }\n    }\n  }, _this.chart));\n\n  // Set chart data\n  _this.setData = (data) => {\n\n    if (_this.noDataMask && !data) {\n\n      // Remove display from target\n      _this.target.style.display = 'none'\n\n      // Set no data mask on dataview target\n      _this.mask = !_this.mask && _this.target.parentElement?.appendChild(mapp.utils.html.node`\n        <div class=\"dataview-mask\">No Data`)\n\n    } else {\n\n      // Remove existing dataview mask.\n      _this.mask && _this.mask.remove()\n      delete _this.mask\n\n      // Set dataview target to display as block.\n      _this.target.style.display = 'block'\n    }\n\n    // Create a dataset with empty data array if data is falsy.\n    if (!data) {\n      data = {\n        datasets: [\n          {\n            data: []\n          }\n        ]\n      }\n    }\n\n    // Set data in datasets array if no datasets are defined in data.\n    if (!data.datasets) {\n      data = {\n        datasets: [\n          {\n            data: data\n          }\n        ]\n      }\n    }\n\n    _this.data = data;\n\n    // Assign datasets from chart object to data.datasets.\n    _this.chart.datasets?.length &&\n      data.datasets.forEach((dataset, i) =>\n        Object.assign(dataset, _this.chart.datasets[i]));\n\n    // Get labels from chart if not defined in data.\n    data.labels = data.labels || _this.chart.labels\n\n    // Set data to chartjs object.\n    _this.ChartJS.data = data\n\n    // Update the chartjs object.\n    _this.ChartJS.update();\n  };\n\n}\n\nasync function Table(_this) {\n\n  // Check for custom column methods.\n  _this.table.columns.forEach(col => {\n\n    // Check for custom headerFilter matched in the ui utils.\n    if (typeof col.headerFilter === 'string' && mapp.ui.utils.tabulator.headerFilter[col.headerFilter]) {\n\n      // Assign custom headerFilter from ui utils.\n      col.headerFilter = mapp.ui.utils.tabulator.headerFilter[col.headerFilter](_this)\n    }\n  })\n\n  // Await initialisation of Tabulator object.\n  _this.Tabulator = await mapp.ui.utils\n    .Tabulator(_this.target, Object.assign({\n      //renderVertical: 'basic',\n      renderHorizontal: 'virtual',\n      selectable: false\n    }, _this.table));\n\n  // Table will not automatically redraw on resize.\n  if (_this.table.autoResize === false) {\n\n    // debounce resizeOberserver by 800.\n    _this.resizeObserver = new ResizeObserver(mapp.utils.debounce(() => {\n\n      // only redraw table if the target elements offsetHeight is significant.\n      if (_this.target.offsetHeight > 9) _this.Tabulator.redraw()\n    }, 800))\n  \n    _this.resizeObserver.observe(_this.target)\n  }\n\n  // Assign rowClick event on selectable table dataview.\n  _this.table.selectable && _this.Tabulator.on('rowClick', (e, row) => {\n\n    // The dataview rowSelect method may be used as callback to alter the seletable rowClick behaviour.\n    if (typeof _this.rowSelect === 'function') {\n      _this.rowSelect(e, row)\n      return;\n    }\n\n    const rowData = row.getData();\n\n    if (!_this.layer || !rowData[_this.layer.qID]) return;\n\n    mapp.location.get({\n      layer: _this.layer,\n      id: rowData[_this.layer.qID],\n    });\n\n    // Remove selection colour on row element.\n    row.deselect();\n  });\n\n  // Assign tabulator events from object.\n  typeof _this.events === 'object' && Object.entries(_this.events).forEach(event => {\n    \n    // Shortcircuit if events object value is not a function.\n    if (typeof event[1] !== 'function') return;\n\n    // Key is event name. Value is the event function.\n    _this.Tabulator.on(event[0], event[1])\n  })\n\n  // Set Tabulator data.\n  _this.setData = (data) => {\n\n    if (_this.noDataMask && !data) {\n\n      // Remove display from target\n      _this.target.style.display = 'none'\n\n      // Set no data mask on dataview target\n      _this.mask = !_this.mask && _this.target.parentElement?.appendChild(mapp.utils.html.node`\n        <div class=\"dataview-mask\">No Data`)\n\n    } else {\n\n      // Remove existing dataview mask.\n      _this.mask && _this.mask.remove()\n      delete _this.mask\n\n      // Set dataview target to display as block.\n      _this.target.style.display = 'block'\n    }\n\n    // Tabulator data must be an array.\n    data = (!data && []) || (data.length && data) || [data];\n\n    // Set data to the tabulator object\n    _this.Tabulator.setData(data);\n\n    // Assign data to the dataview object\n    _this.data = data;\n\n    typeof _this.setDataCallback === 'function'\n      && _this.setDataCallback(_this)\n  }\n\n}", "export default tabview => {\n\n  if (!tabview.node) return;\n\n  tabview.tabs = tabview.node.appendChild(mapp.utils.html.node`<div class=\"tabs\">`)\n\n  tabview.panel = tabview.node.appendChild(mapp.utils.html.node`<div class=\"panel\">`)\n\n  // Set data attribute ID from element ID.\n  tabview.id && tabview.node.setAttribute('data-id', tabview.id);\n\n  tabview.addTab = addTab\n\n  tabview.node.addEventListener('addTab', e => tabview.addTab(e.detail))\n\n  return tabview;\n}\n\n// add entry as tab to this tabview.\nfunction addTab(entry) {\n\n  const tabview = this\n\n  if (entry.location) {\n \n    // The tabview should be removed if the location is removed.\n    entry.location.removeCallbacks.push(()=>entry.remove())\n\n  } else if (entry.layer) {\n\n    // Show tab when layer is displayed.\n    entry.layer.showCallbacks.push(()=>{\n\n      // Entry must have display flag.\n      entry.display && entry.show()\n    })\n  \n    // Hide tab when layer is hidden.\n    entry.layer.hideCallbacks.push(()=>{\n      entry.remove()\n    })\n  }\n\n  entry.tab = mapp.utils.html.node`\n    <div class=\"tab\">\n      <button\n        .disabled=${entry.disabled}\n        class=\"header\"\n        style=\"${entry.tab_style || ''}\"\n        onclick=${showTab}>\n          ${entry.label || entry.title || entry.key || 'Tab'}`\n\n  // Append the tab to the tabview tabs\n  entry.show && tabview.tabs.append(entry.tab)          \n      \n  entry.panel = entry.panel || entry.target || mapp.utils.html.node`\n    <div class=\"${`panel ${entry.class || ''}`}\">`\n\n  entry.panel.addEventListener('activate', ()=>{\n    entry.update && entry.update()\n  })\n\n  entry.show = showTab\n\n  entry.remove = removeTab\n\n  function showTab (){\n\n    // Render entry.panel into tabview.panel\n    mapp.utils.render(tabview.panel, entry.panel)\n\n    // Remove the active class from all tabs.\n    tabview.tabs.childNodes.forEach(tab => tab.classList.remove('active'))\n\n    // Add the tab element to tabs container if the tab element has no parent yet.\n    !entry.tab.parentElement && tabview.tabs.append(entry.tab)\n\n    // Make the tab active by assigning class.\n    entry.tab.classList.add('active')\n\n    // The activate event should be delayed with a timeout.\n    // This prevents each tab to activate when multiple tabs are added in quick succession.\n    tabview.timer && window.clearTimeout(tabview.timer)\n\n    tabview.timer = window.setTimeout(()=>{\n      if (entry.panel instanceof HTMLElement) {\n        entry.panel.dispatchEvent(new CustomEvent('activate'))\n        return\n      }\n      entry.target instanceof HTMLElement\n        && entry.target.dispatchEvent(new CustomEvent('activate'))\n    }, 500)\n\n    tabview.showTab && tabview.showTab(entry)\n  }\n\n  function removeTab () {\n\n    // A tab without parent element cannot be in the tab bar.\n    if (!entry.tab.parentElement) return\n\n    // Find a sibling of the entry.\n    const sibling = entry.tab.nextElementSibling || entry.tab.previousElementSibling\n\n    // Remove the tab element from tab bar.\n    entry.tab.remove()\n\n    // Activate the sibling.\n    if (sibling) return sibling.querySelector('.header').click()\n\n    tabview.removeLastTab && tabview.removeLastTab()\n  }\n}", "export default (params) => mapp.utils.html.node`\n  <div \n    data-id=${params.data_id || 'card'}\n    class=\"drawer\">\n    <div class=\"header bold\">\n      <span>${params.header}</span>\n      <button\n        data-id=close\n        class=\"mask-icon close\"\n        onclick=${e => {\n          e.target.closest(\".drawer\").remove()\n          params.close && params.close(e)\n        }}>\n    </div>\n    ${params.content}`;", "export default (params) => mapp.utils.html`\n  <label \n    data-id=${params.data_id || 'chkbox'}\n    class=\"checkbox\">\n    <input\n      type=\"checkbox\"\n      .disabled=${!!params.disabled}\n      .checked=${!!params.checked}\n      onchange=${e=>{\n        params.onchange && params.onchange(e.target.checked, params.val)\n      }}>\n    </input>\n    <div></div>\n    <span>${params.label}`", "export default {\n  modify,\n  draw\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    remove_last_vertex: \"Remove last vertex\",\n  },\n  de: {\n    remove_last_vertex: \"Remove last vertex\",\n  },\n  cn: {\n    remove_last_vertex: \"\u5220\u9664\u6700\u540E\u4E00\u4E2A\u9876\u70B9\",\n  },\n  pl: {\n    remove_last_vertex: \"Usu\u0144 ostatni wierzcho\u0142ek\",\n  },\n  ko: {\n    remove_last_vertex: \"\uB9C8\uC9C0\uB9C9 \uC815\uC810(\uAF2D\uC9C0\uC810) \uC81C\uAC70\",\n  },\n  fr: {\n    remove_last_vertex: \"Effacer le dernier point\",\n  },\n  ja: {\n    remove_last_vertex: \"\u6700\u5F8C\u306E\u30D0\u30FC\u30C6\u30C3\u30AF\u30B9\u3092\u524A\u9664\",\n  }\n})\n\nfunction modify(e) {\n\n  e && e.preventDefault()\n   \n  const menu = []\n  \n  // Show save option in contextmenu\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${() => this.interaction.finish(this.interaction.getFeature())}>\n      ${mapp.dictionary.save}`)\n\n  // Add cancel option to contextmenu.\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${()=>this.interaction.finish()}>\n      ${mapp.dictionary.cancel}`)\n\n  // Set context menu popup on last vertex.\n  this.popup({\n    coords: this.interaction.vertices[this.interaction.vertices.length-1],\n    content: mapp.utils.html.node`<ul>${menu}`,\n  })\n}\n\nfunction draw(e) {\n\n  if (this.interaction.vertices.length === 0) return;\n\n  e && e.preventDefault()\n\n  const features = this.interaction.Layer.getSource().getFeatures()\n   \n  const menu = []\n  \n  features.length && menu.push(mapp.utils.html`\n  <li\n    onclick=${()=>this.interaction.finish(this.interaction.getFeature())}>\n      ${mapp.dictionary.save}`)\n\n  !features.length && menu.push(mapp.utils.html`\n    <li\n      onclick=${e=>{\n        this.interaction.interaction.removeLastPoint()\n        this.interaction.vertices.pop()\n        this.popup(null)\n      }}>${mapp.dictionary.remove_last_vertex}`)\n\n  menu.push(mapp.utils.html`\n    <li\n      onclick=${()=>this.interaction.finish()}>\n      ${mapp.dictionary.cancel}`)\n\n  this.popup({\n    coords: this.interaction.vertices[this.interaction.vertices.length - 1],\n    content: mapp.utils.html.node`<ul>${menu}`,\n    autoPan: true\n  })\n}", "export default (params) => mapp.utils.html.node`\n  <div \n    data-id=${params.data_id || 'drawer'}\n    class=${`drawer expandable ${params.class || ''}`}>\n    <div\n      class=\"header\"\n      onclick=${(e) => {\n     \n        if (e.target.parentElement.classList.contains('empty')) return;\n      \n        // If expanded? Remove expanded from closest expandable and return.\n        if (e.target.parentElement.classList.contains('expanded')) {\n          return e.target.parentElement.classList.remove('expanded');\n        }\n      \n        // Accordion: Remove expanded from all siblings of closest expandable.\n        if (params.accordion) {\n          [...e.target.parentElement.parentElement.children].forEach(sibling => {\n            sibling.classList.remove('expanded');\n          });\n        }\n      \n        // Add expanded class to closest expandable.\n        e.target.parentElement.classList.add('expanded');\n      }}>\n      ${params.header}\n    </div>\n    ${params.content}`;", "export default {\n  point,\n  locator,\n  polygon,\n  circle,\n  line,\n  freehand,\n  isoline_here,\n  isoline_mapbox,\n  rectangle\n}\n\nmapp.utils.merge(mapp.dictionaries, {\n  en: {\n    draw_point: \"Point\",\n    draw_position: \"Current Position\",\n    draw_polygon: \"Polygon\",\n    draw_rectangle: \"Rectangle\",\n    draw_circle: \"Circle\",\n    draw_line: \"Line\",\n    draw_freehand: \"Freehand\",\n    create: \"Create\"\n  },\n  de: {\n    draw_point: \"Punkt\",\n    draw_polygon: \"Polygon\",\n    draw_rectangle: \"Rechteck\",\n    draw_circle: \"Kreis\",\n    draw_line: \"Linie\",\n    draw_freehand: \"Freihand\",\n    create: \"Erstellen\"\n  },\n  cn: {\n    draw_point: \"\u70B9\",\n    draw_polygon: \"\u591A\u8FB9\u5F62\",\n    draw_rectangle: \"\u957F\u65B9\u5F62\",\n    draw_circle: \"\u5708\",\n    draw_line: \"\u7EBF\",\n    draw_freehand: \"\u4EFB\u610F\u56FE\u5F62\",\n  },\n  pl: {\n    draw_point: \"Punkt\",\n    draw_polygon: \"Poligon\",\n    draw_rectangle: \"Prostok\u0105t\",\n    draw_circle: \"Okrag\",\n    draw_line: \"Linia\",\n    draw_freehand: \"Odr\u0119cznie\",\n  },\n  ko: {\n    draw_point: \"\uC810\",\n    draw_polygon: \"\uB2E4\uAC01\uD615\",\n    draw_rectangle: \"\uC9C1\uC0AC\uAC01\uD615\",\n    draw_circle: \"\uC6D0\",\n    draw_line: \"\uC120\",\n    draw_freehand: \"\uC190\uC73C\uB85C \uADF8\uB9BC(\uC790\uC720 \uC7AC\uB7C9)\",\n  },\n  fr: {\n    draw_point: \"Point\",\n    draw_polygon: \"Polygone\",\n    draw_rectangle: \"Rectangle\",\n    draw_circle: \"Cercle\",\n    draw_line: \"Ligne\",\n    draw_freehand: \"\u00C0 main lev\u00E9e\",\n  },\n  ja: {\n    draw_point: \"\u30DD\u30A4\u30F3\u30C8\",\n    draw_polygon: \"\u30DD\u30EA\u30B4\u30F3\",\n    draw_rectangle: \"\u9577\u65B9\u5F62\",\n    draw_circle: \"\u4E38\",\n    draw_line: \"\u7DDA\",\n    draw_freehand: \"\u30D5\u30EA\u30FC\u30CF\u30F3\u30C9\",\n  }\n})\n\nfunction point(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'Point',\n  })\n  \n  return mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.draw_point}`\n}\n\nfunction locator(options) {\n  \n  return mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>{\n\n        mapp.utils.getCurrentPosition(async (pos) => {\n\n          const location = {\n            layer: options.layer,\n            new: true\n          }\n\n          const coords = ol.proj.transform(\n            [parseFloat(pos.coords.longitude), parseFloat(pos.coords.latitude)],\n            'EPSG:4326', `EPSG:${options.layer.srid}`)\n \n          location.id = await mapp.utils.xhr({\n            method: 'POST',\n            url: `${location.layer.mapview.host}/api/location/new?` +\n              mapp.utils.paramString({\n                locale: location.layer.mapview.locale.key,\n                layer: location.layer.key,\n                table: location.layer.tableCurrent()\n              }),\n            body: JSON.stringify({\n              [location.layer.geom]: {\n                type: 'Point',\n                coordinates: coords\n              }\n            })\n          })\n        \n          location.layer.reload()\n                                  \n          mapp.location.get(location)\n        })\n        \n        \n      }}>\n      ${mapp.dictionary.draw_position}`\n}\n\nfunction line(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'LineString',\n  })\n  \n  return mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.draw_line}`\n}\n\nfunction freehand(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'LineString',\n    freehand: true,\n  })\n  \n  return mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.draw_freehand}`\n}\n\nfunction polygon(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'Polygon'\n  })\n  \n  return mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.draw_polygon}`\n}\n\nfunction circle(_options, draw) {\n  \n  _options.edit.circle = Object.assign({\n    units: 'meter',\n    radius: 100,\n    tooltip: {\n      metric: 'distance'\n    }\n  }, typeof _options.edit.circle === 'object' && _options.edit.circle || {})\n\n  // Methods to transform input radius.\n  const units = {\n    meter: v => v,\n    km: v => v * 1000,\n    miles: v => v * 1609.34,\n    meter2: v => Math.sqrt(v / Math.PI),\n    km2: v => Math.sqrt(v * 1000000 / Math.PI),\n  }\n\n  const unitsDropDown = mapp.utils.html.node`\n    <div style=\"display: grid; grid-template-columns: 100px 1fr; align-items: center;\">\n      <div style=\"grid-column: 1;\">Units</div>\n      <div style=\"grid-column: 2;\">\n        ${mapp.ui.elements.dropdown({\n          placeholder: _options.edit.circle.units,\n          entries: [\n            {\n              title: 'Meter',\n              option: 'meter',\n            },\n            {\n              title: 'KM',\n              option: 'km',\n            },\n            {\n              title: 'Miles',\n              option: 'miles',\n            },\n            {\n              title: 'Meter\u00B2',\n              option: 'meter2',\n            },\n            {\n              title: 'KM\u00B2',\n              option: 'km2',\n            },\n          ],\n          callback: (e, entry) => {\n            _options.edit.circle.units = entry.option;\n          }\n        })}`\n\n  const rangeSlider = mapp.ui.elements.slider({\n    label: 'Radius',\n    min: 1,\n    max: 1000,\n    val: _options.edit.circle.radius,\n    callback: e => {\n      _options.edit.circle.radius = parseInt(e.target.value)\n    }\n  })\n\n  const btn_centre = mapp.utils.html.node`\n    <button\n      class=\"raised wide bold primary-colour\"\n      onclick=${e => {\n        const options = Object.assign({}, _options, {\n          type: 'Point',\n          geometryFunction: (coordinates) => {\n      \n            const polygonCircular = new ol.geom.Polygon.circular(\n              ol.proj.toLonLat(coordinates),\n              units[_options.edit.circle.units](_options.edit.circle.radius),\n              64\n            );\n      \n            return polygonCircular.transform(\"EPSG:4326\", \"EPSG:3857\")\n          }\n        })\n\n        draw(e, options)\n      }}>Set Centre`\n\n  const btn_2p = mapp.utils.html.node`\n    <button\n      class=\"raised wide bold primary-colour\"\n      onclick=${e=>{\n        const options = Object.assign({}, _options, {\n          type: 'Circle',\n          geometryFunction: ol.interaction.Draw.createRegularPolygon(33),\n          tooltip: _options.edit.circle.tooltip\n        })\n\n        draw(e, options)\n      }}>Manual Circle`\n\n  const drawer = mapp.ui.elements.drawer({\n    header: mapp.utils.html`\n      <h3>Circle</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`<div class=\"panel flex-col\">\n      ${unitsDropDown}\n      ${rangeSlider}\n      ${btn_centre}\n      ${btn_2p}`\n  })\n\n  return drawer\n}\n\nfunction rectangle(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'Circle',\n    geometryFunction: ol.interaction.Draw.createBox(),\n    tooltip: _options.edit.rectangle.tooltip,\n  })\n  \n  return mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.draw_rectangle}`\n}\n\nfunction isoline_here(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'Point',\n    geometryFunction: coordinates => mapp.utils.here.geometryFunction(coordinates, _options.layer, params),\n  })\n\n  if (typeof (options.edit.isoline_here) !== 'object') options.edit.isoline_here = {}\n\n  const defaults = {\n    'range[type]': 'time',\n    range: 10,\n    rangeMin: 5,\n    rangeMax: 60,\n    transportMode: 'car',\n    optimizeFor: 'balanced'\n  }\n\n  const params = Object.assign(options.edit.isoline_here, defaults)\n\n  const drawer = mapp.ui.elements.isoline_params_here(params)\n\n  drawer.append(mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.create}`)\n\n  return drawer\n}\n\nfunction isoline_mapbox(_options, draw) {\n\n  const options = Object.assign({}, _options, {\n    type: 'Point',\n    geometryFunction: coordinates => mapp.utils.mapboxGeometryFunction(coordinates, _options.layer, params),\n  })\n\n  if (typeof (options.edit.isoline_mapbox) !== 'object') options.edit.isoline_mapbox = {}\n\n  const defaults = {\n    profile: 'driving',\n    minutes: 10,\n    minutesMin: 5,\n    minutesMax: 60\n  }\n\n  const params = Object.assign(options.edit.isoline_mapbox, defaults)\n\n  const drawer = mapp.ui.elements.isoline_params_mapbox(params)\n\n  drawer.append(mapp.utils.html.node`\n    <button\n      class=\"flat wide bold primary-colour\"\n      onclick=${e=>draw(e, options)}>\n      ${mapp.dictionary.create}`)\n\n  return drawer\n}", "export default (params) => mapp.utils.html`\n  <button \n    data-id=${params.data_id || 'dropdown'}\n    class=\"dropdown\">\n    <div class=\"head\"\n      onclick=${(e) => {\n\n        if (e.target.parentElement.classList.contains(\"active\")) {\n          e.target.parentElement.classList.remove(\"active\");\n          return;\n        }\n\n        document.querySelectorAll(\"button.dropdown\")\n          .forEach((el) => el.classList.remove(\"active\"));\n          \n        e.target.parentElement.classList.add(\"active\");\n\n      }}>\n      <span data-id=header-span>${params.span || params.placeholder || params.entries[0].title}</span>\n      <div class=\"icon\"></div>\n    </div>\n    <ul>${params.entries.map((entry) => mapp.utils.html.node`\n      <li onclick=${(e) => {\n\n        const btn = e.target.closest(\"button.dropdown\")\n        btn.classList.toggle(\"active\")   \n        btn.querySelector(\"[data-id=header-span]\").textContent = entry.title;\n\n        params.callback && params.callback(e, entry);\n      }}>${entry.title}`\n\n)}`;", "export default (params) => {\n\n  const selectedTitles = new Set()\n  const selectedOptions = new Set()\n\n  // Create array of li elements for dropdown.\n  const ul = params.entries.map((entry) => {\n    \n    // Create li element with click event.\n    const li = mapp.utils.html.node`<li onclick=${(e) => {\n\n      // Find the closest dropdown button.\n      const btn = e.target.closest(\"button.dropdown\")\n\n      // Will collapse the dropdown if current state is 'active'.\n      btn.classList.toggle('active')   \n\n      // Will show select background if add to classlist.\n      e.target.classList.toggle('selected')\n\n      // Add or remove title and option value from sets.\n      if (e.target.classList.contains('selected')) {\n        selectedTitles.add(entry.title)\n        selectedOptions.add(entry.option)\n      } else {\n        selectedTitles.delete(entry.title)\n        selectedOptions.delete(entry.option)\n      }\n           \n      // Set btn text to reflect selection or show placeholder.\n      btn.querySelector(\"[data-id=header-span]\")\n        .textContent = selectedTitles.size && Array.from(selectedTitles).join(', ')\n        || params.span || params.placeholder\n\n      // Execute callback method and pass array of current selection.\n      params.callback && params.callback(e, Array.from(selectedOptions));\n    }}>${entry.title}`\n\n    // The entry is already selected during creation of dropdown.\n    if (entry.selected) {\n      li.classList.add('selected')\n      selectedTitles.add(entry.title)\n      selectedOptions.add(entry.option)\n    }\n\n    return li})\n\n  return mapp.utils.html`\n    <button \n      data-id=${params.data_id || 'dropdown'}\n      class=\"dropdown\">\n      <div class=\"head\"\n        onclick=${(e) => {\n\n          // Collapse dropdown element and short circuit.\n          if (e.target.parentElement.classList.contains('active')) {\n            e.target.parentElement.classList.remove('active');\n            return;\n          }\n\n          // Collapse any expandxed dropdown elements in document.\n          document.querySelectorAll('button.dropdown')\n            .forEach((el) => el.classList.remove('active'));\n            \n          // Expand this dropdown element.\n          e.target.parentElement.classList.add('active');\n\n        }}>\n        <span data-id=header-span>${selectedTitles.size && Array.from(selectedTitles).join(', ')|| params.span || params.placeholder}</span>\n        <div class=\"icon\"></div>\n      </div>\n      <ul>${ul}`;\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    here_isoline: \"Travel Time\",\n    here_meta: \"Parameter for Travel Time catchments from HERE API\",\n    here_mode: \"Mode\",\n    here_mode_driving: \"Driving\",\n    here_mode_walking: \"Walking\",\n    here_range_minutes: \"Travel time in minutes\",\n    here_datetime_arrive: \"Arrive at\",\n    here_datetime_depart: \"Depart at\",\n    here_optimize_for: \"Optimize for\",\n    here_optimize_for_balanced: \"Balanced\",\n    here_optimize_for_quality: \"Quality\",\n    here_optimize_for_performance: \"Performance\",\n  },\n  de: {\n    here_isoline: \"Fahrzeit\",\n    here_meta: \"Parameter f\u00FCr Here API\",\n    here_mode: \"Modus\",\n    here_mode_driving: \"Kraftfahrzeug\",\n    here_mode_walking: \"zu Fu\u00DF\",\n    here_range_minutes: \"Fahrzeit in Minuten\",\n    here_datetime_arrive: \"Ankunft\",\n    here_datetime_depart: \"Abfahrt\",\n    here_optimize_for: \"Optimisierung\",\n    here_optimize_for_balanced: \"Ausgeglichen\",\n    here_optimize_for_quality: \"Qualit\u00E4t\",\n    here_optimize_for_performance: \"Leistung\",\n  },\n  cn: {\n    here_mode_driving: \"\u673A\u52A8\u8F66\u884C\",\n    here_mode_walking: \"\u6B65\u884C\",\n    here_range_minutes: \"\u4EE5\u5206\u949F\u8BA1\u4EA4\u901A\u65F6\u95F4 \",\n  },\n  pl: {\n    here_mode: \"\u015Arodek transportu\",\n    here_mode_driving: \"samochodem\",\n    here_mode_walking: \"piechot\u0105\",\n    here_range_minutes: \"Czas podr\u00F3\u017Cy w minutach\",\n    here_datetime_arrive: \"Rozpocznij\",\n    here_datetime_depart: \"Osi\u0105gnij cel\",\n    here_optimize_for: \"Optymalizacja\",\n    here_optimize_for_balanced: \"zr\u00F3wnowa\u017Cona\",\n    here_optimize_for_quality: \"jako\u015B\u0107\",\n    here_optimize_for_performance: \"wydajno\u015B\u0107\",\n  },\n  ko: {\n    here_mode_driving: \"\uC6B4\uC804\",\n    here_mode_walking: \"\uB3C4\uBCF4\",\n    here_range_minutes: \"\uC5EC\uD589\uC2DC\uAC04(\uBD84) \",\n  },\n  fr: {\n    here_mode: \"Type de transport\",\n    here_mode_driving: \"en voiture\",\n    here_mode_walking: \"\u00E0 pied\",\n    here_range_minutes: \"Temps du trajet en minutes\",\n    here_datetime_depart: \"Partir \u00E0\",\n    here_datetime_arrive: \"Arriver \u00E0\",\n    here_optimize_for: \"Optimiser\",\n    here_optimize_for_balanced: \"l'\u00E9quilibre\",\n    here_optimize_for_quality: \"la qualit\u00E9\",\n    here_optimize_for_performance: \"les performances\",\n  },\n  ja: {\n    here_mode_driving: \"\u30C9\u30E9\u30A4\u30D3\u30F3\u30B0\",\n    here_mode_walking: \"\u30A6\u30A9\u30FC\u30AD\u30F3\u30B0\",\n    here_range_minutes: \"\u79FB\u52D5\u6642\u9593 (\u5206) \",\n  }\n})\n\nexport default (params) => {\n  \n  const modeDropDown = mapp.utils.html.node`\n    <div style=\"display: grid; grid-template-columns: 100px 1fr; align-items: center;\">\n      <div style=\"grid-column: 1;\">${mapp.dictionary.here_mode}</div>\n      <div style=\"grid-column: 2;\">\n        ${mapp.ui.elements.dropdown({\n          entries: [\n            {\n              title: [mapp.dictionary.here_mode_driving],\n              option: \"car\",\n            },\n            {\n              title: [mapp.dictionary.here_mode_walking],\n              option: \"pedestrian\",\n            },\n          ],\n          callback: (e, entry) => {\n            params.transportMode = entry.option;\n          }\n        })}`\n\n  const optimisedForDropDown = mapp.utils.html.node`\n    <div style=\"display: grid; grid-template-columns: 100px 1fr; align-items: center;\">\n      <div style=\"grid-column: 1;\">${mapp.dictionary.here_optimize_for}</div>\n      <div style=\"grid-column: 2;\">\n        ${mapp.ui.elements.dropdown({\n          entries: [\n            {\n              title: [mapp.dictionary.here_optimize_for_balanced],\n              option: \"balanced\",\n            },\n            {\n              title: [mapp.dictionary.here_optimize_for_quality],\n              option: \"quality\",\n            },\n            {\n              title: [mapp.dictionary.here_optimize_for_performance],\n              option: \"performance\",\n            },\n          ],\n          callback: (e, entry) => {\n            params.optimizeFor = entry.option;\n          },\n        })}`       \n    \n  let date_picker_label = mapp.utils.html.node`\n    <span>${mapp.dictionary.here_datetime_depart}`\n\n  let dateSelect = mapp.utils.html.node`\n    <input\n      type=\"datetime-local\"\n      onchange=${e => {\n        const reverseDirectionChk = paramsDrawer.querySelector('[data-id=reverse_direction] > input')\n\n        if (e.target.value) {\n          \n          params.dateISO = new Date(e.target.value).toISOString()\n\n          // reverse direction not valid in combination with a dateISO param.\n          if (reverseDirectionChk) {\n            params.reverseDirection = false\n            reverseDirectionChk.checked = false\n            reverseDirectionChk.disabled = true\n          }\n\n        } else {\n\n          params.dateISO = undefined\n          if (reverseDirectionChk) reverseDirectionChk.disabled = false\n        }\n      }}>`;\n\n  const datePicker = mapp.utils.html.node`\n    <div>\n      ${date_picker_label}\n      ${dateSelect}`\n\n        \n  const rangeSlider = mapp.ui.elements.slider({\n    label: mapp.dictionary.here_range_minutes,\n    min: params.rangeMin,\n    max: params.rangeMax,\n    val: 10,\n    callback: e => {\n      params.range = parseInt(e.target.value)\n    }\n  })\n\n  const reverseDirectionChk = typeof params.reverseDirection !== 'undefined' && mapp.ui.elements.chkbox({\n    label: 'Reverse Direction Isoline',\n    data_id: 'reverse_direction',\n    checked: !!params.reverseDirection,\n    onchange: (checked) => {\n      date_picker_label.textContent = checked && mapp.dictionary.here_datetime_arrive || mapp.dictionary.here_datetime_depart\n      params.reverseDirection = checked      \n    }})\n\n  const paramsDrawer = mapp.ui.elements.drawer({\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.here_isoline}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`<div class=\"panel\">\n      <p>${mapp.dictionary.here_meta}</p>\n      <div style=\"display: grid; grid-row-gap: 5px;\">\n        ${modeDropDown}\n        ${optimisedForDropDown}\n        ${datePicker}\n        ${reverseDirectionChk || ''}\n        ${rangeSlider}`\n  })\n\n  return paramsDrawer\n\n}", "mapp.utils.merge(mapp.dictionaries, {\n  en: {\n    mapbox_isoline: \"Travel Time\",\n    mapbox_meta: \"Parameter for Travel Time catchments from Mapbox API\",\n    mapbox_mode: \"Mode\",\n    mapbox_driving: \"Driving\",\n    mapbox_walking: \"Walking\",\n    mapbox_cycling: \"Cycling\",\n    mapbox_travel_time: \"Travel time in minutes\",\n  },\n  de: {\n    mapbox_isoline: \"Fahrzeit\",\n    mapbox_meta: \"Parameter f\u00FCr Mapbox API\",\n    mapbox_mode: \"Mode\",\n    mapbox_driving: \"Kraftfahrzeug\",\n    mapbox_walking: \"zu Fu\u00DF\",\n    mapbox_cycling: \"Fahrrad\",\n    mapbox_travel_time: \"Fahrzeit in Minuten\",\n  },\n  cn: {\n    mapbox_mode: \"\u6A21\u5F0F\",\n    mapbox_driving: \"\u673A\u52A8\u8F66\u884C\",\n    mapbox_walking: \"\u6B65\u884C\",\n    mapbox_cycling: \"\u9A91\u884C\",\n    mapbox_travel_time: \"\u4EE5\u5206\u949F\u8BA1\u4EA4\u901A\u65F6\u95F4\",\n  },\n  pl: {\n    mapbox_mode: \"Typ\",\n    mapbox_driving: \"Samochodem\",\n    mapbox_walking: \"Piechot\u0105\",\n    mapbox_cycling: \"Rowerem\",\n    mapbox_travel_time: \"Czas podr\u00F3\u017Cy w minutach\",\n  },\n  ko: {\n    mapbox_mode: \"\uBAA8\uB4DC\",\n    mapbox_driving: \"\uC6B4\uC804\",\n    mapbox_walking: \"\uB3C4\uBCF4\",\n    mapbox_cycling: \"\uC0AC\uC774\uD074\",\n    mapbox_travel_time: \"\uC5EC\uD589\uC2DC\uAC04(\uBD84)\",\n  },\n  fr: {\n    mapbox_mode: \"Mode\",\n    mapbox_driving: \"En voiture\",\n    mapbox_walking: \"\u00C0 pied\",\n    mapbox_cycling: \"\u00C0 velo\",\n    mapbox_travel_time: \"Temps du trajet en minutes \",\n  },\n  ja: {\n    mapbox_mode: \"\u30E2\u30FC\u30C9\",\n    mapbox_driving: \"\u30C9\u30E9\u30A4\u30D3\u30F3\u30B0\",\n    mapbox_walking: \"\u30A6\u30A9\u30FC\u30AD\u30F3\u30B0\",\n    mapbox_cycling: \"\u30B5\u30A4\u30AF\u30EA\u30F3\u30B0\",\n    mapbox_travel_time: \"\u79FB\u52D5\u6642\u9593 (\u5206)\",\n  }\n})\n\nexport default (params) => {\n  const modeDropDown = mapp.utils.html.node`\n    <div \n      style=\"display: grid; grid-template-columns: 100px 1fr; align-items: center;\">\n      <div style=\"grid-column: 1;\">${mapp.dictionary.mapbox_mode}</div>\n      <div style=\"grid-column: 2;\">\n        ${mapp.ui.elements.dropdown({\n          entries: [\n            {\n              title: [mapp.dictionary.mapbox_driving],\n              option: \"driving\",\n            },\n            {\n              title: [mapp.dictionary.mapbox_walking],\n              option: \"walking\",\n            },\n            {\n              title: [mapp.dictionary.mapbox_cycling],\n              option: \"cycling\",\n            },\n          ],\n          callback: (e, entry) => {\n            params.profile = entry.option;\n          },\n        })}`;\n\n  const minuteSlider = mapp.ui.elements.slider({\n    label: mapp.dictionary.mapbox_travel_time,\n    min: params.minutesMin,\n    max: params.minutesMax,\n    val: params.minutes,\n    callback: (e) => {\n      params.minutes = parseInt(e.target.value);\n    },\n  });\n\n  const paramsDrawer = mapp.ui.elements.drawer({\n    header: mapp.utils.html`\n      <h3>${mapp.dictionary.mapbox_isoline}</h3>\n      <div class=\"mask-icon expander\"></div>`,\n    content: mapp.utils.html`<div class=\"panel\">\n      <p>${mapp.dictionary.mapbox_meta}</p>\n      <div style=\"display: grid; grid-row-gap: 5px;\">\n        ${modeDropDown}\n        ${minuteSlider}`\n  });\n\n  return paramsDrawer;\n};", "const xmlSerializer = new XMLSerializer()\n\nexport default (params) => {\n\n  if (params.svg || params.type || params.layers) {\n\n    let backgroundImage = params.layers \n      && Array.isArray(params.layers)\n      && params.layers\n      .map(_l => `url(${_l.svg})`)\n      .reverse()\n      .join(',')\n      || `url(${params.svg || params.url || mapp.utils.svgSymbols[params.type](params)})`\n\n    let inlineStyle = `\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: ${(params.width + 'px') || '100%'};\n      height: ${(params.height + 'px') || '100%'};\n      background-image:${backgroundImage};`\n  \n    return mapp.utils.html`<div style=${inlineStyle}>`\n\n  }\n\n  if (!params.fillColor && params.strokeColor) {\n\n    let path = `\n      M 0,${params.height/2}\n      L ${params.width/2},${params.height/2}\n      ${params.width/2},${params.height/2}\n      ${params.width},${params.height/2}`\n\n    let icon = mapp.utils.svg.node`\n      <svg height=${params.height} width=${params.width}>\n        <path d=${path}\n          fill=\"none\"\n          stroke=${params.strokeColor}\n          stroke-width=${params.strokeWidth || 1}/>`\n\n    let backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n\n    let inlineStyle = `\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: ${params.width}px;\n      height: ${params.height}px;\n      background-image: url(${backgroundImage});`\n\n    return mapp.utils.html`<div style=${inlineStyle}>`\n  }\n\n  if (params.fillColor) {\n\n    let icon = mapp.utils.svg.node`\n      <svg height=${params.height} width=${params.width}>\n        <rect\n          x=${params.strokeWidth || 1}\n          y=${params.strokeWidth || 1}\n          rx=\"4px\"\n          ry=\"4px\"\n          stroke-linejoin=\"round\"\n          width=${params.width - 2 * (params.strokeWidth || 1)}\n          height=${params.height - 2 * (params.strokeWidth || 1)}\n          fill=${params.fillColor}\n          fill-opacity=${params.fillOpacity || 1}\n          stroke=${params.strokeColor}\n          stroke-width=${params.strokeWidth || 1}>`\n\n    let backgroundImage = `data:image/svg+xml,${encodeURIComponent(xmlSerializer.serializeToString(icon))}`\n\n    let inlineStyle = `\n      background-position: center;\n      background-repeat: no-repeat;\n      background-size: contain;\n      width: ${params.width}px;\n      height: ${params.height}px;\n      background-image: url(${backgroundImage});`\n\n    return mapp.utils.html`<div style=${inlineStyle}>`\n  }\n  \n}", "export default (params) => {\n\n  if (!(params.target instanceof HTMLElement)) return;\n\n  params.modal = params.target.appendChild(mapp.utils.html.node`\n    <div \n      style=\"top: 10px; right: 10px;\"\n      data-id=${params.data_id || 'modal'}\n      class=\"modal\">\n      <div class=\"header bold\">\n        <span>${params.header}</span>\n        <button\n          data-id=close\n          class=\"mask-icon close\"\n          onclick=${e => {\n      e.target.closest(\".modal\").remove()\n      params.close && params.close(e)\n    }}>\n      </div>\n      ${params.content}`)\n\n  params.modal.addEventListener(\"mousedown\", (e) => {\n    e.preventDefault();\n    params.modal.style.cursor = \"grabbing\";\n    window.addEventListener(\"mousemove\", shiftEvent);\n    window.addEventListener(\"mouseup\", stopShift);\n  });\n\n  params.modal.addEventListener(\"touchstart\", (e) => {\n    e.preventDefault();\n    params.modal.style.cursor = \"grabbing\";\n    window.addEventListener(\"touchmove\", shiftEvent);\n    window.addEventListener(\"touchend\", stopShift);\n  }, {\n    passive: true,\n  });\n\n  // Remove vertical resize events.\n  function stopShift() {\n    params.modal.style.cursor = \"grab\";\n    x = undefined;\n    y = undefined;\n    window.removeEventListener(\"mousemove\", shiftEvent);\n    window.removeEventListener(\"touchmove\", shiftEvent);\n    window.removeEventListener(\"mouseup\", stopShift);\n    window.removeEventListener(\"touchend\", stopShift);\n  }\n\n  let x, y;\n\n  function shiftEvent(e) {\n\n    const pageX = (e.touches && e.touches[0].pageX) || e.pageX;\n\n    const pageY = (e.touches && e.touches[0].pageY) || e.pageY;\n\n\n    if (!x || !y) {\n      x = pageX;\n      y = pageY;\n      return\n    }\n    \n    params.modal.style.right = parseInt(params.modal.style.right) + (x - pageX) + 'px'\n    params.modal.style.top = parseInt(params.modal.style.top) + (pageY - y) + 'px'\n\n    x = pageX;\n    y = pageY;\n  }\n\n}", "export default params => {\n\n  return mapp.utils.html.node`\n    <div\n      role=\"group\"\n      data-id=${params.data_id || 'slider'}\n      title=${params.title || ''}\n      class=\"input-range single\"\n      style=${`--min: ${params.min}; --max: ${params.max}; --a: ${params.val}; ${params.style || ''}`}>\n      <div class=\"label-row\">\n        <label>${params.label}</label>\n        <input id=\"a\"\n          type=\"number\"\n          min=${params.min}\n          max=${params.max}\n          value=${params.val}\n          oninput=${onInput}></input>\n      </div>\n      <div class=\"track-bg\"></div>\n      <input id=\"a\"\n        type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        value=${params.val}\n        step=${params.step || 1}\n        oninput=${onInput}>`\n\n  function onInput(e) {\n\n    let val = parseFloat(e.target.value)\n\n    if (isNaN(val) || val < params.min) val = params.min\n\n    const group = e.target.closest('.input-range')\n\n    if (val > params.max) {\n      group.style.setProperty(`--max`, val)\n      group.querySelectorAll('input').forEach(el => el.max = val)\n    }\n\n    group.style.setProperty(`--${e.target.id}`, val)\n\n    group.querySelectorAll('input')\n      .forEach(el => {\n        if (el.id != e.target.id) return;\n        if (el == e.target) return;\n        el.value = val\n      })\n\n    params.callback && params.callback(e)\n  }\n\n}", "export default params => {\n\n  const element = mapp.utils.html.node`\n    <div\n      role=\"group\"\n      class=\"input-range multi\"\n      style=${`\n        --min: ${params.min};\n        --max: ${params.max};\n        --a: ${params.val_a};\n        --b: ${params.val_b};`}>\n      <div \n        class=\"label-row\">\n        <label>${params.label_a || 'A'}\n          <input id=\"a\" type=\"number\"\n            value=${params.val_a}\n            min=${params.min}\n            max=${params.max}\n            style=\"--c: var(--a)\"\n            oninput=${onInput}></input>\n        </label>\n        <label>${params.label_b || 'B'}\n          <input id=\"b\" type=\"number\"\n            value=${params.val_b}\n            min=${params.min}\n            max=${params.max}\n            style=\"--c: var(--b)\"\n            oninput=${onInput}></input>\n        </label>\n      </div>\n      <div class=\"track-bg\"></div>\n      <input id=\"a\" type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step || 1}\n        value=${params.val_a}\n        oninput=${onInput}/>\n      <input id=\"b\" type=\"range\"\n        min=${params.min}\n        max=${params.max}\n        step=${params.step || 1}\n        value=${params.val_b}\n        oninput=${onInput}/>`\n\n  function onInput(e) {\n\n    e.target.value = e.target.value > params.max ? params.max : e.target.value;\n\n    element.style.setProperty(`--${e.target.id}`, e.target.value)\n    \n    element.querySelectorAll('input')\n      .forEach(el => {\n        if (el.id != e.target.id) return;\n        if (el == e.target) return;\n        el.value = e.target.value\n      })\n\n    e.target.id === 'a'\n      && typeof params.callback_a === 'function'\n      && params.callback_a(e)\n\n    e.target.id === 'b'\n      && typeof params.callback_b === 'function'\n      && params.callback_b(e)      \n\n  }\n\n  return element\n}", "export default {\n  viewport,\n  download_json,\n  download_csv\n}\n\nfunction viewport(dataview) {\n\n  return mapp.utils.html`\n    <button\n      class=${`flat ${dataview.viewport && 'active' ||''}`}\n      onclick=${e => {\n        e.target.classList.toggle('active')\n        dataview.viewport = !dataview.viewport\n        dataview.update()\n      }}>Viewport`\n\n}\n\nfunction download_json(dataview) {\n\n  return mapp.utils.html`\n    <button\n      class=\"flat\"\n      onclick=${() => {\n        dataview.Tabulator.download('json', `${dataview.title || 'table'}.json`)\n      }}>Export as JSON`\n\n}\n\nfunction download_csv(dataview) {\n\n  return mapp.utils.html`\n    <button\n      class=\"flat\"\n      onclick=${() => {\n        dataview.Tabulator.download('csv', `${dataview.title || 'table'}.csv`)\n      }}>Download as CSV`\n\n}", "import card from './card.mjs'\n\nimport chkbox from './chkbox.mjs'\n\nimport contextMenu from './contextMenu.mjs'\n\nimport drawer from './drawer.mjs'\n\nimport drawing from './drawing.mjs'\n\nimport dropdown from './dropdown.mjs'\n\nimport dropdown_multi from './dropdown_multi.mjs'\n\nimport isoline_params_here from './isoline_params_here.mjs'\n\nimport isoline_params_mapbox from './isoline_params_mapbox.mjs'\n\nimport legendIcon from './legendIcon.mjs'\n\nimport modal from './modal.mjs'\n\nimport slider from './slider.mjs'\n\nimport slider_ab from './slider_ab.mjs'\n\nimport toolbar_el from './toolbar_el.mjs'\n\nexport default {\n  card,\n  chkbox,\n  contextMenu,\n  drawer,\n  drawing,\n  dropdown,\n  dropdown_multi,\n  isoline_params_here,\n  isoline_params_mapbox,\n  legendIcon,\n  modal,\n  slider,\n  slider_ab,\n  toolbar_el\n}", "let promise, Chart = null\n\nexport default async function(canvas, options) {\n\n  // Return Chart method if defined.\n  if (Chart) return new Chart(canvas, options);\n\n  // Create promise to load Chart library.\n  if (!promise) promise = new Promise(async resolve => {\n\n    // Assign from window if Chart library is loaded from link\n    if (window.Chart) {\n\n      Chart = window.Chart\n\n      resolve()\n  \n      return\n    }\n\n    // Import Chart and plugins.\n    Promise\n      .all([\n        import('https://cdn.skypack.dev/chart.js@3.9.1'),\n        import('https://cdn.skypack.dev/chartjs-plugin-datalabels@2.1.0'),\n        import('https://cdn.skypack.dev/chartjs-plugin-annotation@2.0.1')\n      ])\n      .then(imports => {\n\n        // Register imports\n        imports[0].Chart.register(...imports[0].registerables);\n  \n        imports[0].Chart.register(imports[1].default);\n\n        imports[0].Chart.register(imports[2].default);\n  \n        Chart = imports[0].Chart\n\n        resolve()\n      })\n      .catch(error => {\n        console.error(error.message)\n        alert('Failed to load Chart.js library. Please reload the browser.')\n      })\n  \n  })\n\n  await promise\n\n  return new Chart(canvas, options);\n}", "let promise, Tabulator = null\n\nexport default async function() {\n\n  // Return Chart method if defined.\n  if (Tabulator) return new Tabulator(...arguments);\n\n  // Create promise to load Chart library.\n  if (!promise) promise = new Promise(async resolve => {\n\n    // Assign from window if Chart library is loaded from link\n    if (window.Tabulator) {\n\n      Tabulator = window.Tabulator\n\n      resolve()\n  \n      return\n    }\n\n    // Import Chart and plugins.\n    Promise\n      .all([\n        import('https://cdn.skypack.dev/pin/tabulator-tables@v5.3.0-3P9dSwNRL29tgc0Vmk59/mode=imports,min/optimized/tabulator-tables.js')\n      ])\n      .then(imports => {\n  \n        Tabulator = imports[0].TabulatorFull\n\n        resolve()\n      })\n      .catch(error => {\n        console.error(error.message)\n        alert('Failed to load Tabulator library. Please reload the browser.')\n      })\n  \n  })\n\n  await promise\n\n  return new Tabulator(...arguments);\n}", "export default {\n  headerFilter: {\n    like,\n    numeric,\n    set\n  }\n}\n\nfunction like(_this) {\n  \n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n    const field = cell.getColumn().getField()\n\n    function likeFilter(e) {\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == \"like\")\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layer && delete _this.layer.filter.current[field]\n      }\n\n      if(e.target.value.length) _this.Tabulator.setFilter([\n        { field: field, type: \"like\", value: e.target.value }\n      ])\n\n      if (headerFilterParams.layer) {\n\n          e.target.value.length ? (_this.layer.filter.current[field] = {\n            [headerFilterParams.type]: encodeURIComponent(e.target.value) \n          }) : delete _this.layer.filter.current[field];\n          \n          _this.layer.reload();\n          \n      }\n\n      _this.update();\n\n    }\n\n    return mapp.utils.html.node`<span>\n      <input\n        type=\"text\"\n        placeholder=\"Filter\"\n        oninput=${likeFilter}\n        onblur=${likeFilter}>`\n\n  }\n}\n\nfunction numeric(_this) {\n\n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n    // Select the field\n    const field = cell.getColumn().getField()\n\n    const inputMin = mapp.utils.html`\n      <input \n        type=\"number\" \n        placeholder=\"Min\" \n        onchange=${minEvent}\n        onblur=${minEvent}>`\n\n    function minEvent(e) {\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == \">=\")\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layer && delete _this.layer.filter.current[field]\n      }\n\n      // Add filter for valid target value.\n      if (Number(e.target.value)) {\n        _this.Tabulator.addFilter(field, \">=\", Number(e.target.value))\n\n        // Set layer filter\n        if (headerFilterParams.layer) {\n          _this.layer.filter.current[field] = Object.assign(_this.layer.filter.current[field] || {}, {gte:Number(e.target.value)})\n          _this.layer.reload();\n          _this.update();  \n        }\n      }\n    }\n\n    const inputMax = mapp.utils.html`\n      <input \n        type=\"number\" \n        placeholder=\"Max\" \n        onchange=${maxEvent}\n        onblur=${maxEvent}>`\n\n    function maxEvent(e) {\n\n      // Get filter for that field if exists\n      const filter = _this.Tabulator.getFilters().find(f => f.field === field && f.type == \"<=\")\n\n      // Remove existing filter\n      if (filter) {\n        _this.Tabulator.removeFilter(...Object.values(filter))\n\n        // Remove layer filter\n        headerFilterParams.layer && delete _this.layer.filter.current[field]\n      }\n\n      // Add filter for valid target value.\n      if (Number(e.target.value)) {\n        _this.Tabulator.addFilter(field, \"<=\", Number(e.target.value))\n\n        // Set layer filter\n        if (headerFilterParams.layer) {\n          _this.layer.filter.current[field] = Object.assign(_this.layer.filter.current[field] || {}, { lte: Number(e.target.value) })\n          _this.layer.reload();\n          _this.update();\n        }\n      }\n    }\n\n    // flex container must be encapsulated since tabulator will strip attribute from most senior item returned.\n    return mapp.utils.html.node`\n      <div><div style=\"display: flex;\">${inputMin}${inputMax}`\n\n  }\n}\n\nfunction set(_this) {\n\n  return (cell, onRendered, success, cancel, headerFilterParams) => {\n\n     headerFilterParams.set = new Set()\n\n    function callback(cell, set) {\n\n      _this.filter[cell.getField()] = {}\n\n      if (set.size) _this.filter[cell.getField()].in = Array.from(set)\n                \n      if(headerFilterParams.maxRows && _this.Tabulator.getDataCount() > headerFilterParams.maxRows-1) return _this.update()\n\n      if(_this.Tabulator.getFilters().length) {\n        let filter = _this.Tabulator.getFilters().find(f => f.field == cell.getField() && f.type == \"in\")\n        if(filter) _this.Tabulator.removeFilter(filter.field, filter.type, filter.value)\n      }\n\n      if(set.size) _this.Tabulator.addFilter(cell.getField(), \"in\", Array.from(set)) \n\n      if(typeof(headerFilterParams.callback) === 'function') headerFilterParams.callback(cell, headerFilterParams.set)\n        \n    }\n\n    const select = mapp.utils.html.node`\n    <select style=\"border: 0; width: 100%; font-size: 11px;\"\n    onchange=${e => {\n\n      const val = e.target.value\n\n      headerFilterParams?.set.has(val)\n      && headerFilterParams.set.delete(val)\n      || headerFilterParams.set.add(val)\n            \n      for (let i=0; i<e.target.options.length; i++) {\n\n        e.target.options[i].style.backgroundColor = headerFilterParams.set\n        .has(e.target.options[i].value) && (headerFilterParams.selected || '#cae0b8') || '#ffffff'\n      }\n\n      callback(cell, headerFilterParams.set)\n\n      e.target.value = null\n\n    }}>${headerFilterParams.options.map(option => mapp.utils.html.node`\n      <option>${option}`)}`\n\n    select.value = null\n\n    if(headerFilterParams.multiple) select.multiple = true\n\n    return select\n  \n  }\n\n}\n\n\n\n", "const idle = {\n  idle: 600,\n}\n\nexport default params => {\n\n  Object.assign(idle, params)\n\n  if (idle.idle === 0) return;\n\n  // Define window events that reset the lock timeout.\n  window.onload = resetTimer;\n  window.onmousemove = resetTimer;\n  window.onmousedown = resetTimer;\n  window.ontouchstart = resetTimer;\n  window.onclick = resetTimer;\n  window.onkeypress = resetTimer;\n  resetTimer()\n  renewToken()\n}\n\n// Reset idle timeout\nfunction resetTimer() {\n\n  if (idle.locked) return\n\n  idle.timeout && clearTimeout(idle.timeout);\n\n  idle.timeout = setTimeout(lock, idle.idle * 1000)\n}\n\n// Lock interface\nfunction lock() {\n\n  idle.locked = true\n\n  // Do not renew cookie when interface is locked.\n  idle.renew && clearTimeout(idle.renew)\n\n  // Destroy cookie.\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', `${idle.host}/api/user/cookie?destroy=true`)\n\n  // Reload location once cookie has been removed.\n  xhr.onload = e => location.reload()\n  xhr.send()\n}\n\n// Renew cookie\nfunction renewToken() {\n\n  // Renew token after idle minus 20 seconds.\n  idle.renew = setTimeout(cookie, (idle.idle - 20) * 1000)\n\n  function cookie() {\n\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', `${idle.host}/api/user/cookie?renew=true`)\n    xhr.onload = e => {\n\n      // Lock interface if cookie renewal fails.\n      if (e.target.status === 401) return lock()\n\n      // Re-call method to renew token.\n      renewToken()\n    }\n\n    xhr.send()\n  }\n}", "export default e => {\n\n  document.body.append(mapp.utils.html.node`\n    <div class=\"interface-mask\">\n      <div class=\"bg-image\" style=${`background-image:url(${e.target.src})`}>\n      <button class=\"btn-close mask-icon close\"\n        onclick=${e => e.target.parentElement.parentElement.remove()}>`);\n\n}", "export default (params) => {\n\n  params.target.addEventListener(\"mousedown\", (e) => {\n    e.preventDefault();\n    document.body.style.cursor = \"grabbing\";\n    window.addEventListener(\"mousemove\", params.resizeEvent);\n    window.addEventListener(\"mouseup\", stopResize);\n  });\n\n  params.target.addEventListener(\n    \"touchstart\",\n    (e) => {\n      e.preventDefault();\n      window.addEventListener(\"touchmove\", params.resizeEvent);\n      window.addEventListener(\"touchend\", stopResize);\n    },\n    {\n      passive: true,\n    }\n  );\n\n  // Remove vertical resize events.\n  function stopResize() {\n    document.body.style.cursor = \"auto\";\n    window.removeEventListener(\"mousemove\", params.resizeEvent);\n    window.removeEventListener(\"touchmove\", params.resizeEvent);\n    window.removeEventListener(\"mouseup\", stopResize);\n    window.removeEventListener(\"touchend\", stopResize);\n  }\n}", "import Chart from './Chart.mjs'\n\nimport Tabulator from './Tabulator.mjs'\n\nimport tabulator from './tabulatorUtils.mjs'\n\nimport idleLogout from './idleLogout.mjs'\n\nimport imagePreview from './imagePreview.mjs'\n\nimport resizeHandler from './resizeHandler.mjs'\n\nexport default {\n  Chart,\n  Tabulator,\n  tabulator,\n  idleLogout,\n  imagePreview,\n  resizeHandler,\n}", "export default params => {\n\n  // Assign params to gazetteer object.\n  const gazetteer = Object.assign({\n\n    input: params.target.querySelector('input'),\n\n    result: params.target.querySelector('ul'),\n\n    getLocation,\n\n    sources: {\n      glx: glx,\n      mapbox: mapbox,\n      google: google\n    }\n\n  }, params);\n\n  gazetteer.input.placeholder = gazetteer.placeholder || '';\n\n  gazetteer.input.oninput = e => {\n\n    // Abort current query.\n    gazetteer.xhr && gazetteer.xhr.abort()\n\n    // Clear results\n    gazetteer.result.innerHTML = ''\n\n    // Only search if value has length.\n    e.target.value.length > 0 && search(e.target.value)\n  }\n\n  // Select first result on enter keypress\n  gazetteer.input.addEventListener('keydown', e => {\n    (e.keyCode || e.charCode) === 13\n      && gazetteer.result.querySelector('li').click()\n  })\n\n  function search(term){\n \n    // Get possible coordinates from input.\n    let ll = term.split(',').map(parseFloat)\n\n    // Check whether coordinates are float values.\n    if (ll.length === 2 && ll.every(n => !isNaN(n))) {\n\n      gazetteer.result.appendChild(mapp.utils.html.node`\n      <li \n        onclick=${e=>{\n\n          gazetteer.result.innerHTML = ''\n\n          gazetteer.getLocation({\n            label: `Latitude:${ll[0]}, Longitude:${ll[1]}`,\n            source: 'Coordinates',\n            lng: ll[1],\n            lat: ll[0]\n          })\n\n        }}><span>Latitutde:${ll[0]}, Longitude:${ll[1]}`)\n\n      // Do not search if coordinates are provided.\n      return;\n    }\n\n    // Abort current xhr and create new.\n    gazetteer.xhr = new XMLHttpRequest()\n  \n    // Send gazetteer query to backend.\n    gazetteer.xhr.open('GET', gazetteer.mapview.host + '/api/gazetteer?' +\n      mapp.utils.paramString({\n        locale: gazetteer.mapview.locale.key,\n        layer: gazetteer.layer,\n        q: encodeURIComponent(term),\n      }))\n  \n    gazetteer.xhr.setRequestHeader('Content-Type', 'application/json')\n    gazetteer.xhr.responseType = 'json'\n    gazetteer.xhr.onload = e => {\n  \n      if (e.target.status !== 200) return;\n          \n      // No results\n      if (e.target.response.length === 0) {\n        return gazetteer.result.appendChild(mapp.utils.html.node`\n          <li>${mapp.dictionary.no_results}`)\n      }\n  \n      // Add results from JSON to gazetteer.\n      Object.values(e.target.response).forEach(entry => {\n  \n        gazetteer.result.append(mapp.utils.html.node`\n          <li\n            onclick=${e=>{\n\n              gazetteer.result.innerHTML = ''\n\n              if (gazetteer.callback) return gazetteer.callback(entry)\n\n              gazetteer.sources[entry.source]({\n                label: entry.label,\n                id: entry.id,\n                source: entry.source,\n                layer: entry.layer,\n                table: entry.table,\n                marker: entry.marker,\n                callback: params.callback\n              })\n      \n            }}>\n            <span class=\"label\">${entry.title || (gazetteer.mapview.layers[entry.layer] && gazetteer.mapview.layers[entry.layer].name) || entry.layer || entry.source}</span>\n            <span>${entry.label}</span>`)\n\n      })\n  \n    }\n  \n    gazetteer.xhr.send()\n  }\n\n  function glx(record) {\n\n    gazetteer.getLocation({\n      layer: gazetteer.mapview.layers[record.layer],\n      table: record.table,\n      id: record.id\n    }, loc => mapp.location.get(loc).then(loc => loc && loc.flyTo())) \n  }\n  \n  function google(record) {\n\n    mapp\n      .utils\n        .xhr(`${gazetteer.mapview.host}/api/proxy?url=${encodeURIComponent(`https://maps.googleapis.com/maps/api/place/details/json?placeid=${record.id}&{GOOGLE}`)}`)\n          .then(response => {\n\n            gazetteer.getLocation({\n              label: record.label,\n              source: record.source,\n              lng: response.result.geometry.location.lng,\n              lat: response.result.geometry.location.lat\n            })\n          })\n  }\n\n  function mapbox(record) {\n\n    gazetteer.getLocation({\n      label: record.label,\n      source: record.source,\n      lng: record.marker[0],\n      lat: record.marker[1]\n    })\n  }\n\n  function getLocation(location, callback) {\n\n    if (typeof callback === 'function') {\n      callback(location)\n      return;\n    }\n\n    Object.assign(location, {\n      layer: {\n        mapview: gazetteer.mapview\n      },\n      Layers: [],\n      hook: location.label\n    })\n\n    const infoj = [\n      {\n        title: location.label,\n        value: location.source\n      },\n      {\n        type: 'pin',\n        value: [location.lng, location.lat],\n        srid: '4326',\n        class: 'display-none',\n        location\n      }\n    ]\n\n    gazetteer.streetview && infoj.push({ \n      type: \"streetview\",\n      location\n    })\n\n    mapp.location.decorate(Object.assign(location, { infoj }))\n\n    gazetteer.mapview.locations[location.hook] = location\n\n    if (gazetteer.zoom) {\n      let view = gazetteer.mapview.Map.getView()\n      view.setZoom(gazetteer.zoom)\n      view.setCenter(ol.proj.fromLonLat([location.lng, location.lat]))\n      \n    } else {\n      location.flyTo()\n    }\n  }\n}", "import layers from './ui/layers/_layers.mjs'\n\nimport locations from './ui/locations/_locations.mjs'\n\nimport Dataview from './ui/Dataview.mjs'\n\nimport Tabview from './ui/Tabview.mjs'\n\nimport elements from './ui/elements/_elements.mjs'\n\nimport utils from './ui/utils/_utils.mjs'\n\nimport Gazetteer from './ui/Gazetteer.mjs'\n\nconst ui = {\n  layers,\n  locations,\n  elements,\n  utils,\n  Gazetteer,\n  Dataview,\n  Tabview,\n}\n\nif (typeof window.mapp === 'object') {\n\n  window.mapp.ui = ui\n\n}\n\nexport default ui"],
  "mappings": "AAAA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,qBAAsB,gCACtB,iBAAkB,mBACpB,EACA,GAAI,CACF,qBAAsB,iDACtB,iBAAkB,wBACpB,EACA,GAAI,CACF,qBAAsB,yDACtB,iBAAkB,gCACpB,EACA,GAAI,CACF,qBAAsB,iCACtB,iBAAkB,sBACpB,EACA,GAAI,CACF,qBAAsB,uEACtB,iBAAkB,iCACpB,EACA,GAAI,CACF,qBAAsB,qCACtB,iBAAkB,yBACpB,EACA,GAAI,CACF,qBAAsB,qHACtB,iBAAkB,0BACpB,CACF,CAAC,EAED,GAAO,GAAQ,AAAC,GAAU,CAExB,GAAM,GAAa,EAAM,OAAO,cAAgB,KAAK,MAAM;AAAA;AAAA;AAAA,cAG/C,KAAK,WAAW;AAAA;AAAA,gBAEd,KAAM,IAAG,CAGjB,GAAI,GAAW,KAAM,GAAM,aAAa,EAGxC,EAAE,OAAO,SAAW,CAAC,CACvB,MAAQ,GAEN,EAAgB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,cAG1B,KAAK,WAAW;AAAA,eACf,oBAAoB,EAAM,SAAW,MAAQ;AAAA,gBAC5C,GAAG,CACX,EAAM,QAAU,EAAM,KAAK,EAAI,EAAM,KAAK,CAC5C,KAEE,EAAS,KAAK,MAAM;AAAA,UAClB,EAAM,MAAQ,EAAM;AAAA,MACxB;AAAA,MACA;AAAA,4CAIE,EAAU,OAAO,KAAK,CAAK,EAC9B,IAAI,GAAO,KAAK,GAAG,OAAO,OAAO,IAAQ,KAAK,GAAG,OAAO,OAAO,GAAK,CAAK,CAAC,EAC1E,OAAO,GAAS,MAAO,GAAU,GAAW,EAE/C,GAAI,EAAM,KAAM,CACd,GAAM,GAAO,KAAK,MAAM,KAAK,uBAC7B,EAAK,UAAY,EAAM,KACvB,EAAQ,QAAQ,CAAI,CACtB,CAEA,EAAM,KAAO,KAAK,GAAG,SAAS,OAAO,CACnC,QAAS,eACT,MAAO,oBACP,OAAQ,EACR,QAAS,CACX,CAAC,EAED,EAAM,cAAc,KAAK,IAAI,CAC3B,EAAc,UAAU,IAAI,IAAI,CAClC,CAAC,EAED,EAAM,cAAc,KAAK,IAAI,CAC3B,EAAc,UAAU,OAAO,IAAI,CACrC,CAAC,EAGD,EAAM,QAAQ,IAAI,iBAAiB,EAAE,iBAAiB,YAAa,IAAI,CACrE,GAAI,EAAC,EAAM,OACX,IAAI,EAAM,aAAa,IAAM,KAAM,MAAO,GAAM,KAAK,UAAU,IAAI,UAAU,EAC7E,EAAM,KAAK,UAAU,OAAO,UAAU,EACxC,CAAC,EAGD,EAAM,KAAK,SAAS,QAAU,GAAK,EAAM,KAAK,UAAU,IAAI,OAAO,CACrE,EC/FA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,wBAAyB,0BAC3B,EACA,GAAI,CACF,wBAAyB,oCAC3B,EACA,GAAI,CACF,wBAAyB,0BAC3B,EACA,GAAI,CACF,wBAAyB,2BAC3B,EACA,GAAI,CACF,wBAAyB,gEAC3B,EACA,GAAI,CACF,wBAAyB,8BAC3B,EACA,GAAI,CACF,wBAAyB,gFAC3B,CACF,CAAC,EAEc,WAAU,EAAO,CAI9B,GAFI,CAAC,EAAO,SAER,CAAC,EAAO,OAAQ,OAEpB,GAAM,GAAW,CACf,KAAM,EAAO,OACb,OAAQ,CAAC,CACX,EAGA,OAAO,OAAO,EAAO,QAAQ,MAAM,EAAE,QAAQ,GAAS,EAAI,CAAK,CAAC,EAGhE,WAAa,EAAM,CAEjB,GAAI,GAAM,OAKV,IAFA,EAAK,CAAK,EAEN,CAAC,EAAM,MAAO,CAChB,EAAS,KAAK,YAAY,EAAM,IAAI,EACpC,EAAS,KAAK,cAAc,GAAI,aAAY,eAAgB,CAC1D,OAAQ,CACV,CAAC,CAAC,EACF,MACF,CAGA,AAAK,EAAS,OAAO,EAAM,QAAQ,EAAY,CAAK,EAGpD,EAAS,OAAO,EAAM,OAAO,SAAS,CAAK,EAE3C,EAAS,KAAK,cAAc,GAAI,aAAY,eAAgB,CAC1D,OAAQ,CACV,CAAC,CAAC,EACJ,CAEA,WAAqB,EAAO,CAG1B,GAAM,GAAQ,CACZ,KAAM,CAAC,CACT,EAGA,EAAS,OAAO,EAAM,OAAS,EAG/B,GAAM,GAAa,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGvB,KAAK,WAAW;AAAA,kBACd,GAAK,CAEb,EAAE,OAAO,MAAM,WAAa,SAE5B,EAAM,KACH,OAAO,GAAS,EAAM,OAAO,EAC7B,QAAQ,GAAS,EAAM,KAAK,CAAC,CAElC,KAEJ,EAAM,KAAO,KAAK,MAAM,KAAK,yBAE7B,EAAM,OAAS,KAAK,GAAG,SAAS,OAAO,CACrC,QAAS,eACT,MAAO,cACP,OAAQ,KAAK,MAAM;AAAA,cACX,EAAM;AAAA,UACV;AAAA,gDAEJ,QAAS,EAAM,IACjB,CAAC,EAED,EAAS,KAAK,YAAY,EAAM,MAAM,EAGtC,EAAM,gBAAkB,IAAM,CAE5B,EAAW,MAAM,WAAa,EAAM,KAAK,KAAK,GAAS,EAAM,OAAO,EAClE,UAAY,QAChB,EAEA,EAAM,SAAW,AAAC,GAAU,CAI1B,GAFA,EAAM,MAAQ,EAEV,EAAM,UAAW,CACnB,GAAM,GAAc,EAAM,KAAK,YAAY,KAAK,MAAM,KAAK,WAAW,EACtE,EAAY,UAAY,EAAM,SAChC,CAEA,EAAM,KAAK,KAAK,CAAK,EAErB,EAAM,OAAO,YAAY,EAAM,IAAI,EAEnC,EAAM,gBAAgB,EAEtB,EAAM,cAAc,KAAK,IAAI,EAAM,gBAAgB,CAAC,EAEpD,EAAM,cAAc,KAAK,IAAI,EAAM,gBAAgB,CAAC,CACtD,CAEF,CACF,CCtIA,GAAO,GAAQ,CACb,KAAM,EACN,MAAO,EACP,QAAS,EACT,QAAS,EACT,GAAI,GACJ,KAAM,EACN,SAAU,EACV,QAAS,GACT,KAAM,EACR,EAEI,EAEJ,WAAqB,EAAO,EAAM,CAChC,aAAa,CAAO,EAGpB,GAAI,GAAM,EAAM,KAAK,cAAc,wBAAwB,EAC3D,AAAI,GAAK,GAAI,SAAW,IAGxB,EAAU,WAAW,IAAM,CACzB,EAAU,KACV,EAAM,OAAO,EACb,EAAM,QAAQ,IAAI,iBAAiB,EAAE,cAAc,GAAI,OAAM,WAAW,CAAC,CAC3E,EAAG,GAAG,CACR,CAEA,WAAqB,EAAO,EAAM,CAChC,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,cAGX,AAAC,GAAM,CACf,AAAK,EAAE,OAAO,MAAM,OAKlB,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAS,CACzC,CAAC,EAAM,OAAO,MAAO,mBAAmB,GAAG,EAAM,OAAO,kBAAoB,KAAO,KAAK,EAAE,OAAO,OAAO,CAC1G,EAJA,MAAO,GAAM,OAAO,QAAQ,EAAM,OAAO,OAM3C,EAAY,CAAK,CACnB,IACJ,CAEA,YAAwB,EAAO,EAAO,CAEpC,WAAuB,EAAS,CAC9B,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAS,CACzC,QAAS,CACX,EACA,EAAM,OAAO,EACb,EAAM,QAAQ,IAAI,iBAAiB,EAAE,cAAc,GAAI,OAAM,WAAW,CAAC,CAC3E,CAEA,SAAc,EAAK,EAEZ,KAAK,GAAG,SAAS,OAAO,CAC7B,MAAO,EAAM,OAAS,EAAM,OAAS,SACrC,SAAU,CACZ,CAAC,CACH,CAEA,YAAqB,EAAO,EAAO,CAEjC,WAAoB,EAAS,CAC3B,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAS,CACzC,KAAM,CACR,EACA,EAAM,OAAO,EACb,EAAM,QAAQ,IAAI,iBAAiB,EAAE,cAAc,GAAI,OAAM,WAAW,CAAC,CAC3E,CAEA,SAAW,EAAK,EAET,KAAK,GAAG,SAAS,OAAO,CAC7B,MAAO,EAAM,OAAS,EAAM,OAAS,SACrC,SAAU,CACZ,CAAC,CACH,CAEA,iBAA8B,EAAO,EAAM,CAEzC,GAAI,CAAC,EAAM,OAAO,IAAK,CAErB,GAAI,GAAW,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,QAAQ,kBAAkB,KAAK,MAAM,YAAY,CAC5F,SAAU,YACV,OAAQ,EAAM,QAAQ,OAAO,IAC7B,MAAO,EAAM,IACb,MAAO,EAAM,aAAa,EAC1B,MAAO,EAAM,KACf,CAAC,GAAG,EAEJ,EAAM,OAAO,IAAM,EAAS,GAC9B,CAEA,GAAI,CAAC,EAAM,OAAO,IAAK,CAErB,GAAI,GAAW,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,QAAQ,kBAAkB,KAAK,MAAM,YAAY,CAC5F,SAAU,YACV,OAAQ,EAAM,QAAQ,OAAO,IAC7B,MAAO,EAAM,IACb,MAAO,EAAM,aAAa,EAC1B,MAAO,EAAM,KACf,CAAC,GAAG,EAEJ,EAAM,OAAO,IAAM,EAAS,GAC9B,CAEA,MAAK,GAAM,OAAO,MAEhB,GAAM,OAAO,KAAO,EAAM,OAAO,OAAS,UAAY,EAAI,KAI5D,EAAM,OAAO,QAAQ,EAAM,OAAS,OAAO,OACzC,CACE,IAAK,OAAO,EAAM,OAAO,GAAG,EAC5B,IAAK,OAAO,EAAM,OAAO,GAAG,CAC9B,EACA,EAAM,OAAO,QAAQ,EAAM,MAAM,EAEnC,EAAY,CAAK,EAEV,KAAK,GAAG,SAAS,UAAU,CAChC,IAAK,OAAO,EAAM,OAAO,GAAG,EAC5B,IAAK,OAAO,EAAM,OAAO,GAAG,EAC5B,KAAM,EAAM,OAAO,KACnB,QAAS,eACT,MAAO,OAAO,EAAM,OAAO,GAAG,EAC9B,WAAY,GAAK,CACf,EAAM,OAAO,QAAQ,EAAM,OAAO,IAAM,OAAO,EAAE,OAAO,KAAK,EAC7D,EAAY,CAAK,CACnB,EACA,QAAS,cACT,MAAO,OAAO,EAAM,OAAO,GAAG,EAC9B,WAAY,GAAK,CACf,EAAM,OAAO,QAAQ,EAAM,OAAO,IAAM,OAAO,EAAE,OAAO,KAAK,EAC7D,EAAY,CAAK,CACnB,CAEF,CAAC,CAEH,CAEA,kBAAyB,EAAO,EAAO,CAErC,GAAI,EAAM,OAAO,SAAU,CAEzB,GAAM,GAAW,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,QAAQ,kBACrD,KAAK,MAAM,YAAY,CACrB,SAAU,kBACV,IAAK,EAAM,IACX,MAAO,EAAM,aAAa,EAC1B,MAAO,EAAM,KACf,CAAC,CAAC,EAEJ,EAAM,OAAO,GAAK,EACf,IAAI,GAAG,EAAE,EAAM,MAAM,EACrB,OAAO,GAAG,IAAM,IAAI,CACzB,CAEA,GAAM,GAAS,GAAI,KAAI,EAAM,QAAQ,QAAQ,EAAM,OAAO,QAAQ,IAAM,CAAC,CAAC,EAE1E,MAAI,GAAM,OAAO,SAER,KAAK,GAAG,SAAS,eAAe,CACrC,YAAa,kBACb,QAAS,EAAM,OAAO,GAAG,IAAI,GAAQ,EACnC,MAAO,EACP,OAAQ,EACR,SAAU,EAAO,IAAI,CAAG,CAC1B,EAAE,EACF,SAAU,MAAO,EAAG,IAAY,CAC9B,OAAO,OAAO,EAAM,OAAO,QAAS,CAClC,CAAC,EAAM,OAAO,OAAO,CACnB,GAAI,CACN,CACF,CAAC,EACD,EAAM,OAAO,EACb,EAAM,QAAQ,IAAI,iBAAiB,EAAE,cAAc,GAAI,OAAM,WAAW,CAAC,CAC3E,CACF,CAAC,EAGI,EAAM,OAAO,GAAG,IAAI,GAAO,KAAK,GAAG,SAAS,OAAO,CACxD,IAAK,EACL,MAAO,EACP,QAAS,EAAO,IAAI,CAAG,EACvB,SAAU,CAAC,EAAS,IAAQ,CAE1B,GAAI,EAEF,AAAK,EAAM,OAAO,QAAQ,EAAM,OAAO,QAAQ,GAAM,OAAO,QAAQ,EAAM,OAAO,OAAS,CAAC,GAEtF,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,IAC5C,GAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,GAAK,CAAC,GAIjD,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,GAAG,KAAK,mBAAmB,CAAG,CAAC,MAEnE,CAGL,GAAI,GAAM,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,GAAM,QAAQ,mBAAmB,CAAG,CAAC,EAGxF,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,GAAG,OAAO,EAAK,CAAC,EAEpD,EAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,GAAG,QAC/C,MAAO,GAAM,OAAO,QAAQ,EAAM,OAAO,OAAO,EAGpD,CAEA,EAAM,OAAO,EACb,EAAM,QAAQ,IAAI,iBAAiB,EAAE,cAAc,GAAI,OAAM,WAAW,CAAC,CAE3E,CACF,CAAC,CAAC,CACJ,CAEA,WAAqB,EAAO,EAAO,CAEjC,GAAM,GAAa,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,iBAGpB;AAAA,aACJ,EAAM,OAAS,YAAc,kBAAoB,UAEtD,EAAc,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,iBAGrB;AAAA,aACJ,EAAM,OAAS,YAAc,kBAAoB,UAE5D,WAAiB,EAAG,CAElB,AAAI,EAAE,OAAO,QAAQ,KAAO,cAE1B,GAAM,OAAO,QAAQ,EAAM,OAAS,OAAO,OACzC,EAAM,OAAO,QAAQ,EAAM,QAAU,CAAC,EACtC,CACE,GAAI,GAAI,MAAK,EAAE,OAAO,KAAK,EAAE,QAAQ,EAAI,GAC3C,CAAC,GAID,EAAE,OAAO,QAAQ,KAAO,eAE1B,GAAM,OAAO,QAAQ,EAAM,OAAS,OAAO,OACzC,EAAM,OAAO,QAAQ,EAAM,QAAU,CAAC,EACtC,CACE,GAAI,GAAI,MAAK,EAAE,OAAO,KAAK,EAAE,QAAQ,EAAI,GAC3C,CAAC,GAIL,EAAM,OAAO,EACb,EAAM,QAAQ,IAAI,iBAAiB,EAAE,cAAc,GAAI,OAAM,WAAW,CAAC,CAC3E,CAEA,MAAO,MAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMV;AAAA;AAAA,UAEA,WAEV,CCnRA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,uBAAwB,mBAC1B,EACA,GAAI,CACF,uBAAwB,oBAC1B,EACA,GAAI,CACF,uBAAwB,0BAC1B,EACA,GAAI,CACF,uBAAwB,oBAC1B,EACA,GAAI,CACF,uBAAwB,8CAC1B,EACA,GAAI,CACF,uBAAwB,4BAC1B,EACA,GAAI,CACF,uBAAwB,0EAC1B,CACF,CAAC,EAED,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAU,CACd,QACA,KAAM,EAAM,KACZ,KAAM,EAAM,KACZ,QAAS,EAAM,OACjB,EAEM,EAAQ,MAAO,GAAM,MAAS,UAAY,OAAO,KAAK,EAAM,IAAI,EACnE,IAAI,GAAO,KAAK,GAAG,SAAS,QAAQ,IAAQ,KAAK,GAAG,SAAS,QAAQ,GAAK,EAAS,EAAI,CAAC,EACxF,OAAO,GAAQ,CAAC,CAAC,CAAI,EAGxB,MAAK,GAAM,OAEG,KAAK,GAAG,SAAS,OAAO,CACpC,QAAS,cACT,MAAO,SACP,OAAQ,KAAK,MAAM;AAAA,YACX,KAAK,WAAW;AAAA,8CAExB,QAAS,KAAK,MAAM;AAAA,QAChB,GACN,CAAC,EAVkB,MAarB,EAEA,YAAc,EAAG,EAAS,CAExB,GAAM,GAAM,EAAE,OAEd,GAAI,EAAI,UAAU,SAAS,QAAQ,EAAG,CACpC,EAAI,UAAU,OAAO,QAAQ,EAC7B,EAAQ,QAAQ,aAAa,UAAU,EACvC,MACF,CAEA,EAAI,UAAU,IAAI,QAAQ,EAE1B,EAAQ,MAAM,KAAK,EAEnB,EAAQ,MAAM,KAAK,cAAc,SAAS,EAAE,UAAU,IAAI,SAAU,QAAQ,EAE5E,EAAQ,QAAQ,aAAa,KAAK,CAChC,KAAM,EAAQ,KACd,iBAAkB,EAAQ,iBAC1B,QAAS,EAAQ,QAEjB,KAAM,EAAQ,KACd,SAAU,KAAM,IAAW,CACzB,GAAI,EAAS,CAEX,GAAM,GAAW,CACf,MAAO,EAAQ,MACf,IAAK,EACP,EAEA,EAAS,GAAK,KAAM,MAAK,MAAM,IAAI,CACjC,OAAQ,OACR,IAAK,GAAG,EAAS,MAAM,QAAQ,yBAC7B,KAAK,MAAM,YAAY,CACrB,OAAQ,EAAS,MAAM,QAAQ,OAAO,IACtC,MAAO,EAAS,MAAM,IACtB,MAAO,EAAS,MAAM,aAAa,CACrC,CAAC,EACH,KAAM,KAAK,UAAU,CACnB,CAAC,EAAS,MAAM,MAAO,EAAQ,QACjC,CAAC,CACH,CAAC,EAED,EAAQ,MAAM,OAAO,EAErB,KAAK,SAAS,IAAI,CAAQ,CAC5B,CAEA,EAAQ,MAAM,KAAK,cAAc,SAAS,EAAE,UAAU,OAAO,SAAU,QAAQ,EAE3E,EAAI,UAAU,SAAS,QAAQ,GACjC,GAAI,UAAU,OAAO,QAAQ,EAC7B,EAAQ,QAAQ,aAAa,UAAU,EAG3C,CACF,CAAC,CAEH,CC/GA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,oBAAqB,SACrB,oBAAqB,yBACvB,EACA,GAAI,CACF,oBAAqB,SACrB,oBAAqB,gBACvB,EACA,GAAI,CACF,oBAAqB,eACrB,oBAAqB,gCACvB,EACA,GAAI,CACF,oBAAqB,UACrB,oBAAqB,uBACvB,EACA,GAAI,CACF,oBAAqB,eACrB,oBAAqB,iEACvB,EACA,GAAI,CACF,oBAAqB,UACrB,oBAAqB,iCACvB,EACA,GAAI,CACF,oBAAqB,iCACrB,oBAAqB,gFACvB,CACF,CAAC,EAED,GAAO,GAAQ,GAAS,CAEtB,GAAI,CAAC,EAAM,OAAO,KAAK,AAAC,GAAU,EAAM,MAAM,EAAG,OAEjD,EAAM,OAAO,KAAO,EAAM,MACvB,OAAO,GAAS,EAAM,MAAM,EAC5B,OAAO,GAAS,CAAC,EAAM,QAAQ,SAAS,SAAS,EAAM,KAAK,CAAC,EAC7D,IAAI,GACH,GAAM,MAAQ,EAAM,OAAO,OAAS,EAAM,OAAS,EAAM,MAClD,EACR,EAEH,GAAM,GAAW,KAAK,GAAG,SAAS,SAAS,CACzC,QAAS,GAAG,EAAM,sBAClB,YAAa,KAAK,WAAW,oBAC7B,QAAS,EAAM,OAAO,KACtB,SAAU,MAAO,EAAG,IAAU,CAsB5B,GAnBA,EAAM,OAAO,KAAK,cAAc,oBAAoB,EAAE,MAAM,QAAU,QAElE,EAAM,OAAO,MAEjB,GAAM,OAAO,MAAQ,EAAM,OAAO,OAAS,EAAM,MAEjD,EAAM,OAAO,OAAS,IAAM,CAC1B,MAAO,GAAM,OAAO,QAAQ,EAAM,OAAO,OACzC,MAAO,GAAM,OAAO,KACpB,EAAM,OAAO,EAGb,GAAI,GAAM,EAAM,KAAK,cAAc,wBAAwB,EAC3D,AAAI,GAAK,GAAI,SAAW,IAGxB,EAAM,OAAO,KAAK,cAAc,oBAAoB,EAAE,MAAM,QAAU,EAAM,OAAO,KAAK,SAAS,SAAW,EAAI,OAAS,OAC3H,EAEI,CAAC,KAAK,GAAG,OAAO,QAAQ,EAAM,OAAO,OAAO,OAGhD,EAAM,OAAO,MAAQ,EAAM,OAAO,OAAS,EAAM,MAEjD,GAAM,GAAQ,KAAM,MAAK,GAAG,OAAO,QAAQ,EAAM,OAAO,MAAM,EAAO,CAAK,EAE1E,EAAM,OAAO,KAAO,EAAM,OAAO,KAAK,YAAY,KAAK,GAAG,SAAS,KAAK,CACtE,OAAQ,EAAM,OAAO,OAAS,EAAM,MACpC,MAAO,EAAM,OAAO,OACpB,QAAS,CACX,CAAC,CAAC,EAAE,KACN,CACF,CAAC,EAEK,EAAW,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKd,GAAK,CAEb,EAAM,OAAO,KACV,OAAO,AAAC,GAAU,EAAM,OAAO,IAAI,EACnC,QAAQ,GAAS,CAChB,EAAM,OAAO,KAAK,cAAc,iBAAiB,EAAE,MAAM,CAC3D,CAAC,EAGH,GAAI,GAAM,EAAM,KAAK,cAAc,wBAAwB,EAC3D,AAAI,GAAK,GAAI,SAAW,IAExB,EAAM,OAAO,CAEf,KAAK,KAAK,WAAW,yBAEzB,SAAM,OAAO,KAAO,KAAK,GAAG,SAAS,OAAO,CAC1C,QAAS,gBACT,MAAO,SACP,OAAQ,KAAK,MAAM;AAAA,YACX,KAAK,WAAW;AAAA,8CAExB,QAAS,KAAK,MAAM;AAAA,QAChB;AAAA,QACA,GACN,CAAC,EAEM,EAAM,OAAO,IACtB,ECrHA,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAY,KAAK,MAAM,KAAK;AAAA;AAAA,yDAEqB,EAAM,UAAU,aAAe;AAAA,eAGtF,YAAK,GAAG,UAAU,OAAO,OAAO,CAC9B,QAAS,EAAM,QACf,OAAQ,EACR,MAAO,EAAM,GACf,EAAG,EAAM,SAAS,CAAC,EAEZ,CACT,ECdA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,sBAAuB,YACzB,EACA,GAAI,CACF,sBAAuB,gBACzB,EACA,GAAI,CACF,sBAAuB,0BACzB,EACA,GAAI,CACF,sBAAuB,eACzB,EACA,GAAI,CACF,sBAAuB,iCACzB,EACA,GAAI,CACF,sBAAuB,qBACzB,EACA,GAAI,CACF,sBAAuB,sCACzB,CACF,CAAC,EAED,GAAO,GAAQ,GAAS,CAGtB,GAAM,GAAmB,OAAO,QAAQ,EAAM,SAAS,EAAE,IAAI,GAAS,CAEpE,GAAI,MAAO,GAAM,IAAO,SAAU,OAGlC,GAAM,GAAW,OAAO,OAAO,EAAM,GAAI,CACvC,IAAK,EAAM,GACX,QACA,KAAM,EAAM,QAAQ,IACtB,CAAC,EAGK,EAAU,SAAS,cAAc,YAAY,EAAS,SAAS,EAGrE,GAAI,CAAC,EAAS,OAGd,EAAS,OAAS,KAAK,MAAM,KAAK,oCAGlC,EAAM,SAAW,EAAS,SAAW,EAAiB,EAEtD,YAA4B,CAE1B,GAAI,EAAS,KAAM,MAAO,GAAS,KAAK,EAExC,KAAK,GAAG,SAAS,CAAQ,EACtB,KAAK,IAAM,EAAS,KAAK,CAAC,EAI7B,EAAQ,cAAc,GAAI,aAAY,SAAU,CAC9C,OAAQ,CACV,CAAC,CAAC,CACJ,CAEA,SAAM,cAAc,KAAK,IAAI,CAC3B,EAAS,SAAW,EAAiB,CACvC,CAAC,EAGM,KAAK,GAAG,SAAS,OAAO,CAC7B,MAAO,EAAS,OAAS,EAAS,IAClC,QAAS,CAAC,CAAC,EAAS,QACpB,SAAU,AAAC,GAAY,CAErB,EAAS,QAAU,EAGnB,EAAS,QACP,EAAiB,EACjB,EAAS,OAAO,CAEpB,CACF,CAAC,CAEH,CAAC,EAED,MAAI,GAAM,UAAU,KAAM,OAGX,KAAK,GAAG,SAAS,OAAO,CACrC,QAAS,mBACT,MAAO,SACP,OAAQ,KAAK,MAAM;AAAA,YACX,KAAK,WAAW;AAAA,8CAExB,QAAS,KAAK,MAAM,OAAO,GAC7B,CAAC,CAGH,ECnGA,GAAO,GAAQ,GAAS,CAGtB,GAAM,GAAc,OAAO,KAAK,EAAM,OAAO,EAAE,IAAI,GAAO,CAExD,GAAM,GAAS,EAAM,QAAQ,GAE7B,EAAO,IAAM,EAEb,EAAO,KAAO,EAAM,QAAQ,KAE5B,GAAM,GAAO,GAAG,EAAO,aAAa,KAAK,MAAM,YAAY,CACzD,SAAU,EAAO,SACjB,OAAQ,EAAM,QAAQ,OAAO,IAC7B,IAAK,KAAK,MAAM,SAAS,IACzB,IAAK,KAAK,MAAM,SAAS,IACzB,EAAG,KAAK,MAAM,SAAS,CACzB,CAAC,IAED,MAAO,MAAK,MAAM;AAAA;AAAA;AAAA;AAAA,gBAIN;AAAA;AAAA,gBAEA,EAAO,OAAS,EAAO,KAErC,CAAC,EAYD,MATe,MAAK,GAAG,SAAS,OAAO,CACrC,QAAS,iBACT,MAAO,SACP,OAAQ,KAAK,MAAM;AAAA;AAAA,8CAGnB,QAAS,KAAK,MAAM,OAAO,GAC7B,CAAC,CAGH,ECxCA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,mBAAoB,QACpB,yBAA0B,wBAC1B,2BAA4B,iBAC5B,2BAA4B,2CAC5B,uBAAwB,aACxB,wBAAyB,wCACzB,oBAAqB,oBACvB,EACA,GAAI,CACF,mBAAoB,OACpB,yBAA0B,oCAC1B,2BAA4B,+BAC5B,2BAA4B,8CAC5B,uBAAwB,oBACxB,wBAAyB,yCACzB,oBAAqB,eACvB,EACA,GAAI,CACF,mBAAoB,2BACpB,yBAA0B,uCAC1B,2BAA4B,2BAC5B,2BAA4B,gEAC5B,uBAAwB,2BACxB,wBAAyB,yDACzB,oBAAqB,0BACvB,EACA,GAAI,CACF,mBAAoB,OACpB,yBAA0B,0BAC1B,2BAA4B,sBAC5B,2BAA4B,+DAC5B,uBAAwB,uBACxB,wBAAyB,2CACzB,oBAAqB,oBACvB,EACA,GAAI,CACF,mBAAoB,qBACpB,yBAA0B,qDAC1B,2BAA4B,4BAC5B,2BAA4B,6FAC5B,uBAAwB,4BACxB,wBAAyB,wEACzB,oBAAqB,2BACvB,EACA,GAAI,CACF,mBAAoB,QACpB,yBAA0B,oCAC1B,2BAA4B,6BAC5B,2BAA4B,2DAC5B,uBAAwB,eACxB,wBAAyB,iCACzB,oBAAqB,iBACvB,EACA,GAAI,CACF,mBAAoB,2BACpB,yBAA0B,+DAC1B,2BAA4B,uCAC5B,2BAA4B,sHAC5B,uBAAwB,+DACxB,wBAAyB,qEACzB,oBAAqB,wDACvB,CACF,CAAC,EAED,GAAO,GAAQ,GAAS,CAEtB,GAAI,EAAM,MAAM,OAAQ,OAExB,GAAM,GAAU,CAAC,EAgBjB,GAdI,EAAM,MAAM,eAEd,EAAQ,KAAK,KAAK,GAAG,SAAS,OAAO,CACnC,MAAO,wBACP,IAAK,EACL,IAAK,IACL,IAAK,SAAS,EAAM,EAAE,WAAW,EAAE,GAAG,EACtC,SAAU,GAAK,CACb,EAAM,EAAE,WAAW,WAAW,EAAE,OAAO,MAAM,GAAG,CAAC,CACnD,CACF,CAAC,CAAC,EAIA,EAAM,MAAM,MAAO,CAErB,GAAM,GAAgB,KAAK,GAAG,SAAS,OAAO,CAC5C,QAAS,gBACT,MAAO,EAAM,MAAM,MAAM,OAAS,KAAK,WAAW,2BAClD,QAAS,CAAC,CAAC,EAAM,MAAM,MAAM,QAC7B,SAAU,AAAC,GAAY,CACrB,EAAM,MAAM,MAAM,QAAU,EAC5B,EAAM,EAAE,SAAS,EAAM,EAAE,SAAS,CAAC,CACrC,CACF,CAAC,EAED,AAAI,GAAM,MAAM,MAAM,SAAW,EAAM,MAAM,MAAM,UACjD,EAAM,QAAQ,IAAI,iBAAiB,EAAE,iBAAiB,YAAa,IAAM,CACvE,GAAM,GAAI,EAAM,QAAQ,IAAI,QAAQ,EAAE,QAAQ,EAExC,EAAS,EAAM,KAAK,cAAc,yBAAyB,EAEjE,GAAI,GAAK,EAAM,MAAM,MAAM,SAAW,GAAK,EAAM,MAAM,MAAM,QAC3D,MAAO,GAAO,UAAU,IAAI,UAAU,EAGxC,EAAO,UAAU,OAAO,UAAU,CACpC,CAAC,EAGH,EAAQ,KAAK,CAAa,CAC5B,CAGA,AAAI,EAAM,MAAM,QAAU,OAAO,KAAK,EAAM,MAAM,MAAM,EAAE,OAAS,GACjE,EAAQ,KAAK,KAAK,MAAM;AAAA,aACf,KAAK,WAAW;AAAA,UACnB,KAAK,GAAG,SAAS,SAAS,CAC1B,QAAS,OAAO,KAAK,EAAM,MAAM,MAAM,EAAE,IAAI,GAAO,EAClD,MAAQ,EAAM,MAAM,OAAO,GAAK,OAAS,EACzC,OAAQ,CACV,EAAE,EACF,SAAU,CAAC,EAAG,IAAU,CAGtB,EAAM,MAAM,MAAQ,EAAM,MAAM,OAAO,EAAM,QAG7C,EAAM,MAAM,OAAO,UAAY,GAG/B,KAAK,GAAG,OAAO,QAAQ,EAAM,MAAM,MAAM,OAAS,KAAK,MAAM,OAC3D,EAAM,MAAM,OAAO,cACnB,KAAK,GAAG,OAAO,QAAQ,EAAM,MAAM,MAAM,MAAM,CAAK,CAAC,EAEvD,EAAM,OAAO,CACf,CACF,CAAC,GAAG,EAGN,EAAM,MAAM,OAAO,OAAS,CAAC,EAAM,MAAM,QAC3C,EAAQ,KAAK,KAAK,MAAM;AAAA,YAChB,EAAM,MAAM,MAAM,YAAY,EAGxC,YAAsB,CACpB,MAAO,MAAK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKJ,GAAG,CACX,GAAI,GAAM,EAAE,OAEZ,EAAI,MAAM,QAAU,OAEpB,KAAK,GAAG,SAAS,MAAM,CACrB,OAAQ,EAAM,QAAQ,IAAI,iBAAiB,EAC3C,QAAS,EAAM,MAAM,OAAO,cAC5B,MAAO,IAAM,CACX,EAAM,MAAM,OAAO,OAAO,EAAM,MAAM,OAAO,aAAa,EAC1D,EAAI,MAAM,QAAU,OACtB,CACF,CAAC,CAEH,IACN,CAOA,GALA,KAAK,GAAG,OAAO,QAAQ,EAAM,MAAM,OAAO,OAAS,EAAQ,KAAK,KAAK,MAAM;AAAA,MACvE,EAAM,MAAM,YAAc,EAAY,GAAK;AAAA;AAAA,QAEzC,KAAK,GAAG,OAAO,QAAQ,EAAM,MAAM,MAAM,MAAM,CAAK,GAAG,EAEzD,EAAC,EAAQ,OAEb,SAAM,MAAM,OAAS,KAAK,GAAG,SAAS,OAAO,CAC3C,QAAS,eACT,MAAO,SACP,OAAQ,KAAK,MAAM;AAAA,YACX,KAAK,WAAW;AAAA,8CAExB,QAAS,CACX,CAAC,EAEM,EAAM,MAAM,MACrB,EC3LA,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAQ,EAAM,MAAM,MAEpB,EAAO,CAAC,EAoHd,GAjHA,EAAM,QAAU,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA,QAI/B,KAAK,WAAW;AAAA;AAAA;AAAA,kBAGN,GAAK,CACb,EAAE,OAAO,QAAQ,SAAS,EAAE,iBAAiB,SAAS,EAAE,QAAQ,GAAW,EAAQ,MAAM,CAAC,EAGzF,EAAM,MAAM,QAAU,EAAM,MAAM,EAC/B,EAAM,EAAE,QAAQ,EAChB,EAAM,OAAO,CAEnB,KAAK,KAAK,WAAW,kCAAkC,EAE7D,OAAO,QAAQ,EAAM,GAAG,EAAE,QAAQ,GAAO,CAGvC,GAAM,GAAY,OAAO,OACvB,CAAC,EACD,EAAM,MAAM,QACX,EAAI,GAAG,OAAS,EAAI,GAAG,MAAM,MAAQ,EAAI,GAAG,OAAU,EAAI,EAAE,EAG3D,EAAO,KAAK,MAAM;AAAA;AAAA;AAAA,UAGhB,KAAK,GAAG,SAAS,WACjB,OAAO,OAAO,CAAE,MAAO,GAAI,OAAQ,EAAG,EAAG,CAAS,CACpD,IAGA,EAAQ,KAAK,MAAM;AAAA;AAAA,gBAEX,SAAS,EAAM,QAAU,UAAW,MAC1C,EAAM,QAAQ,QAAQ,EAAM,QAAQ,IAAI,QAAQ,EAAI,EAAE,IAAM,EAAI,WAAa;AAAA;AAAA,kBAGrE,GAAK,CAEb,AAAI,CAAC,EAAM,QAEX,GAAE,OAAO,UAAU,OAAO,UAAU,EAGpC,AAAI,EAAE,OAAO,UAAU,SAAS,UAAU,EAGnC,GAAM,OAAO,QAAQ,EAAM,QAC9B,GAAM,OAAO,QAAQ,EAAM,OAAS,CAAC,GAIlC,EAAM,OAAO,QAAQ,EAAM,OAAO,IACrC,GAAM,OAAO,QAAQ,EAAM,OAAO,GAAK,CAAC,GAI1C,EAAM,OACH,QAAQ,EAAM,OAAO,GACrB,KAAK,EAAI,GAAG,MAAQ,EAAI,EAAE,EAG7B,EAAM,OACH,QAAQ,EAAM,OAAO,GAAK,EAAM,OAAO,QAAQ,EAAM,OAAO,GAAG,KAAK,GAKvE,CAAI,MAAM,QAAQ,EAAI,GAAG,IAAI,EAE3B,EAAI,GAAG,KAAK,QAAQ,GAAO,CAGzB,EAAM,OACH,QAAQ,EAAM,OAAO,GACrB,OAAO,EAAM,OAAO,QAAQ,EAAM,OAAO,GAAG,QAAQ,CAAG,EAAG,CAAC,CAEhE,CAAC,EAKD,EAAM,OACH,QAAQ,EAAM,OAAO,GACrB,OAAO,EAAM,OAAO,QAAQ,EAAM,OAAO,GAAG,QAAQ,EAAI,EAAE,EAAG,CAAC,EAK9D,EAAM,OAAO,QAAQ,EAAM,OAAO,GAAG,QACxC,MAAO,GAAM,OAAO,QAAQ,EAAM,QAKrC,EAAM,MAAM,QAAU,EAAM,OACzB,EAAM,EAAE,QAAQ,EAChB,EAAM,OAAO,EAEnB,KAAK,EAAI,GAAG,OAAS,EAAI,KAG7B,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,gBAET,EAAI;AAAA;AAAA,QAEZ,IAAO,GAAO,CACpB,CAAC,EAGG,EAAM,MAAM,QAAS,CAGvB,GAAI,GAAO,KAAK,MAAM;AAAA;AAAA;AAAA,UAGhB,KAAK,GAAG,SAAS,WAAW,OAAO,OAAO,CAC1C,MAAO,GACP,OAAQ,EACV,EAAG,EAAM,MAAM,QAAS,EAAM,MAAM,OAAO,CAAC,IAG5C,EAAQ,KAAK,MAAM;AAAA;AAAA;AAAA,UAGjB,KAAK,WAAW,sBAGtB,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA,UAIf,IAAO,GAAO,CACtB,CAEA,SAAM,MAAM,OAAS,KAAK,MAAM,KAAK,yBAAyB,IAEvD,EAAM,MAAM,MACrB,ECpJA,GAAO,GAAQ,GACb,GAAM,MAAM,OAAS,KAAK,MAAM,KAAK,YAE9B,EAAM,MAAM,QCHrB,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAQ,EAAM,MAAM,MAEpB,EAAO,CAAC,EAEd,SAAM,QAAQ,QAAQ,GAAO,CAG3B,GAAM,GAAY,OAAO,OACvB,CAAC,EACD,EAAM,MAAM,QACX,EAAI,OAAS,EAAI,MAAM,MAAQ,EAAI,OAAU,CAAG,EAG/C,EAAO,KAAK,MAAM;AAAA;AAAA;AAAA,UAGhB,KAAK,GAAG,SAAS,WACjB,OAAO,OAAO,CAAE,MAAO,GAAI,OAAQ,EAAG,EAAG,CAAS,CACpD,IAGA,EAAQ,KAAK,MAAM;AAAA,mDACwB,EAAI,OAAS,EAAI,QAGhE,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,kBAEP,EAAI;AAAA;AAAA,UAEZ,IAAO,GAAO,CAEtB,CAAC,EAED,EAAM,MAAM,OAAS,KAAK,MAAM,KAAK,yBAAyB,IAEvD,EAAM,MAAM,MACrB,ECtCA,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAO,CAAC,EAEd,EAAK,KAAK,KAAK,GAAG,SAAS,SAAS,CAClC,QAAS,OAAO,QAAQ,EAAM,WAAW,EAAE,IAAI,GAAI,EACjD,MAAO,EAAE,GACT,QAAS,EAAE,EACb,EAAE,EACF,SAAU,CAAC,EAAG,IAAU,CACtB,EAAM,UAAY,EAAM,QACxB,EAAM,OAAO,CACf,CACF,CAAC,CAAC,EAEF,GAAM,GAAI,EAAM,MAAM,MAAM,OAEtB,EAAgB,GAAI,eAEpB,EAAY,KAAK,MAAM;AAAA;AAAA;AAAA,YAGnB,iCAAiC;AAAA;AAAA;AAAA,uCAGN,0BAA0B,KAAK,KAAK,EAAE,CAAC;AAAA,uCACvC,0BAA0B;AAAA;AAAA;AAAA,QAGzD,EAAM,MAAM,MAAM,IAAI,CAAC,EAAQ,IAAI,CAEnC,GAAI,GAAO,KAAK,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKhB,GAAG,EAAI,GAAE;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKT,GAAG,EAAI,GAAE,QAEf,EAAkB,sBAAsB,mBAAmB,EAAc,kBAAkB,CAAI,CAAC,IAE9F,EAAc;AAAA;AAAA,wBAEJ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAMQ,MAE1B,MAAO,MAAK,MAAM,kBAAkB,IAEtC,CAAC;AAAA;AAAA;AAAA,QAGC,EAAM,MAAM,MAAM,IAAI,CAAC,EAAQ,IAAI,KAAK,MAAM;AAAA,qBACjC,0BAA0B,EAAE,sBAAsB;AAAA,OAChE;AAAA;AAAA;AAAA;AAAA,wCAIiC,0BAA0B,KAAK,KAAK,EAAE,CAAC;AAAA,wCACvC,0BAA0B;AAAA;AAAA,UAIhE,SAAK,KAAK,CAAS,EAGnB,EAAK,KAAK,KAAK,GAAG,SAAS,SAAS,CAClC,QAAS,OAAO,QAAQ,EAAM,WAAW,EAAE,IAAI,GAAI,EACjD,MAAO,EAAE,GACT,QAAS,EAAE,EACb,EAAE,EACF,KAAM,OAAO,KAAK,EAAM,WAAW,EAAE,GACrC,SAAU,CAAC,EAAG,IAAU,CACtB,EAAM,WAAa,EAAM,QACzB,EAAM,OAAO,CACf,CACF,CAAC,CAAC,EAEF,EAAK,KAAK,KAAK,GAAG,SAAS,OAAO,CAChC,MAAO,KAAK,WAAW,wBACvB,SAAU,AAAC,GAAY,CACrB,EAAM,WAAa,EACnB,EAAM,OAAO,CACf,CAAC,CAAC,CAAC,EAEL,EAAM,MAAM,OAAS,KAAK,MAAM,KAAK;AAAA,0BACb,IAExB,EAAM,MAAM,OAAO,iBAAiB,SAAU,IAAM,CAChD,EAAM,MAAM,OAAO,cAAc,oBAAoB,EAAE,YAAc,EAAM,QAAQ,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EACvI,EAAM,MAAM,OAAO,cAAc,oBAAoB,EAAE,YAAc,EAAM,QAAQ,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EACvI,EAAM,MAAM,OAAO,cAAc,oBAAoB,EAAE,YAAc,EAAM,QAAQ,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EAEvI,AAAI,EAAM,WAER,GAAM,MAAM,OAAO,cAAc,qBAAqB,EAAE,YAAc,EAAM,SAAS,eAAe,QAAS,CAAE,sBAAuB,EAAG,MAAO,SAAU,CAAC,EAC3J,EAAM,MAAM,OAAO,cAAc,qBAAqB,EAAE,YAAc,EAAM,SAAS,eAAe,QAAS,CAAE,sBAAuB,EAAG,MAAO,SAAU,CAAC,EAC3J,EAAM,MAAM,OAAO,cAAc,qBAAqB,EAAE,YAAc,EAAM,SAAS,eAAe,QAAS,CAAE,sBAAuB,EAAG,MAAO,SAAU,CAAC,GAI3J,GAAM,MAAM,OAAO,cAAc,qBAAqB,EAAE,YAAc,EAAM,SAAS,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EACzI,EAAM,MAAM,OAAO,cAAc,qBAAqB,EAAE,YAAc,EAAM,SAAS,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EACzI,EAAM,MAAM,OAAO,cAAc,qBAAqB,EAAE,YAAc,EAAM,SAAS,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EAG/I,CAAC,EAEM,EAAM,MAAM,MACrB,ECrHA,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAO,CAAC,EAEV,EAAO,KAAK,MAAM;AAAA;AAAA;AAAA,MAGlB,KAAK,GAAG,SAAS,WACjB,OAAO,OAAO,CAAE,MAAO,GAAI,OAAQ,EAAG,EAAG,OAAO,OAAO,CAAC,EAAG,EAAM,MAAM,QAAS,EAAM,MAAM,MAAM,KAAK,CAAC,CAC1G,IAEF,SAAK,KAAK,KAAK,MAAM;AAAA;AAAA;AAAA,QAGf,uBAA0B,EAAM,MAAM,MAAM,OAAO,EAEzD,EAAM,MAAM,OAAS,KAAK,MAAM,KAAK,yBAAyB,IAEvD,EAAM,MAAM,MACrB,ECaA,GAAO,GAAQ,CACb,OACA,WACA,UACA,OAAQ,CACN,OACA,QACA,SACA,YACA,UACA,WACF,EACA,QAAS,CACP,cACA,cACA,YACA,OACA,OACF,EACA,OAAQ,CACN,YAAa,GAAU,SAAQ,KAAK,8DAA8D,EAAU,EAAY,CAAK,GAC7H,UAAW,GAAU,SAAQ,KAAK,8DAA8D,EAAU,EAAU,CAAK,GACzH,KAAM,GAAU,SAAQ,KAAK,8DAA8D,EAAU,EAAK,CAAK,GAC/G,MAAO,GAAU,SAAQ,KAAK,8DAA8D,EAAU,EAAM,CAAK,EACnH,CACF,ECzDA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,cAAe,6BACf,cAAe,wBACf,gBAAiB,gCACjB,gBAAiB,iBACnB,EACA,GAAI,CACF,cAAe,wCACf,cAAe,mCACf,gBAAiB,yBACjB,gBAAiB,qBACnB,EACA,GAAI,CACF,cAAe,yDACf,cAAe,6CACf,gBAAiB,mDACjB,gBAAiB,0BACnB,EACA,GAAI,CACF,cAAe,iCACf,cAAe,gBACf,gBAAiB,kBACjB,gBAAiB,mBACnB,EACA,GAAI,CACF,cAAe,4DACf,cAAe,iEACf,gBAAiB,qDACjB,gBAAiB,2BACnB,EACA,GAAI,CACF,cAAe,mBACf,cAAe,gCACf,gBAAiB,0BACjB,gBAAiB,mBACnB,EACA,GAAI,CACF,cAAe,mGACf,cAAe,+DACf,gBAAiB,yGACjB,gBAAiB,wDACnB,CACF,CAAC,EAED,GAAO,GAAQ,GAAY,CAEzB,EAAS,iBAAiB,KAAK,UAAU,CACvC,EAAS,KAAK,OAAO,CACvB,CAAC,EAED,EAAS,iBAAiB,KAAK,UAAU,CACvC,EAAS,KAAK,cAAc,GAAI,OAAM,YAAY,CAAC,CACrD,CAAC,EAGD,GAAM,GAAS,CACb,KAAK,MAAM,WAAW,EAAS,OAAO,SACtC,KAAK,MAAM,sCACb,EAcA,GAXA,EAAS,MAAM,KACb,GAAU,GAAM,OAAS,OAAS,EAAM,OAAS,aAC5C,EAAM,KAAK,GAAK,EAAO,KAAK,KAAK,MAAM;AAAA;AAAA,gBAEhC,KAAK,WAAW;AAAA;AAAA,kBAEd,GAAK,CACf,EAAS,MAAM,CACjB,IAAI,EAGJ,CAAC,EAAS,KAAO,EAAS,OAAO,wBAAyB,CAG5D,GAAS,GAAT,UAAsB,CAEpB,EAAS,MAAM,QAAQ,GAAS,CAK9B,AAFA,MAAO,GAAM,SAET,AAAC,EAAM,MAEX,GAAM,MAAQ,EAAM,KACpB,MAAO,GAAM,KACf,CAAC,CACH,EAEA,EAAY,EAGZ,EAAS,gBAAgB,KAAK,IAAI,CAGhC,EAAW,UAAU,OAAO,IAAI,EAChC,EAAY,EACZ,EAAM,OAAO,EACb,EAAQ,KAAK,GAAG,UAAU,MAAM,CAAQ,EACxC,EAAS,KAAK,YAAY,CAAK,CACjC,CAAC,EAED,GAAM,GAAa,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,oBAInB,GAAK,CAGf,AAAI,EAAE,OAAO,UAAU,SAAS,IAAI,EAGlC,GAAE,OAAO,UAAU,OAAO,IAAI,EAG9B,EAAY,GAKZ,GAAE,OAAO,UAAU,IAAI,IAAI,EAG3B,EAAS,MAAM,QAAQ,GAAS,CAE9B,AAAI,CAAC,EAAM,OAEX,GAAM,KAAO,EAAM,MACnB,MAAO,GAAM,MACf,CAAC,GAIH,EAAM,OAAO,EAEb,EAAQ,KAAK,GAAG,UAAU,MAAM,CAAQ,EAExC,EAAS,KAAK,YAAY,CAAK,CACjC,KAEJ,EAAO,KAAK,CAAU,CACxB,CAGA,EAAO,KAAK,KAAK,MAAM;AAAA;AAAA,gBAET,KAAK,WAAW;AAAA;AAAA;AAAA,kBAGd,GAAK,CACf,EAAS,KAAK,UAAU,IAAI,UAAU,EACtC,EAAS,OAAO,CAClB,IAAI,EAGR,EAAS,OAAO,MAAM,QAAU,EAAO,KAAK,KAAK,MAAM;AAAA;AAAA,gBAEzC,KAAK,WAAW;AAAA;AAAA,kBAEd,GAAK,CACf,EAAS,MAAM,CACjB,IAAI,EAGR,EAAO,KAAK,KAAK,MAAM;AAAA;AAAA,gBAET,KAAK,WAAW;AAAA;AAAA,kBAEd,GAAK,CACf,EAAS,OAAO,CAElB,IAAI,EAER,EAAS,KAAO,KAAK,GAAG,SAAS,OAAO,CACtC,MAAO,gCACP,OAAQ,CACV,CAAC,EAED,GAAI,GAAQ,EAAS,KAAK,YAAY,KAAK,GAAG,UAAU,MAAM,CAAQ,CAAC,EAIvE,EAAS,KAAK,cAAc,SAAS,EAAE,MAAM,aAAe,aAAa,EAAS,OAAO,SAGzF,EAAS,KAAK,iBAAiB,YAAa,GAAK,CAG/C,AAAI,EAAE,OAAO,OAAS,EAAE,OAAO,SAG7B,EAAE,OAAO,KAAK,UAAU,IAAI,aAAa,EAKzC,OAAO,GAAE,OAAO,SAChB,EAAE,OAAO,KAAK,UAAU,OAAO,aAAa,GAI9C,EAAS,KAAK,cAAc,eAAe,EACxC,MAAM,QAAU,EAAS,MACvB,KAAK,GAAS,MAAO,GAAM,SAAa,GAAW,GAC/C,gBAAkB,MAE7B,CAAC,EAED,EAAS,KAAK,iBAAiB,aAAc,IAAI,CAE/C,EAAM,OAAO,EAEb,EAAS,KAAK,cAAc,eAAe,EAAE,MAAM,QAAU,OAE7D,EAAS,KAAK,UAAU,OAAO,UAAU,EAEzC,EAAQ,KAAK,GAAG,UAAU,MAAM,CAAQ,EAExC,EAAS,KAAK,YAAY,CAAK,CACjC,CAAC,CACH,EC7NA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,mBAAoB,iBACtB,EACA,GAAI,CACF,mBAAoB,kBACtB,EACA,GAAI,CACF,mBAAoB,wCACtB,EACA,GAAI,CACF,mBAAoB,4BACtB,EACA,GAAI,CACF,mBAAoB,sCACtB,EACA,GAAI,CACF,mBAAoB,mCACtB,EACA,GAAI,CACF,mBAAoB,oEACtB,CACF,CAAC,EAED,GAAM,GAAO,CACX,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,EACA,CACE,OAAQ,IACR,OAAQ,SACV,CACF,EAEO,EAAQ,GAAU,CAIvB,GAFI,CAAC,EAAO,SAER,CAAC,EAAO,OAAQ,OAEpB,GAAM,GAAW,CACf,KAAM,EAAO,OACb,QAAS,EAAO,OAClB,EAEM,EAAW,EAAS,KAAK,YAAY,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,gBAI7C,GAAK,CACb,OAAO,OAAO,EAAS,QAAQ,SAAS,EACrC,QAAQ,GAAY,EAAS,OAAO,CAAC,CAC1C;AAAA,QACE,KAAK,WAAW,oBAAoB,EAE1C,SAAO,QAAQ,UAAY,GAAI,OAAM,EAAO,QAAQ,UAAW,CAC7D,IAAK,SAAS,EAAQ,EAAK,EAAS,CAGlC,GAAM,GAAS,EAAK,KAAK,GAAU,CAAC,EAAO,IAAI,EAG/C,SAAO,KAAO,EAAS,KAGvB,EAAS,OAAS,EAGlB,EAAS,MAAQ,CACf,YAAa,EAAO,OACpB,UAAW,EAAO,OAClB,YAAa,EACf,EAGA,EAAS,MAAQ,KAAK,MAAM,MAAM,CAChC,CACE,YAAa,OACb,cAAe,GACf,YAAa,CACf,EACA,CACE,YAAa,OACb,cAAe,GACf,YAAa,CACf,EACA,CACE,YAAa,OACb,cAAe,GACf,YAAa,CACf,EACA,CACE,YAAa,EAAS,MAAM,aAAe,OAC3C,YAAa,EACb,UAAW,EAAS,MAAM,WACvB,EAAS,MAAM,aAAe,OACjC,YAAa,EAAS,MAAM,aAAe,EAC7C,CACF,CAAC,EAGD,EAAS,SAAW,KAAK,MAAM,MAAM,CACnC,KAAM,CACJ,KAAM,eACN,OAAQ,EAAO,OACf,MAAO,EAAS,MAAM,YACtB,MAAO,EACP,OAAQ,CAAC,GAAK,CAAC,CACjB,CACF,CAAC,EAED,QAAQ,IAAI,GAAG,SAAS,EAGxB,KAAK,GAAG,UAAU,KAAK,CAAQ,EAG/B,OAAO,OAAO,EAAS,KAAK,QAAQ,EAAE,QAAQ,GAAM,EAAG,UAAU,OAAO,UAAU,CAAC,EAGnF,EAAS,KAAK,aAAa,EAAS,KAAM,EAAS,WAAW,EAG9D,EAAS,KAAK,cAAc,GAAI,OAAM,iBAAiB,CAAC,EAGxD,EAAS,MAAM,QAAU,QAGzB,SAAS,cAAc,qBAAqB,EAAE,MAAM,EAGpD,SAAS,cAAc,qBAAqB,EAAE,MAAM,QAAU,QAEvD,EACT,EACA,eAAgB,SAAU,EAAQ,EAAM,CACtC,QAAQ,eAAe,GAAG,SAAS,EAEnC,GAAI,GAAS,EAAK,KAAK,GAAU,EAAO,OAAS,CAAI,EACrD,UAAU,MAAO,GAAO,KAExB,WAAW,IAAM,CAGf,GAAI,CAAC,SAAS,iBAAiB,6BAA6B,EAAE,OAAQ,CAGpE,SAAS,cAAc,kBAAkB,EAAE,MAAM,EAEjD,EAAS,MAAM,QAAU,OAEzB,GAAI,GAAW,SAAS,cAAc,4BAA4B,EAElE,AAAI,EAGF,EAAS,MAAQ,GAIjB,SAAS,cAAc,qBAAqB,EAAE,MAAM,QAAU,MAElE,CAEF,EAAG,GAAG,EAEC,EACT,CACF,CAAC,EAEM,CACT,EC7MA,GAAO,GAAQ,CAAC,EAAU,IAAU,CAElC,GAAI,CAAC,EAAS,MAAO,OAGrB,GAAM,GAAW,KAAK,MAAM,KAAK,uCAG3B,EAAS,CAAC,EAGhB,OAAW,KAAS,IAAS,EAAS,MAAO,CAG3C,GAAI,EAAS,MAAQ,EAAS,KAAK,UAAU,SAAS,UAAU,EAAG,MASnE,GANA,EAAM,SAAW,EAGjB,EAAM,KAAO,EAAM,MAAQ,OAGvB,EAAM,sBAAuB,CAE/B,GAAI,GAAa,EAAM,SAAS,MAAM,KAAK,GAAU,EAAO,QAAU,EAAM,qBAAqB,EAEjG,GAAc,OAAO,OAAO,EAAO,EAAW,KAAK,CACrD,CAEA,GAAI,EAAM,qBAAsB,CAE9B,GAAI,GAAa,EAAM,SAAS,MAAM,KAAK,GAAU,EAAO,QAAU,EAAM,oBAAoB,EAEhG,GAAc,KAAK,MAAM,MAAM,EAAO,EAAW,KAAK,CACxD,CAgBA,GAbI,EAAM,WAGN,EAAM,gBACL,CAAC,EAAM,OACP,CAAC,EAAM,MAGR,EAAM,oBACL,MAAO,GAAM,MAAU,KACvB,CAAC,EAAM,MAGR,EAAM,eACL,EAAM,QAAU,MAChB,CAAC,EAAM,KAAM,SAgDlB,GA9CI,EAAM,WACL,EAAM,QAAU,MAChB,CAAC,EAAM,UACP,CAAC,EAAM,MAAM,GAAM,MAAQ,EAAM,WAGlC,EAAM,OAGH,GAAO,EAAM,QAEhB,GAAO,EAAM,OAAS,EAAM,SAAS,YACnC,KAAK,GAAG,SAAS,OAAO,CACtB,MAAO,SAAS,EAAM,UAAY,YAAc,KAChD,OAAQ,KAAK,MAAM;AAAA,oBACX,EAAM;AAAA,qDAEhB,CAAC,CAAC,GAIN,EAAM,SAAW,EAAO,EAAM,QAGhC,EAAM,KAAO,EAAM,SAAS,YAAY,KAAK,MAAM,KAAK;AAAA;AAAA,oBAExC,EAAM;AAAA,gBACV,YAAY,EAAM,QAAQ,EAAM,OAAS,MAAM,EAAM,QAAU,UAAY,OAAO,EAE1F,EAAM,OAER,EAAM,KAAK,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,mBAGrB,GAAG,EAAM,WAAa;AAAA,mBACtB,EAAM,SAAW,SAAS,EAAM,OAAO,EAIlD,GAAM,QAAU,MAAQ,MAAO,GAAM,MAAU,MAGjD,GAAM,MAAQ,EAAM,SAAW,EAAM,OAInC,EAAM,WAAY,CAGpB,GAAM,GAAc,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,CAAK,CAAC,EAGxE,KAAK,MACF,IAAI,GAAG,EAAM,MAAQ,EAAM,SAAS,MAAM,QAAQ,kBAAkB,GAAa,EACjF,KAAK,GAAY,CAGhB,GAAI,IAAa,KAAM,OAIvB,EAAM,KAAO,EAGb,GAAM,GAAK,KAAK,GAAG,UAAU,QAAQ,EAAM,QAAQ,CAAK,EAExD,GAAM,EAAM,KAAK,OAAO,CAAE,CAC5B,CAAC,EAEH,QACF,CAGA,GAAM,GAAK,KAAK,GAAG,UAAU,QAAQ,EAAM,QAAQ,CAAK,EAGxD,GAAI,IAAO,QAAS,MAEpB,GAAM,EAAM,KAAK,OAAO,CAAE,CAC5B,CAEA,MAAO,EACT,ECzIA,GAAO,GAAQ,GAAS,CAEtB,GAAM,GAAS,KAAK,GAAG,SAAS,OAAO,CACrC,MAAO,EAAM,OAAS,EAAM,MAC5B,QAAS,EAAM,MACf,SAAU,CAAC,EAAM,KACjB,SAAU,AAAC,GAAY,CAErB,EAAM,SAAW,EACjB,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CAAC,CAEN,CACF,CAAC,EAID,MAFa,MAAK,MAAM,KAAK,OAAO,GAGtC,ECpBA,GAAO,GAAQ,GAAS,CAatB,GAVA,EAAM,MAAQ,EAAM,SAAS,MAC7B,EAAM,KAAO,EAAM,MAAQ,EAAM,SAAS,MAAM,QAAQ,KAGpD,EAAM,YAAc,EAAM,WAAW,KACrC,GAAa,EAAM,SAAS,MAAM,KAChC,GAAW,CAAC,EAAO,OAAS,EAAO,QAAU,CAC/C,CAAC,GAAG,MAAO,GAAM,QAGjB,EAAM,OAGR,SAAM,SAAW,EAAM,OAAO,EAGvB,KAAK,MAAM,KAAK;AAAA,QACnB,EAAM,QAAU;AAAA,QAChB,EAAM,oBAAsB,KAIlC,GAAI,MAAO,GAAM,QAAW,UAAY,SAAS,eAAe,EAAM,MAAM,EAAG,CAG7E,EAAM,OAAS,SAAS,eAAe,EAAM,MAAM,EAGnD,KAAK,GAAG,SAAS,CAAK,EAAE,KAAK,IAAM,EAAM,OAAO,CAAC,EAEjD,MACF,CAGA,SAAM,QAAU,EAAM,SAAW,MAAO,GAAM,QAAW,UACpD,SAAS,cAAc,YAAY,EAAM,SAAS,EAGnD,EAAM,SAGR,GAAM,OAAS,KAAK,MAAM,KAAK,oCAG/B,EAAM,SAAW,EAAiB,CAAK,GAIrC,MAAO,GAAM,QAAW,UAE1B,GAAM,mBAAqB,KAAK,MAAM,KAAK;AAAA;AAAA,iBAE9B,YAAY,EAAM,YAE/B,EAAM,OAAS,EAAM,mBAErB,EAAM,SAAW,KAAK,GAAG,SAAS,CAAK,EAAE,KAAK,IAAM,EAAM,OAAO,CAAC,GAIpE,EAAM,OAAS,EAAM,OAAS,KAAK,GAAG,SAAS,OAAO,CACpD,MAAO,EAAM,MACb,QAAS,CAAC,CAAC,EAAM,QACjB,SAAU,AAAC,GAAY,CAKrB,GAHA,EAAM,QAAU,EAGZ,EAAM,mBAAoB,CAG5B,GAAI,CAAC,EAAM,QAAS,CAClB,EAAM,mBAAmB,MAAM,QAAU,OACzC,MACF,CAEA,EAAM,mBAAmB,MAAM,QAAU,QAGzC,MAAO,GAAM,QAAW,YAAc,EAAM,OAAO,EAGnD,MAAO,GAAM,QAAW,YAAc,KAAK,GAAG,SAAS,CAAK,EAAE,KAAK,IAAM,CAGvE,MAAO,GAAM,MAAS,SAClB,EAAM,QAAQ,EAAM,IAAI,EACxB,EAAM,OAAO,CACnB,CAAC,EAED,MACF,CAGA,EAAM,QAAU,EAAiB,CAAK,EAAI,EAAM,OAAO,CACzD,CACF,CAAC,EAGM,KAAK,MAAM,KAAK;AAAA,MACnB,EAAM,QAAU;AAAA,MAChB,EAAM,oBAAsB,IAClC,EAEA,WAA0B,EAAO,CAG/B,GAAI,EAAM,KAAM,MAAO,GAAM,KAAK,EAGlC,KAAK,GAAG,SAAS,CAAK,EAAE,KAAK,IAAM,CAGjC,EAAM,UAAY,4BAA4B,EAAM,SAAS,MAAM,cAGnE,EAAM,QAAQ,cAAc,GAAI,aAAY,SAAU,CACpD,OAAQ,CACV,CAAC,CAAC,EAGF,EAAM,SAAW,EAAM,KAAK,CAC9B,CAAC,CACH,CC9HA,GAAO,GAAQ,GAAS,CAEtB,GAAI,GAEJ,MAAI,GAAM,KAER,EAAM,KAAK,MAAM,KAAK;AAAA;AAAA,eAEX,EAAM,OAAS,YAAc,kBAAoB;AAAA,gBAChD,EAAM,OACX,GAAM,OAAS,YAAc,GAAI,MAAK,EAAM,MAAQ,GAAI,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,IAC/E,GAAI,MAAK,EAAM,MAAQ,GAAI,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE;AAAA,mBAClD,GAAK,CAEd,EAAM,SAAW,GAAI,MAAK,EAAE,OAAO,KAAK,EAAE,QAAQ,EAAI,IAEtD,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CACH,CAEF,KAIJ,EAAM,EAAM,OAAS,GAAI,MAAK,EAAM,MAAQ,GAAI,EAAE,eAAe,EAAM,OAAQ,EAAM,OAAO,EAGjF,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,eAGhB,GAAG,EAAM,SAAW;AAAA,QAC3B,GAGR,ECpCA,GAAO,GAAQ,GAAS,CAEtB,GAAI,GAAM,EAAM,MAEhB,MAAK,IAEH,GAAM,EAAM,WAAa,QAAU,KAAK,MAAM,OAAS,EAAM,UAEzD,GAEF,KAAK,MAAM,IAAI,CACb,OAAQ,OACR,IAAK,GAAG,EAAM,SAAS,MAAM,QAAQ,4BACnC,KAAK,MAAM,YAAY,CACrB,OAAQ,EAAM,SAAS,MAAM,QAAQ,OAAO,IAC5C,MAAO,EAAM,SAAS,MAAM,IAC5B,MAAO,EAAM,SAAS,MAAM,MAC5B,GAAI,EAAM,SAAS,EACrB,CAAC,EACH,KAAM,KAAK,UAAU,CACnB,CAAC,EAAM,OAAQ,CACjB,CAAC,CACH,CAAC,GAKQ,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,eAGhB,GAAG,EAAM,SAAW;AAAA,QAC3B,EAAM,SAAS,IAAM,EAAM,QAGnC,EClCA,GAAO,IAAQ,GAAS,CAEtB,GAAM,GAAO,EAAM,MAAM,IAAI,GAAO,KAAK,MAAM;AAAA;AAAA,QAExC,EAAM,MAAS,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,sBAGlB,EAAI,QAAQ,OAAQ,EAAE,EAAE,QAAQ,eAAgB,EAAE;AAAA,sBAClD;AAAA,oBACF,GAAK,EAAe,CAAC;AAAA;AAAA;AAAA,iBAGxB,KAAO,EAAI,QAAQ,OAAQ,EAAE,EAAE,QAAQ,eAAgB,EAAE,GAAG,EAErE,EAAY,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMjB,KAIjB,GAFA,EAAM,MAAQ,EAAK,KAAK,CAAS,EAE7B,CAAC,EAAK,OAAQ,OAElB,GAAM,GAAY,KAAK,MAAM,KAAK,YAAY,IAE9C,MAAO,GAEP,iBAAsB,EAAG,CAEvB,EAAM,SAAS,MAAM,UAAU,IAAI,UAAU,EAE7C,GAAM,GAAS,GAAI,YAEb,EAAO,EAAE,OAAO,MAAM,GAE5B,AAAI,CAAC,GAEL,GAAO,OAAS,KAAM,IAAgB,CAEpC,GAAM,GAAW,KAAM,MAAK,MAAM,IAAI,CACpC,OAAQ,OACR,cAAe,CACb,eAAgB,0BAClB,EACA,IAAK,GAAG,EAAM,SAAS,MAAM,QAAQ,gCAAgC,KAAK,MAAM,YAAY,CAC1F,UAAW,EAAK,KAChB,cAAe,KACjB,CAAC,IACD,KAAM,EAAa,OAAO,MAC5B,CAAC,EAEK,EAAa,EAAS,WACtB,EAAY,EAAS,UAAU,QAAQ,OAAQ,EAAE,EAAE,QAAQ,eAAgB,EAAE,EAEnF,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,kBACnD,KAAK,MAAM,YAAY,CACrB,SAAU,kBACV,OAAQ,EAAM,SAAS,MAAM,QAAQ,OAAO,IAC5C,MAAO,EAAM,SAAS,MAAM,IAC5B,MAAO,EAAM,SAAS,MACtB,IAAK,EAAM,SAAS,MAAM,IAC1B,GAAI,EAAM,SAAS,GACnB,OAAQ,SACR,MAAO,EAAM,MACb,MAAO,CACT,CAAC,CAAC,EAEJ,GAAM,GAAS,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,wBAIb;AAAA,wBACA;AAAA,sBACF,GAAK,EAAe,CAAC;AAAA;AAAA;AAAA,mBAGxB,KAAc,IAE3B,EAAU,aAAa,EAAQ,CAAS,EAExC,EAAM,SAAS,MAAM,UAAU,OAAO,UAAU,CAClD,EAEA,EAAO,cAAc,CAAI,EAEzB,EAAE,OAAO,MAAQ,GACnB,CAED,iBAA8B,EAAG,CAEhC,GAAI,CAAC,QAAQ,uBAAuB,EAAG,OAEvC,GAAM,GAAM,EAAE,OAEZ,KAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,gCAAgC,KAAK,MAAM,YAAY,CACpG,QAAS,GACT,UAAW,EAAI,QAAQ,IACzB,CAAC,GAAG,EAEJ,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,kBACnD,KAAK,MAAM,YAAY,CACrB,SAAU,kBACV,OAAQ,EAAM,SAAS,MAAM,QAAQ,OAAO,IAC5C,MAAO,EAAM,SAAS,MAAM,IAC5B,MAAO,EAAM,SAAS,MACtB,IAAK,EAAM,SAAS,MAAM,IAC1B,GAAI,EAAM,SAAS,GACnB,OAAQ,SACR,MAAO,EAAM,MACb,MAAO,EAAI,QAAQ,IACrB,CAAC,CAAC,EAEJ,EAAI,WAAW,OAAO,CACxB,CACF,ECrHA,GAAO,IAAQ,GAAS,CAStB,GAPA,EAAM,MAAQ,MAAO,GAAM,OAAU,UAAY,KAAK,MAAM,EAAM,KAAK,GAClE,EAAM,MAGX,EAAM,QAAW,EAAM,SAAW,EAAM,MAGpC,CAAC,EAAM,OAAS,CAAC,EAAM,KAAM,OAGjC,EAAM,MAAQ,EAAM,OAGf,MAAO,GAAM,OAAU,UAAY,KAAK,MACtC,MAAM,OAAO,OAAO,CAAC,EAAG,EAAM,UAAU,OAAS,CAAC,EAAG,EAAM,KAAK,CAAC,GAGnE,EAAM,SAAS,MAGpB,EAAM,KAAO,GAGb,GAAM,GAAS,KAAK,GAAG,SAAS,OAAO,CACrC,MAAO,EAAM,OAAS,WACtB,QAAS,GAAG,EAAM,eAClB,QAAS,CAAC,CAAC,EAAM,QACjB,SAAU,CAAC,EAAM,MACjB,SAAU,AAAC,GAAY,CAGrB,AAAI,EACF,EAAM,KAAK,EAKX,GAAM,QAAU,GAChB,EAAM,GAAK,EAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,EAEnE,CACF,CAAC,EAGD,EAAM,SAAW,EAAM,KAAK,EAG5B,GAAM,GAAU,CACd,QACA,MAAO,EAAM,SAAS,MACtB,KAAM,EAAM,MAAQ,EAAM,SAAS,MAAM,KACzC,KAAM,EAAM,KACZ,QAAS,EAAM,SAAS,MAAM,OAChC,EAGM,EAAO,MAAO,GAAM,MAAS,UAAY,OAAO,KAAK,EAAM,IAAI,EAClE,IAAI,GAAO,KAAK,GAAG,SAAS,QAAQ,IAAQ,KAAK,GAAG,SAAS,QAAQ,GAAK,EAAS,EAAI,CAAC,EACxF,OAAO,GAAQ,CAAC,CAAC,CAAI,EAGxB,GAAI,EAAM,MAAM,SAAU,CAExB,GAAI,GAAY,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,kBAGlB,GAAG,GAAO,EAAG,CAAO;AAAA,yBAGlC,GAAI,EAAM,MAAM,cACd,MAAO,GAGT,EAAK,KAAK,CAAS,CACrB,CAGA,EAAM,OAAS,EAAM,MAAM,QAAU,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA;AAAA,gBAG5C,IAAM,CAEd,GAAI,EAAM,QAAS,CACjB,EAAO,EACP,MACF,CAEA,EAAM,KAAK,EAGX,WAAW,EAAQ,GAAG,EAEtB,YAAiB,CAGf,AAAI,CAAC,QAAQ,kBAAkB,GAG/B,GAAM,SAAW,KAGb,EAAM,GACR,GAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,EACpD,MAAO,GAAM,GAIf,EAAQ,MAAM,SAAS,OAAO,EAChC,CAEF,mBAAmB,EAEvB,GAAM,GAAO,EAAM,OAAS,KAAK,MAAM;AAAA,MACnC,KAAK,GAAG,SAAS,WACjB,OAAO,OAAO,CAAE,MAAO,GAAI,OAAQ,EAAG,EAAG,EAAM,KAAK,CACtD,IAEF,MAAI,GAGK,KAAK,GAAG,SAAS,OAAO,CAC7B,QAAS,cACT,OAAQ,KAAK,MAAM;AAAA,UACf;AAAA;AAAA,UAEA,IACJ,QAAS,KAAK,MAAM;AAAA,UAChB,GACN,CAAC,EAKI,KAAK,MAAM,KAAK,gCAAgC,IAAS,GAClE,EAGA,aAAgB,CAEd,KAAK,QAAU,GAEf,GAAM,GAAS,KAAK,SACjB,MAAM,cAAc,YAAY,KAAK,qBAAqB,EAE7D,AAAI,GAAQ,GAAO,QAAU,IAEzB,KAAK,GAGP,MAAK,SAAS,MAAM,QAAQ,IAAI,YAAY,KAAK,CAAC,EAClD,MAAO,MAAK,GAId,KAAK,EAAI,KAAK,SAAS,MAAM,QAAQ,QAAQ,CAC3C,OAAQ,KAAK,QAAU,GACvB,SAAU,KAAK,MACf,MAAO,KAAK,MACZ,eAAgB,KAAK,MAAQ,KAAK,UAAU,OAAO,IACrD,CAAC,EAGD,KAAK,SAAS,OAAO,KAAK,KAAK,CAAC,CAClC,CAGA,YAAc,EAAG,EAAS,CAGxB,GAAM,GAAM,EAAE,OAGd,GAAI,EAAI,UAAU,SAAS,QAAQ,EAAG,CACpC,EAAI,UAAU,OAAO,QAAQ,EAI7B,EAAQ,QAAQ,aAAa,UAAU,EACvC,MACF,CAEA,EAAI,UAAU,IAAI,QAAQ,EAG1B,CAAC,EAAQ,MAAM,SAAW,EAAQ,MAAM,KAAK,EAG7C,EAAQ,MAAM,GACT,EAAQ,MAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAQ,MAAM,CAAC,EAEzE,EAAQ,QAAQ,aAAa,KAAK,CAChC,KAAM,EAAQ,KACd,iBAAkB,EAAQ,iBAC1B,QAAS,EAAQ,QACjB,KAAM,EAAQ,KACd,SAAU,GAAW,CAOnB,GAJA,EAAI,UAAU,OAAO,QAAQ,EAC7B,EAAQ,QAAQ,aAAa,UAAU,EAGnC,EAAS,CAGX,EAAQ,MAAM,SAAW,EAAQ,SACjC,EAAQ,MAAM,SAAS,OAAO,EAC9B,MACF,CAGA,EAAQ,MAAM,GACT,EAAQ,MAAM,SAAS,MAAM,QAAQ,IAAI,SAAS,EAAQ,MAAM,CAAC,CAExE,CACF,CAAC,CACH,CAGA,YAAgB,EAAG,EAAS,CAE1B,GAAM,GAAM,EAAE,OAGd,GAAI,EAAI,UAAU,SAAS,QAAQ,EAAG,CACpC,EAAI,UAAU,OAAO,QAAQ,EAI7B,EAAQ,QAAQ,aAAa,UAAU,EACvC,MACF,CAEA,EAAI,UAAU,IAAI,QAAQ,EAG1B,CAAC,EAAQ,MAAM,SAAW,EAAQ,MAAM,KAAK,EAG7C,EAAQ,MAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAQ,MAAM,CAAC,EAEpE,GAAM,GAAU,EAAQ,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAE1D,EAAQ,QAAQ,aAAa,OAAO,CAClC,QAAS,EAAQ,MAAM,EACvB,UAAW,EAAQ,MAAM,SAAS,MAClC,KAAM,EAAQ,MAAM,MAAQ,EAAQ,MAAM,SAAS,MAAM,KACzD,SAAU,GAAW,CAOnB,GAJA,EAAI,UAAU,OAAO,QAAQ,EAC7B,EAAQ,QAAQ,aAAa,UAAU,EAGnC,EAAS,CAGX,EAAQ,MAAM,SAAW,EAAQ,SACjC,EAAQ,MAAM,SAAS,OAAO,EAC9B,MACF,CAGA,EAAQ,MAAM,SAAS,MAAM,QAAQ,IAAI,SAAS,EAAQ,MAAM,CAAC,CACnE,CACF,CAAC,CACH,CC5QA,GAAO,IAAQ,GAAS,CAEtB,GAAM,GAAS,EAAM,MAAM,IAAI,GAAS,KAAK,MAAM;AAAA;AAAA,iBAEpC;AAAA,kBACC,KAAK,GAAG,MAAM;AAAA,UACrB,EAAM,MAAS,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,wBAGlB,EAAM,QAAQ,OAAQ,EAAE,EAAE,QAAQ,eAAgB,EAAE;AAAA,uBACrD;AAAA,sBACD,GAAK,EAAe,CAAC,MAC/B,EAEJ,EAAY,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKjB,KAIjB,GAFA,EAAM,MAAQ,EAAO,KAAK,CAAS,EAE/B,CAAC,EAAO,OAAQ,OAEpB,GAAM,GAAc,KAAK,MAAM,KAAK;AAAA;AAAA,4BAEV,IAE1B,MAAO,GAEP,iBAAsB,EAAG,CAEvB,EAAM,SAAS,MAAM,UAAU,IAAI,UAAU,EAE7C,GAAM,GAAS,GAAI,YAEb,EAAO,EAAE,OAAO,MAAM,GAE5B,AAAI,CAAC,GAEL,GAAO,OAAS,GAAgB,CAE9B,GAAM,GAAM,GAAI,OAEhB,EAAI,OAAS,SAAY,CAEvB,GACE,GAAS,KAAK,MAAM,KAAK,eACzB,EAAW,KACX,EAAQ,EAAI,MACZ,EAAS,EAAI,OAGf,AAAI,EAAQ,GAAU,EAAQ,EAC5B,IAAU,EAAW,EACrB,EAAQ,GAEC,EAAS,GAClB,IAAS,EAAW,EACpB,EAAS,GAGX,EAAO,MAAQ,EACf,EAAO,OAAS,EAEhB,EAAO,WAAW,IAAI,EAAE,UAAU,EAAK,EAAG,EAAG,EAAO,CAAM,EAE1D,GAAM,IAAU,EAAO,UAAU,aAAc,EAAG,EAE5C,EAAW,KAAM,MAAK,MAAM,IAAI,CACpC,OAAQ,OACR,cAAe,CACb,eAAgB,0BAClB,EACA,IAAK,GAAG,EAAM,SAAS,MAAM,QAAQ,gCAAgC,KAAK,MAAM,YAAY,CAC1F,UAAW,EAAK,KAAK,QAAQ,OAAQ,EAAE,EAAE,QAAQ,eAAgB,EAAE,EACnE,cAAe,OACjB,CAAC,IACD,KAAM,KAAK,MAAM,cAAc,EAAO,CACxC,CAAC,EAED,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,kBACnD,KAAK,MAAM,YAAY,CACrB,SAAU,kBACV,OAAQ,EAAM,SAAS,MAAM,QAAQ,OAAO,IAC5C,MAAO,EAAM,SAAS,MAAM,IAC5B,MAAO,EAAM,SAAS,MACtB,IAAK,EAAM,SAAS,MAAM,IAC1B,GAAI,EAAM,SAAS,GACnB,OAAQ,SACR,MAAO,EAAM,MACb,MAAQ,EAAS,UACnB,CAAC,CAAC,EAEJ,GAAM,IAAS,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,oBAGnB,EAAS;AAAA,wBACL,KAAK,GAAG,MAAM;AAAA;AAAA;AAAA,4BAGV,EAAS;AAAA,2BACV,EAAS;AAAA,0BACV,IAAK,EAAe,EAAC,KAEvC,EAAY,aAAa,GAAQ,CAAS,EAE1C,EAAM,SAAS,MAAM,UAAU,OAAO,UAAU,CAClD,EAEA,EAAI,IAAM,EAAa,OAAO,MAChC,EAEA,EAAO,cAAc,CAAI,EAEzB,EAAE,OAAO,MAAQ,GACnB,CAEA,iBAA8B,EAAG,CAE/B,GAAI,CAAC,QAAQ,eAAe,EAAG,OAE/B,GAAM,GAAM,EAAE,OAEd,KAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,gCAAgC,KAAK,MAAM,YAAY,CACpG,QAAS,GACT,UAAW,EAAI,QAAQ,IACzB,CAAC,GAAG,EAEJ,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,kBACnD,KAAK,MAAM,YAAY,CACrB,SAAU,kBACV,OAAQ,EAAM,SAAS,MAAM,QAAQ,OAAO,IAC5C,MAAO,EAAM,SAAS,MAAM,IAC5B,MAAO,EAAM,SAAS,MACtB,IAAK,EAAM,SAAS,MAAM,IAC1B,GAAI,EAAM,SAAS,GACnB,OAAQ,SACR,MAAO,EAAM,MACb,MAAO,EAAI,QAAQ,GACrB,CAAC,CAAC,EAEJ,EAAI,WAAW,OAAO,CACxB,CACF,ECjJA,GAAM,IAAc,CAClB,gBACA,iBACF,EAEO,EAAQ,GAAS,CAEtB,EAAM,MAAQ,MAAO,GAAM,OAAU,UAChC,KAAK,MAAM,EAAM,KAAK,GACpB,EAAM,MAGb,EAAM,MAAQ,EAAM,OAGf,MAAO,GAAM,OAAU,UAAY,KAAK,MAAM,MAAM,EAAM,KAAK,GAG/D,EAAM,SAAS,MAEpB,GAAM,GAAS,KAAK,GAAG,SAAS,OAAO,CACrC,MAAO,EAAM,OAAS,UACtB,QAAS,CAAC,CAAC,EAAM,QACjB,SAAU,AAAC,GAAY,CAGrB,AAAI,EACF,EAAM,KAAK,EAKX,GAAM,QAAU,GAChB,EAAM,GAAK,EAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,EAEnE,CACF,CAAC,EAKD,GAHA,EAAM,KAAO,GAGT,EAAM,SAAW,EAAM,KAAK,EAAG,MAAO,QAE1C,GAAM,GAAO,EAAM,OAAS,KAAK,MAAM;AAAA,MACnC,KAAK,GAAG,SAAS,WACjB,OAAO,OAAO,CAAE,MAAO,GAAI,OAAQ,EAAG,EAAG,EAAM,KAAK,CACtD,IAEF,MAAO,MAAK,MAAM,KAAK,gCAAgC,IAAS,GAClE,EAEA,aAAgB,CAId,GAFA,KAAK,QAAU,GAEX,KAAK,EAAG,CAGV,KAAK,SAAS,MAAM,QAAQ,IAAI,YAAY,KAAK,CAAC,EAGlD,KAAK,SAAS,MAAM,QAAQ,IAAI,SAAS,KAAK,CAAC,EAC/C,MACF,CAEA,GAAI,KAAK,MAAO,CAEd,KAAK,EAAI,KAAK,SAAS,MAAM,QAAQ,QAAQ,CAC3C,OAAQ,KAAK,OACb,SAAU,KAAK,MACf,MAAO,KAAK,MACZ,eAAgB,MAClB,CAAC,EAED,KAAK,SAAS,OAAO,KAAK,KAAK,CAAC,EAChC,MACF,CAEA,GAAM,GAAM,KAAK,SAAS,MAAM,KAAK,GAAU,EAAO,OAAS,KAAK,EAEpE,YAAK,OAAO,OAAS,GAAG,KAAK,UAAU,EAAI,MACzC,QAAQ,EAAI,MAAQ,SACpB,WAAW,EAEb,KAAK,SAAS,MAAM,UAAU,IAAI,UAAU,EAE5C,GAAY,KAAK,MAAM,IAAI,EAEpB,EACT,CAEA,YAAwB,EAAO,CAG7B,GAAM,GAAS,OAAO,OAAO,CAC3B,QAAS,UACT,QAAS,EACX,EAAG,EAAM,MAAM,EAEf,KAAK,MACF,IAAI,8CACC,EAAO,WAAW,EAAO,OAAO,MAAM,EAAO,OAAO,MACpD,KAAK,MAAM,YAAY,CACzB,iBAAkB,EAAO,QACzB,SAAU,GACV,aAAc,EAAO,YACvB,CAAC,GAAG,EACL,KAAK,KAAM,IAAY,CAEtB,AAAI,CAAC,EAAM,SAAS,QAEhB,CAAC,EAAS,UAGd,GAAM,SAAW,EAAS,SAAS,GAAG,SAItC,EAAM,SAAS,OAAO,EACxB,CAAC,CAEL,CAEA,YAAsB,EAAO,CAG3B,GAAM,GAAS,OAAO,OAAO,CAC3B,cAAe,OACf,QAAS,GACT,iBAAkB,GAClB,cAAe,MACf,YAAa,UACf,EAAG,EAAM,MAAM,EAEf,EAAO,iBAAmB,EAAO,QAAU,GAC3C,MAAO,GAAO,QAEd,EAAO,OAAS,GAAG,EAAO,OAAO,MAAM,EAAO,OAAO,KACrD,MAAO,GAAO,OAEd,KAAK,MACF,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,sBAC/B,mBAAmB,kDACnB,KAAK,MAAM,YAAY,CAAM,UAAU,GAAG,EAC/C,KAAK,GAAY,CAEhB,GAAI,CAAC,EAAM,SAAS,OAAQ,OAE5B,GAAI,CAAC,EAAS,SACZ,eAAQ,IAAI,CAAQ,EACb,MAAM,2BAA2B,EAG1C,GAAM,GAAe,KAAK,MAAM,KAAK,cAAc,EAAS,SAAS,GAAG,SAAS,GAAG,KAAK,EAEzF,EAAa,SAAS,QAAQ,GAAK,EAAE,QAAQ,CAAC,EAE9C,EAAa,SAAS,KAAK,EAAa,SAAS,EAAE,EAGnD,EAAM,SAAW,CACf,KAAM,UACN,YAAa,CAAC,EAAa,QAAQ,CACrC,EAIA,EAAM,SAAS,OAAO,CACxB,CAAC,CAEL,CC1KA,GAAO,IAAQ,GAAS,CAEtB,AAAI,EAAM,OAER,KAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,kBAAkB,EAAM,OAAO,EAC3E,KAAK,GAAY,CAChB,KAAK,MAAM,OACT,EAAM,KAAK,cAAc,MAAM,EAC/B,KAAK,MAAM,kBAAkB,KAAK,UAAU,EAAS,EAAM,OAAO,OAAQ,KAAM,CAAC,GAAG,CACxF,CAAC,EAIL,GAAI,GAAM,KAAK,MAAM;AAAA,iBACN,KAAK,UAAU,EAAM,MAAO,KAAM,CAAC,IAElD,MAAI,GAAM,MAER,GAAM,KAAK,MAAM;AAAA;AAAA;AAAA,gBAGL,GAAK,CACb,EAAE,OAAO,MAAM,OAAS,EAAE,OAAO,aAAe,IAClD;AAAA,mBACa,GAAK,CAChB,EAAE,OAAO,MAAM,OAAS,MAC1B;AAAA,gBACU,GAAK,CAEb,EAAM,KAAQ,KAAM,CAClB,GAAI,CACF,MAAO,MAAK,MAAM,EAAE,OAAO,KAAK,CAClC,MAAE,CACA,MAAO,EACT,CACF,GAAG,EAEH,EAAE,OAAO,MAAM,OAAS,EAAM,KAAO,OAAS,eAChD;AAAA,gBACU,GAAK,CACb,EAAM,SAAW,MAAO,GAAM,MAAS,SAAW,EAAM,MAAQ,EAAM,KACtE,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CAAC,CACN;AAAA,kBACY,GAAK,WAAW,IAAM,CAChC,EAAE,OAAO,MAAM,OAAS,OACxB,EAAE,OAAO,MAAM,OAAS,EAAE,OAAO,aAAe,IAClD,EAAG,GAAG,KAAK,KAAK,UAAU,EAAM,MAAO,KAAM,CAAC,KAGrC,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,eAGhB,GAAG,EAAM,SAAW,SAAS,GAG5C,EC1DA,GAAO,IAAQ,GAAS,CAGtB,EAAM,QAAU,EAAM,SAAS,MAAM,QAGrC,EAAM,MAAQ,EAAM,QAAQ,OAAO,EAAM,OAGzC,EAAM,MAAQ,EAAM,OAAS,CAAC,EAI9B,EAAM,MAAM,QAAU,OAAO,OAAO,EAAM,MAAM,MAAM,QAAS,EAAM,MAAM,SAAW,CAAC,CAAC,EAGxF,EAAM,KAAO,SAAY,CAGvB,GAAI,EAAM,EAAG,CAGX,EAAM,QAAQ,IAAI,SAAS,EAAM,CAAC,EAGlC,EAAM,MAAM,OAAO,IAAI,EAAM,CAAC,EAC9B,MACF,CAGA,GAAM,GAAc,KAAK,MAAM,YAAY,KAAK,MAAM,YAAY,CAAK,CAAC,EAGxE,EAAM,cAAgB,KAAM,MAAK,MAAM,IAAI,GAAG,EAAM,MAAQ,EAAM,QAAQ,kBAAkB,GAAa,EAGzG,EAAM,EAAI,GAAI,IAAG,MAAM,WAAW,CAChC,OAAQ,EAAM,MAAM,EAAE,UAAU,EAChC,aAAc,IACd,OAAQ,EAAM,OAGd,MAAO,KAAK,MAAM,MAAM,CAAK,CAC/B,CAAC,EAGD,EAAM,MAAM,OAAO,IAAI,EAAM,CAAC,EAG9B,EAAM,QAAQ,IAAI,SAAS,EAAM,CAAC,EAGlC,EAAM,SAAS,gBAAgB,KAAK,IAAM,CACxC,EAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,EACrC,EAAM,MAAM,OAAO,OAAO,EAAM,CAAC,CACnC,CAAC,CACH,EAGA,EAAM,KAAO,SAAY,CAEvB,EAAM,QAAU,GAGhB,EAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,EAGrC,EAAM,MAAM,OAAO,OAAO,EAAM,CAAC,CACnC,EAGA,GAAM,GAAS,KAAK,GAAG,SAAS,OAAO,CACrC,MAAO,EAAM,OAAS,YACtB,QAAS,GAAG,EAAM,eAClB,QAAS,CAAC,CAAC,EAAM,QACjB,SAAU,AAAC,GAAY,EAAU,EAAM,KAAK,EAAI,EAAM,KAAK,CAC7D,CAAC,EAGD,EAAM,SAAW,EAAM,KAAK,EAG5B,EAAM,KAAO,KAAK,GAAG,OAAO,OAAO,MAAM,CAAK,EAG9C,GAAM,GAAO,KAAK,MAAM,KAAK,YAAY,IAAS,EAAM,OAGxD,YAAmB,CACjB,GAAI,EAAC,EAAM,MAAM,OAGjB,IAAI,EAAM,MAAM,aAAa,IAAM,KAAM,MAAO,GAAK,cAAc,OAAO,EAAE,SAAW,GACvF,EAAK,cAAc,OAAO,EAAE,SAAW,GACzC,CACA,SAAQ,EAGR,EAAM,QAAQ,IAAI,iBAAiB,EAAE,iBAAiB,YAAa,CAAO,EAG1E,EAAM,SAAS,gBAAgB,KAAK,IAAI,CACtC,QAAQ,IAAI,iBAAiB,EAAE,oBAAoB,YAAa,CAAO,CACzE,CAAC,EAGM,CACT,EC3GA,GAAO,GAAQ,GAAS,CAEtB,GAAI,GAAM,CAAC,MAAM,EAAM,KAAK,GAAK,EAAM,OAAS,UAC9C,SAAS,EAAM,KAAK,EAAE,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EAC1E,WAAW,EAAM,KAAK,EAAE,eAAe,QAAS,CAAE,sBAAuB,CAAE,CAAC,EAE9E,MAAI,GAAM,MAER,CAAI,EAAM,KAAK,MAEb,EAAM,KAAK,GAAG,SAAS,OAAO,CAC5B,IAAK,EAAM,KAAK,MAAM,IACtB,IAAK,EAAM,KAAK,MAAM,IACtB,IAAK,EAAM,MACX,SAAU,GAAK,CACb,EAAI,MAAQ,WAAW,EAAE,OAAO,KAAK,EACrC,EAAM,SAAW,EAAI,MACrB,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CACH,CACF,CACF,CAAC,EAID,EAAM,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,iBAGX,EAAM,OAAS;AAAA,kBACd,GAAK,CACb,EAAM,SAAW,EAAE,OAAO,MAC1B,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CACH,CACF,MAIO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,eAGhB,GAAG,EAAM,SAAW;AAAA,QAC3B,EAAM,SAAS,IAAM,EAAM,QAGnC,ECjDA,GAAO,IAAQ,GAAS,CAEtB,EAAM,KAAO,EAAM,MAAQ,EAAM,SAAS,MAAM,KAGhD,EAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,EAEpD,EAAM,EAAI,EAAM,SAAS,MAAM,QAAQ,QAAQ,CAC7C,OAAQ,IACR,SAAU,CACR,KAAM,QACN,YAAa,EAAM,KACrB,EACA,eAAgB,EAAM,KACtB,MAAO,EAAM,OAAS,KAAK,MAAM,MAAM,EAAM,KAAK,GAAK,EAAM,OAAS,EAAM,SAAS,QACvF,CAAC,EAMD,EAAM,SAAS,OAAO,KAAK,EAAM,CAAC,EAElC,GAAM,GAAS,KAAK,GAAG,SAAS,OAAO,CACrC,MAAO,EAAM,OAAS,MACtB,QAAS,GACT,SAAU,AAAC,GAAY,CACrB,EAAM,QAAU,EAChB,EACE,EAAM,SAAS,MAAM,QAAQ,IAAI,SAAS,EAAM,CAAC,EACjD,EAAM,SAAS,MAAM,QAAQ,IAAI,YAAY,EAAM,CAAC,CACxD,CACF,CAAC,EAID,MAFa,MAAK,MAAM,KAAK,OAAO,GAGtC,ECrCA,GAAO,IAAQ,GAAS,CAEtB,GAAI,CAAC,EAAM,OAAO,SAAU,OAE5B,GAAM,GAAO,GAAG,EAAM,SAAS,MAAM,QAAQ,aAC1C,EAAM,OAAO,YAAY,KAAK,MAAM,YAAY,OAAO,OAAO,CAC7D,GAAI,EAAM,SAAS,GACnB,MAAO,EAAM,SAAS,MAAM,IAC5B,OAAQ,EAAM,SAAS,MAAM,QAAQ,OAAO,GAC9C,EAAG,EAAM,QAAU,CAAC,CAAC,CAAC,IAWxB,MATa,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOhB,KAAQ,EAAM,OAAO,OAAS,UAG7C,ECrBA,GAAO,IAAQ,GAAS,CAEtB,GAAM,GAAM,EAAM,SAAS,MAAM,KAAK,GAAS,EAAM,OAAS,KAAK,EAEnE,GAAI,CAAC,GAAO,CAAC,EAAI,MAAO,OAExB,GAAM,GAAS,GAAG,KAAK,SACrB,EAAI,MACJ,QAAQ,EAAI,MAAQ,EAAM,SAAS,MAAM,QAAQ,OACjD,WAAW,EAEP,EAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,aAGlB,oCAAoC,EAAO,MAAM,EAAO,gBAEnE,YAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,sBAAsB,mBACnE,qEACa,EAAO,MAAM,EAAO,4BACP,GAAG,EAC5B,KAAK,GAAY,CAEhB,GAAI,EAAS,SAAW,KAAM,OAE9B,GAAM,GAAM,GAAG,EAAM,SAAS,MAAM,QAAQ,sBAAsB,mBAChE,4DACa,EAAO,MAAM,EAAO,yCACM,IAEzC,EAAK,OAAO,KAAK,MAAM,KAAK,gBAAgB,IAAM,CAEpD,CAAC,EAEI,CACT,EClCA,GAAO,IAAQ,GAAS,CAEtB,GAAM,GAAU,SAAS,cAAc,YAAY,EAAM,SAAS,EAGlE,EAAM,UAAY,4BAA4B,EAAM,SAAS,MAAM,cAGnE,EAAQ,cAAc,GAAI,aAAY,SAAU,CAC9C,OAAQ,CACV,CAAC,CAAC,EAGF,EAAM,SAAW,EAAM,KAAK,EAE5B,GAAM,GAAS,KAAK,GAAG,SAAS,OAAO,CACrC,MAAO,EAAM,MACb,QAAS,CAAC,CAAC,EAAM,QACjB,SAAU,AAAC,GAAY,CAErB,EAAM,QAAU,EAGhB,EAAM,QACJ,EAAM,KAAK,EACX,EAAM,OAAO,CAEjB,CACF,CAAC,EAED,MAAO,MAAK,MAAM,KAAK,OAAO,GAChC,EC/BA,GAAO,IAAQ,GAAS,CAEtB,GAAI,GAAM,EAAM,EAAM,MAEtB,GAAI,EAAM,MAAO,CAEf,GAAM,GAAS,KAAK,MAAM,YAAY,CAAK,EAErC,EAAc,KAAK,MAAM,YAAY,CAAM,EAEjD,KAAK,MACF,IAAI,GAAG,EAAM,MAAQ,EAAM,SAAS,MAAM,QAAQ,kBAAkB,GAAa,EACjF,KAAK,GAAY,CAChB,EAAK,UAAY,OAAO,OAAO,CAAQ,EAAE,EAC3C,CAAC,CAEL,CAEA,MAAI,GAAM,MAER,CAAI,EAAM,KAAK,QAEb,EAAM,GAAQ,CAAK,EAGnB,EAAM,KAAK,MAAM;AAAA;AAAA;AAAA,iBAGN,EAAM,OAAS;AAAA,kBACd,GAAK,CACb,EAAM,SAAW,EAAE,OAAO,MAC1B,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CACH,CACF,MAIN,EAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,eAGV,GAAG,EAAM,SAAW;AAAA,QAC3B,EAAM,SAAS,IAAM,EAAM,SAE1B,CACT,EAEA,YAAiB,EAAM,CAErB,GAAM,GAAM,EAAM,KAAK,QAAQ,KAC7B,GAAU,MAAO,IAAW,UAAY,OAAO,OAAO,CAAM,EAAE,KAAO,EAAM,OAAS,IAAW,EAAM,KACvG,GAAK,EAAM,MAEX,EAAM,MAAQ,GACT,MAAO,IAAQ,UACf,OAAO,KAAK,CAAG,EAAE,IAAM,GAAO,EAAM,OAAS,IAElD,GAAM,GAAU,EAAM,KAAK,QAAQ,IAAI,GAAW,EAChD,MAAO,MAAO,IAAW,UAAY,GAAU,OAAO,KAAK,CAAM,EAAE,GACnE,OAAQ,MAAO,IAAW,UAAY,GAAU,OAAO,OAAO,CAAM,EAAE,EACxE,EAAE,EAeF,MAbiB,MAAK,GAAG,SAAS,SAAS,CACzC,KAAM,EAAM,MACZ,QAAS,EACT,SAAU,CAAC,EAAG,IAAW,CACvB,EAAM,SAAW,EAAO,OACxB,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CACH,CACF,CACF,CAAC,CAGH,CC9EA,GAAO,GAAQ,GAAS,CAEtB,AAAI,EAAM,OAER,KAAK,MAAM,IAAI,GAAG,EAAM,SAAS,MAAM,QAAQ,kBAAkB,EAAM,OAAO,EAC3E,KAAK,GAAY,CAChB,EAAM,KAAK,cAAc,MAAM,EAAE,UAAY,EAAS,EAAM,OAAO,MACrE,CAAC,EAIL,GAAI,GAAM,EAAM,OAAS,OAAS,EAAM,MAAQ,GAEhD,AAAI,EAAM,MAER,GAAM,KAAK,MAAM;AAAA;AAAA;AAAA,gBAGL,GAAK,CACb,EAAE,OAAO,MAAM,OAAS,EAAE,OAAO,aAAe,IAClD;AAAA,mBACa,GAAK,CAChB,EAAE,OAAO,MAAM,OAAS,MAC1B;AAAA,gBACU,GAAK,CACb,EAAM,SAAW,EAAE,OAAO,MAC1B,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CAAC,CACN;AAAA,kBACY,GAAK,WAAW,IAAM,CAChC,EAAE,OAAO,MAAM,OAAS,OACxB,EAAE,OAAO,MAAM,OAAS,EAAE,OAAO,aAAe,IAClD,EAAG,GAAG;AAAA,QACJ,EAAM,OAAS,MAGrB,GAAM,GAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,aAGlB,GAAG,EAAM,SAAW,SAAS,IAExC,MAAI,CAAC,EAAM,MAAQ,EAAM,OAAS,QAChC,GAAK,UAAY,EAAM,OAAS,IAG3B,CACT,EChDA,GAAO,IAAQ,GAAS,CAEtB,GAAI,GAEA,EAAY,EAAM,OAAS,EAAM,MAAM,SAAS,EAAE,QAAQ,IAAI,GAAG,EAErE,SAAY,GAAa,EAAU,OAAS,GAAK,GAAG,QAAkB,EAEtE,AAAI,EAAM,KAER,EAAM,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGV;AAAA,mBACG,GAAK,CAEd,EAAM,SAAW,WAAW,EAAE,OAAO,MAAM,QAAQ,IAAI,GAAG,CAAC,EAE3D,EAAM,SAAS,MAAM,cACnB,GAAI,aAAY,YAAa,CAC3B,OAAQ,CACV,CAAC,CACH,CAEF,KAIJ,EAAM,EAGK,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,eAGhB,GAAG,EAAM,SAAW;AAAA,QAC3B,GAGR,ECFA,GAAO,IAAQ,CACb,OACA,UACA,WACA,OACA,SAAU,EACV,WACA,aACA,YACA,KAAM,EACN,UACA,QAAS,EACT,aAAc,EACd,eAAgB,EAChB,QACA,aACA,UACA,OACA,UACA,cACA,OACA,QACA,WACA,OACF,EAEA,YAAa,EAAO,CAOlB,MALa,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,QAGvB,EAAM,SAAS,MAAM,MAG7B,CC9DA,GAAO,IAAQ,CACb,OACA,WACA,QACA,UACF,ECbA,GAAO,IAAQ,KAAO,IAAU,CAU9B,GAPI,MAAO,GAAM,QAAW,UAG1B,GAAM,OAAS,SAAS,eAAe,EAAM,MAAM,GAIjD,CAAC,EAAM,OAAQ,CAEjB,QAAQ,KAAK,+CAA+C,EAC5D,QAAQ,IAAI,CAAK,EACjB,MACF,CA+BA,GA5BA,EAAM,OAAS,SAAY,CAGzB,GAAI,CAAC,EAAM,MAAO,OAGlB,GAAM,GAAS,KAAK,MAAM,YAAY,CAAK,EAGrC,EAAc,KAAK,MAAM,YAAY,CAAM,EAG3C,EAAW,KAAM,MAAK,MACzB,IAAI,GAAG,EAAM,MAAQ,EAAM,SAAS,MAAM,QAAQ,kBAAkB,GAAa,EAEpF,GAAI,cAAoB,QAGxB,IAAI,MAAO,GAAM,kBAAqB,WAAY,CAChD,EAAM,iBAAiB,CAAQ,EAC/B,MACF,CAEA,MAAO,GAAM,SAAY,YAAc,EAAM,QAAQ,CAAQ,EAC/D,EAII,EAAM,SAAW,EAAM,iBAAkB,aAAa,CAGxD,GAAI,GAAS,KAAK,MAAM,KAAK,oCAEzB,EAAU,MAAO,GAAM,SAAY,YAClC,EAAM,QAAQ,GACd,OAAO,KAAK,EAAM,OAAO,EAAE,IAAI,GAAO,KAAK,GAAG,SAAS,WAAW,GAAK,CAAK,CAAC,EAIlF,EAAM,MAAQ,EAAM,OAAO,YAAY,KAAK,MAAM,KAAK;AAAA;AAAA,iCAE1B;AAAA,YACrB,GAAQ,EAGhB,EAAM,OAAS,CACjB,CAGA,MAAI,GAAM,OAAO,KAAM,IAAM,CAAK,EAG9B,MAAO,GAAM,QAAY,KAC3B,SAAQ,KAAK,6DAA6D,EAG1E,EAAM,MAAQ,CAAE,QAAS,EAAM,OAAQ,GAIrC,EAAM,OAAO,KAAM,IAAM,CAAK,EAGlC,EAAM,WAAa,EAAM,OAAS,EAAM,MAAM,QAAQ,IAAI,iBAAiB,EACxE,iBAAiB,YAAa,IAAM,CAGnC,AAAI,EAAM,OAAS,CAAC,EAAM,MAAM,SAG5B,EAAM,KAAO,CAAC,EAAM,IAAI,UAAU,SAAS,QAAQ,GAGvD,MAAO,GAAM,WAAc,YACtB,EAAM,UAAU,GAChB,EAAM,OAAO,CACpB,CAAC,EAEI,CACT,EAEA,kBAAqB,EAAO,CAG1B,GAAM,GAAS,EAAM,OAAO,YAAY,KAAK,MAAM,KAAK,cAAc,EAGtE,EAAM,QAAU,KAAM,MAAK,GAAG,MAAM,MAAM,EAAQ,KAAK,MAAM,MAAM,CACjE,KAAM,MACN,QAAS,CACP,QAAS,CACP,OAAQ,CACN,QAAS,EACX,EACA,WAAY,CACV,QAAS,EACX,CACF,CACF,CACF,EAAG,EAAM,KAAK,CAAC,EAGf,EAAM,QAAU,AAAC,GAAS,CAExB,AAAI,EAAM,YAAc,CAAC,EAGvB,GAAM,OAAO,MAAM,QAAU,OAG7B,EAAM,KAAO,CAAC,EAAM,MAAQ,EAAM,OAAO,eAAe,YAAY,KAAK,MAAM,KAAK;AAAA,2CAC/C,GAKrC,GAAM,MAAQ,EAAM,KAAK,OAAO,EAChC,MAAO,GAAM,KAGb,EAAM,OAAO,MAAM,QAAU,SAI1B,GACH,GAAO,CACL,SAAU,CACR,CACE,KAAM,CAAC,CACT,CACF,CACF,GAIG,EAAK,UACR,GAAO,CACL,SAAU,CACR,CACE,KAAM,CACR,CACF,CACF,GAGF,EAAM,KAAO,EAGb,EAAM,MAAM,UAAU,QACpB,EAAK,SAAS,QAAQ,CAAC,EAAS,IAC9B,OAAO,OAAO,EAAS,EAAM,MAAM,SAAS,EAAE,CAAC,EAGnD,EAAK,OAAS,EAAK,QAAU,EAAM,MAAM,OAGzC,EAAM,QAAQ,KAAO,EAGrB,EAAM,QAAQ,OAAO,CACvB,CAEF,CAEA,kBAAqB,EAAO,CAG1B,EAAM,MAAM,QAAQ,QAAQ,GAAO,CAGjC,AAAI,MAAO,GAAI,cAAiB,UAAY,KAAK,GAAG,MAAM,UAAU,aAAa,EAAI,eAGnF,GAAI,aAAe,KAAK,GAAG,MAAM,UAAU,aAAa,EAAI,cAAc,CAAK,EAEnF,CAAC,EAGD,EAAM,UAAY,KAAM,MAAK,GAAG,MAC7B,UAAU,EAAM,OAAQ,OAAO,OAAO,CAErC,iBAAkB,UAClB,WAAY,EACd,EAAG,EAAM,KAAK,CAAC,EAGb,EAAM,MAAM,aAAe,IAG7B,GAAM,eAAiB,GAAI,gBAAe,KAAK,MAAM,SAAS,IAAM,CAGlE,AAAI,EAAM,OAAO,aAAe,GAAG,EAAM,UAAU,OAAO,CAC5D,EAAG,GAAG,CAAC,EAEP,EAAM,eAAe,QAAQ,EAAM,MAAM,GAI3C,EAAM,MAAM,YAAc,EAAM,UAAU,GAAG,WAAY,CAAC,EAAG,IAAQ,CAGnE,GAAI,MAAO,GAAM,WAAc,WAAY,CACzC,EAAM,UAAU,EAAG,CAAG,EACtB,MACF,CAEA,GAAM,GAAU,EAAI,QAAQ,EAE5B,AAAI,CAAC,EAAM,OAAS,CAAC,EAAQ,EAAM,MAAM,MAEzC,MAAK,SAAS,IAAI,CAChB,MAAO,EAAM,MACb,GAAI,EAAQ,EAAM,MAAM,IAC1B,CAAC,EAGD,EAAI,SAAS,EACf,CAAC,EAGD,MAAO,GAAM,QAAW,UAAY,OAAO,QAAQ,EAAM,MAAM,EAAE,QAAQ,GAAS,CAGhF,AAAI,MAAO,GAAM,IAAO,YAGxB,EAAM,UAAU,GAAG,EAAM,GAAI,EAAM,EAAE,CACvC,CAAC,EAGD,EAAM,QAAU,AAAC,GAAS,CAExB,AAAI,EAAM,YAAc,CAAC,EAGvB,GAAM,OAAO,MAAM,QAAU,OAG7B,EAAM,KAAO,CAAC,EAAM,MAAQ,EAAM,OAAO,eAAe,YAAY,KAAK,MAAM,KAAK;AAAA,2CAC/C,GAKrC,GAAM,MAAQ,EAAM,KAAK,OAAO,EAChC,MAAO,GAAM,KAGb,EAAM,OAAO,MAAM,QAAU,SAI/B,EAAQ,CAAC,GAAQ,CAAC,GAAO,EAAK,QAAU,GAAS,CAAC,CAAI,EAGtD,EAAM,UAAU,QAAQ,CAAI,EAG5B,EAAM,KAAO,EAEb,MAAO,GAAM,iBAAoB,YAC5B,EAAM,gBAAgB,CAAK,CAClC,CAEF,CC3RA,GAAO,IAAQ,GAAW,CAExB,GAAI,EAAC,EAAQ,KAEb,SAAQ,KAAO,EAAQ,KAAK,YAAY,KAAK,MAAM,KAAK,wBAAwB,EAEhF,EAAQ,MAAQ,EAAQ,KAAK,YAAY,KAAK,MAAM,KAAK,yBAAyB,EAGlF,EAAQ,IAAM,EAAQ,KAAK,aAAa,UAAW,EAAQ,EAAE,EAE7D,EAAQ,OAAS,GAEjB,EAAQ,KAAK,iBAAiB,SAAU,GAAK,EAAQ,OAAO,EAAE,MAAM,CAAC,EAE9D,CACT,EAGA,YAAgB,EAAO,CAErB,GAAM,GAAU,KAEhB,AAAI,EAAM,SAGR,EAAM,SAAS,gBAAgB,KAAK,IAAI,EAAM,OAAO,CAAC,EAE7C,EAAM,OAGf,GAAM,MAAM,cAAc,KAAK,IAAI,CAGjC,EAAM,SAAW,EAAM,KAAK,CAC9B,CAAC,EAGD,EAAM,MAAM,cAAc,KAAK,IAAI,CACjC,EAAM,OAAO,CACf,CAAC,GAGH,EAAM,IAAM,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,oBAGV,EAAM;AAAA;AAAA,iBAET,EAAM,WAAa;AAAA,kBAClB;AAAA,YACN,EAAM,OAAS,EAAM,OAAS,EAAM,KAAO,QAGrD,EAAM,MAAQ,EAAQ,KAAK,OAAO,EAAM,GAAG,EAE3C,EAAM,MAAQ,EAAM,OAAS,EAAM,QAAU,KAAK,MAAM,KAAK;AAAA,kBAC7C,SAAS,EAAM,OAAS,SAExC,EAAM,MAAM,iBAAiB,WAAY,IAAI,CAC3C,EAAM,QAAU,EAAM,OAAO,CAC/B,CAAC,EAED,EAAM,KAAO,EAEb,EAAM,OAAS,EAEf,YAAmB,CAGjB,KAAK,MAAM,OAAO,EAAQ,MAAO,EAAM,KAAK,EAG5C,EAAQ,KAAK,WAAW,QAAQ,GAAO,EAAI,UAAU,OAAO,QAAQ,CAAC,EAGrE,CAAC,EAAM,IAAI,eAAiB,EAAQ,KAAK,OAAO,EAAM,GAAG,EAGzD,EAAM,IAAI,UAAU,IAAI,QAAQ,EAIhC,EAAQ,OAAS,OAAO,aAAa,EAAQ,KAAK,EAElD,EAAQ,MAAQ,OAAO,WAAW,IAAI,CACpC,GAAI,EAAM,gBAAiB,aAAa,CACtC,EAAM,MAAM,cAAc,GAAI,aAAY,UAAU,CAAC,EACrD,MACF,CACA,EAAM,iBAAkB,cACnB,EAAM,OAAO,cAAc,GAAI,aAAY,UAAU,CAAC,CAC7D,EAAG,GAAG,EAEN,EAAQ,SAAW,EAAQ,QAAQ,CAAK,CAC1C,CAEA,YAAsB,CAGpB,GAAI,CAAC,EAAM,IAAI,cAAe,OAG9B,GAAM,GAAU,EAAM,IAAI,oBAAsB,EAAM,IAAI,uBAM1D,GAHA,EAAM,IAAI,OAAO,EAGb,EAAS,MAAO,GAAQ,cAAc,SAAS,EAAE,MAAM,EAE3D,EAAQ,eAAiB,EAAQ,cAAc,CACjD,CACF,CChHA,GAAO,IAAQ,AAAC,GAAW,KAAK,MAAM,KAAK;AAAA;AAAA,cAE7B,EAAO,SAAW;AAAA;AAAA;AAAA,cAGlB,EAAO;AAAA;AAAA;AAAA;AAAA,kBAIH,GAAK,CACb,EAAE,OAAO,QAAQ,SAAS,EAAE,OAAO,EACnC,EAAO,OAAS,EAAO,MAAM,CAAC,CAChC;AAAA;AAAA,MAEF,EAAO,UCdb,GAAO,IAAQ,AAAC,GAAW,KAAK,MAAM;AAAA;AAAA,cAExB,EAAO,SAAW;AAAA;AAAA;AAAA;AAAA,kBAId,CAAC,CAAC,EAAO;AAAA,iBACV,CAAC,CAAC,EAAO;AAAA,iBACT,GAAG,CACZ,EAAO,UAAY,EAAO,SAAS,EAAE,OAAO,QAAS,EAAO,GAAG,CACjE;AAAA;AAAA;AAAA,YAGM,EAAO,QCbnB,GAAO,IAAQ,CACb,UACA,OACF,EAEA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,mBAAoB,oBACtB,EACA,GAAI,CACF,mBAAoB,oBACtB,EACA,GAAI,CACF,mBAAoB,kDACtB,EACA,GAAI,CACF,mBAAoB,oCACtB,EACA,GAAI,CACF,mBAAoB,kEACtB,EACA,GAAI,CACF,mBAAoB,0BACtB,EACA,GAAI,CACF,mBAAoB,0EACtB,CACF,CAAC,EAED,YAAgB,EAAG,CAEjB,GAAK,EAAE,eAAe,EAEtB,GAAM,GAAO,CAAC,EAGd,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,gBAEP,IAAM,KAAK,YAAY,OAAO,KAAK,YAAY,WAAW,CAAC;AAAA,QACnE,KAAK,WAAW,MAAM,EAG5B,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,gBAEP,IAAI,KAAK,YAAY,OAAO;AAAA,QACpC,KAAK,WAAW,QAAQ,EAG9B,KAAK,MAAM,CACT,OAAQ,KAAK,YAAY,SAAS,KAAK,YAAY,SAAS,OAAO,GACnE,QAAS,KAAK,MAAM,KAAK,WAAW,GACtC,CAAC,CACH,CAEA,YAAc,EAAG,CAEf,GAAI,KAAK,YAAY,SAAS,SAAW,EAAG,OAE5C,GAAK,EAAE,eAAe,EAEtB,GAAM,GAAW,KAAK,YAAY,MAAM,UAAU,EAAE,YAAY,EAE1D,EAAO,CAAC,EAEd,EAAS,QAAU,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,cAE5B,IAAI,KAAK,YAAY,OAAO,KAAK,YAAY,WAAW,CAAC;AAAA,QAC/D,KAAK,WAAW,MAAM,EAE5B,CAAC,EAAS,QAAU,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,gBAE3B,GAAG,CACX,KAAK,YAAY,YAAY,gBAAgB,EAC7C,KAAK,YAAY,SAAS,IAAI,EAC9B,KAAK,MAAM,IAAI,CACjB,KAAK,KAAK,WAAW,oBAAoB,EAE7C,EAAK,KAAK,KAAK,MAAM;AAAA;AAAA,gBAEP,IAAI,KAAK,YAAY,OAAO;AAAA,QACpC,KAAK,WAAW,QAAQ,EAE9B,KAAK,MAAM,CACT,OAAQ,KAAK,YAAY,SAAS,KAAK,YAAY,SAAS,OAAS,GACrE,QAAS,KAAK,MAAM,KAAK,WAAW,IACpC,QAAS,EACX,CAAC,CACH,CCvFA,GAAO,IAAQ,AAAC,GAAW,KAAK,MAAM,KAAK;AAAA;AAAA,cAE7B,EAAO,SAAW;AAAA,YACpB,qBAAqB,EAAO,OAAS;AAAA;AAAA;AAAA,gBAGjC,AAAC,GAAM,CAEf,GAAI,GAAE,OAAO,cAAc,UAAU,SAAS,OAAO,EAGrD,IAAI,EAAE,OAAO,cAAc,UAAU,SAAS,UAAU,EACtD,MAAO,GAAE,OAAO,cAAc,UAAU,OAAO,UAAU,EAI3D,AAAI,EAAO,WACT,CAAC,GAAG,EAAE,OAAO,cAAc,cAAc,QAAQ,EAAE,QAAQ,GAAW,CACpE,EAAQ,UAAU,OAAO,UAAU,CACrC,CAAC,EAIH,EAAE,OAAO,cAAc,UAAU,IAAI,UAAU,EACjD;AAAA,QACE,EAAO;AAAA;AAAA,MAET,EAAO,UC3Bb,GAAO,IAAQ,CACb,SACA,WACA,WACA,UACA,QACA,YACA,gBACA,kBACA,YACF,EAEA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,WAAY,QACZ,cAAe,mBACf,aAAc,UACd,eAAgB,YAChB,YAAa,SACb,UAAW,OACX,cAAe,WACf,OAAQ,QACV,EACA,GAAI,CACF,WAAY,QACZ,aAAc,UACd,eAAgB,WAChB,YAAa,QACb,UAAW,QACX,cAAe,WACf,OAAQ,WACV,EACA,GAAI,CACF,WAAY,SACZ,aAAc,qBACd,eAAgB,qBAChB,YAAa,SACb,UAAW,SACX,cAAe,0BACjB,EACA,GAAI,CACF,WAAY,QACZ,aAAc,UACd,eAAgB,iBAChB,YAAa,QACb,UAAW,QACX,cAAe,gBACjB,EACA,GAAI,CACF,WAAY,SACZ,aAAc,qBACd,eAAgB,2BAChB,YAAa,SACb,UAAW,SACX,cAAe,4DACjB,EACA,GAAI,CACF,WAAY,QACZ,aAAc,WACd,eAAgB,YAChB,YAAa,SACb,UAAW,QACX,cAAe,oBACjB,EACA,GAAI,CACF,WAAY,2BACZ,aAAc,2BACd,eAAgB,qBAChB,YAAa,SACb,UAAW,SACX,cAAe,sCACjB,CACF,CAAC,EAED,YAAe,EAAU,EAAM,CAE7B,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,OACR,CAAC,EAED,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,YACxB,CAEA,YAAiB,EAAS,CAExB,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,GAAG,CAEX,KAAK,MAAM,mBAAmB,KAAO,IAAQ,CAE3C,GAAM,GAAW,CACf,MAAO,EAAQ,MACf,IAAK,EACP,EAEM,EAAS,GAAG,KAAK,UACrB,CAAC,WAAW,EAAI,OAAO,SAAS,EAAG,WAAW,EAAI,OAAO,QAAQ,CAAC,EAClE,YAAa,QAAQ,EAAQ,MAAM,MAAM,EAE3C,EAAS,GAAK,KAAM,MAAK,MAAM,IAAI,CACjC,OAAQ,OACR,IAAK,GAAG,EAAS,MAAM,QAAQ,yBAC7B,KAAK,MAAM,YAAY,CACrB,OAAQ,EAAS,MAAM,QAAQ,OAAO,IACtC,MAAO,EAAS,MAAM,IACtB,MAAO,EAAS,MAAM,aAAa,CACrC,CAAC,EACH,KAAM,KAAK,UAAU,CACnB,CAAC,EAAS,MAAM,MAAO,CACrB,KAAM,QACN,YAAa,CACf,CACF,CAAC,CACH,CAAC,EAED,EAAS,MAAM,OAAO,EAEtB,KAAK,SAAS,IAAI,CAAQ,CAC5B,CAAC,CAGH;AAAA,QACE,KAAK,WAAW,eACxB,CAEA,YAAc,EAAU,EAAM,CAE5B,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,YACR,CAAC,EAED,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,WACxB,CAEA,YAAkB,EAAU,EAAM,CAEhC,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,aACN,SAAU,EACZ,CAAC,EAED,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,eACxB,CAEA,YAAiB,EAAU,EAAM,CAE/B,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,SACR,CAAC,EAED,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,cACxB,CAEA,YAAgB,EAAU,EAAM,CAE9B,EAAS,KAAK,OAAS,OAAO,OAAO,CACnC,MAAO,QACP,OAAQ,IACR,QAAS,CACP,OAAQ,UACV,CACF,EAAG,MAAO,GAAS,KAAK,QAAW,UAAY,EAAS,KAAK,QAAU,CAAC,CAAC,EAGzE,GAAM,GAAQ,CACZ,MAAO,GAAK,EACZ,GAAI,GAAK,EAAI,IACb,MAAO,GAAK,EAAI,QAChB,OAAQ,GAAK,KAAK,KAAK,EAAI,KAAK,EAAE,EAClC,IAAK,GAAK,KAAK,KAAK,EAAI,IAAU,KAAK,EAAE,CAC3C,EAEM,EAAgB,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,UAI9B,KAAK,GAAG,SAAS,SAAS,CAC1B,YAAa,EAAS,KAAK,OAAO,MAClC,QAAS,CACP,CACE,MAAO,QACP,OAAQ,OACV,EACA,CACE,MAAO,KACP,OAAQ,IACV,EACA,CACE,MAAO,QACP,OAAQ,OACV,EACA,CACE,MAAO,YACP,OAAQ,QACV,EACA,CACE,MAAO,SACP,OAAQ,KACV,CACF,EACA,SAAU,CAAC,EAAG,IAAU,CACtB,EAAS,KAAK,OAAO,MAAQ,EAAM,MACrC,CACF,CAAC,IAED,EAAc,KAAK,GAAG,SAAS,OAAO,CAC1C,MAAO,SACP,IAAK,EACL,IAAK,IACL,IAAK,EAAS,KAAK,OAAO,OAC1B,SAAU,GAAK,CACb,EAAS,KAAK,OAAO,OAAS,SAAS,EAAE,OAAO,KAAK,CACvD,CACF,CAAC,EAEK,EAAa,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGrB,GAAK,CACb,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,QACN,iBAAkB,AAAC,GAQV,AANiB,GAAI,IAAG,KAAK,QAAQ,SAC1C,GAAG,KAAK,SAAS,CAAW,EAC5B,EAAM,EAAS,KAAK,OAAO,OAAO,EAAS,KAAK,OAAO,MAAM,EAC7D,EACF,EAEuB,UAAU,YAAa,WAAW,CAE7D,CAAC,EAED,EAAK,EAAG,CAAO,CACjB,eAEE,EAAS,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGjB,GAAG,CACX,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,SACN,iBAAkB,GAAG,YAAY,KAAK,qBAAqB,EAAE,EAC7D,QAAS,EAAS,KAAK,OAAO,OAChC,CAAC,EAED,EAAK,EAAG,CAAO,CACjB,kBAaJ,MAXe,MAAK,GAAG,SAAS,OAAO,CACrC,OAAQ,KAAK,MAAM;AAAA;AAAA,8CAGnB,QAAS,KAAK,MAAM;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA,GACN,CAAC,CAGH,CAEA,YAAmB,EAAU,EAAM,CAEjC,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,SACN,iBAAkB,GAAG,YAAY,KAAK,UAAU,EAChD,QAAS,EAAS,KAAK,UAAU,OACnC,CAAC,EAED,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,gBACxB,CAEA,YAAsB,EAAU,EAAM,CAEpC,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,QACN,iBAAkB,GAAe,KAAK,MAAM,KAAK,iBAAiB,EAAa,EAAS,MAAO,CAAM,CACvG,CAAC,EAED,AAAI,MAAQ,GAAQ,KAAK,cAAkB,UAAU,GAAQ,KAAK,aAAe,CAAC,GAElF,GAAM,GAAW,CACf,cAAe,OACf,MAAO,GACP,SAAU,EACV,SAAU,GACV,cAAe,MACf,YAAa,UACf,EAEM,EAAS,OAAO,OAAO,EAAQ,KAAK,aAAc,CAAQ,EAE1D,EAAS,KAAK,GAAG,SAAS,oBAAoB,CAAM,EAE1D,SAAO,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGhB,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,QAAQ,EAEvB,CACT,CAEA,YAAwB,EAAU,EAAM,CAEtC,GAAM,GAAU,OAAO,OAAO,CAAC,EAAG,EAAU,CAC1C,KAAM,QACN,iBAAkB,GAAe,KAAK,MAAM,uBAAuB,EAAa,EAAS,MAAO,CAAM,CACxG,CAAC,EAED,AAAI,MAAQ,GAAQ,KAAK,gBAAoB,UAAU,GAAQ,KAAK,eAAiB,CAAC,GAEtF,GAAM,GAAW,CACf,QAAS,UACT,QAAS,GACT,WAAY,EACZ,WAAY,EACd,EAEM,EAAS,OAAO,OAAO,EAAQ,KAAK,eAAgB,CAAQ,EAE5D,EAAS,KAAK,GAAG,SAAS,sBAAsB,CAAM,EAE5D,SAAO,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGhB,GAAG,EAAK,EAAG,CAAO;AAAA,QAC1B,KAAK,WAAW,QAAQ,EAEvB,CACT,CClWA,GAAO,IAAQ,AAAC,GAAW,KAAK,MAAM;AAAA;AAAA,cAExB,EAAO,SAAW;AAAA;AAAA;AAAA,gBAGhB,AAAC,GAAM,CAEf,GAAI,EAAE,OAAO,cAAc,UAAU,SAAS,QAAQ,EAAG,CACvD,EAAE,OAAO,cAAc,UAAU,OAAO,QAAQ,EAChD,MACF,CAEA,SAAS,iBAAiB,iBAAiB,EACxC,QAAQ,AAAC,GAAO,EAAG,UAAU,OAAO,QAAQ,CAAC,EAEhD,EAAE,OAAO,cAAc,UAAU,IAAI,QAAQ,CAE/C;AAAA,kCAC4B,EAAO,MAAQ,EAAO,aAAe,EAAO,QAAQ,GAAG;AAAA;AAAA;AAAA,UAG/E,EAAO,QAAQ,IAAI,AAAC,GAAU,KAAK,MAAM,KAAK;AAAA,oBACpC,AAAC,GAAM,CAEnB,GAAM,GAAM,EAAE,OAAO,QAAQ,iBAAiB,EAC9C,EAAI,UAAU,OAAO,QAAQ,EAC7B,EAAI,cAAc,uBAAuB,EAAE,YAAc,EAAM,MAE/D,EAAO,UAAY,EAAO,SAAS,EAAG,CAAK,CAC7C,KAAK,EAAM,OAEjB,IC/BA,GAAO,IAAQ,AAAC,GAAW,CAEzB,GAAM,GAAiB,GAAI,KACrB,EAAkB,GAAI,KAGtB,EAAK,EAAO,QAAQ,IAAI,AAAC,GAAU,CAGvC,GAAM,GAAK,KAAK,MAAM,KAAK,mBAAmB,AAAC,GAAM,CAGnD,GAAM,GAAM,EAAE,OAAO,QAAQ,iBAAiB,EAG9C,EAAI,UAAU,OAAO,QAAQ,EAG7B,EAAE,OAAO,UAAU,OAAO,UAAU,EAGpC,AAAI,EAAE,OAAO,UAAU,SAAS,UAAU,EACxC,GAAe,IAAI,EAAM,KAAK,EAC9B,EAAgB,IAAI,EAAM,MAAM,GAEhC,GAAe,OAAO,EAAM,KAAK,EACjC,EAAgB,OAAO,EAAM,MAAM,GAIrC,EAAI,cAAc,uBAAuB,EACtC,YAAc,EAAe,MAAQ,MAAM,KAAK,CAAc,EAAE,KAAK,IAAI,GACvE,EAAO,MAAQ,EAAO,YAG3B,EAAO,UAAY,EAAO,SAAS,EAAG,MAAM,KAAK,CAAe,CAAC,CACnE,KAAK,EAAM,QAGX,MAAI,GAAM,UACR,GAAG,UAAU,IAAI,UAAU,EAC3B,EAAe,IAAI,EAAM,KAAK,EAC9B,EAAgB,IAAI,EAAM,MAAM,GAG3B,CAAE,CAAC,EAEZ,MAAO,MAAK,MAAM;AAAA;AAAA,gBAEJ,EAAO,SAAW;AAAA;AAAA;AAAA,kBAGhB,AAAC,GAAM,CAGf,GAAI,EAAE,OAAO,cAAc,UAAU,SAAS,QAAQ,EAAG,CACvD,EAAE,OAAO,cAAc,UAAU,OAAO,QAAQ,EAChD,MACF,CAGA,SAAS,iBAAiB,iBAAiB,EACxC,QAAQ,AAAC,GAAO,EAAG,UAAU,OAAO,QAAQ,CAAC,EAGhD,EAAE,OAAO,cAAc,UAAU,IAAI,QAAQ,CAE/C;AAAA,oCAC4B,EAAe,MAAQ,MAAM,KAAK,CAAc,EAAE,KAAK,IAAI,GAAI,EAAO,MAAQ,EAAO;AAAA;AAAA;AAAA,YAG7G,GACZ,ECxEA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,aAAc,cACd,UAAW,qDACX,UAAW,OACX,kBAAmB,UACnB,kBAAmB,UACnB,mBAAoB,yBACpB,qBAAsB,YACtB,qBAAsB,YACtB,kBAAmB,eACnB,2BAA4B,WAC5B,0BAA2B,UAC3B,8BAA+B,aACjC,EACA,GAAI,CACF,aAAc,WACd,UAAW,4BACX,UAAW,QACX,kBAAmB,gBACnB,kBAAmB,YACnB,mBAAoB,sBACpB,qBAAsB,UACtB,qBAAsB,UACtB,kBAAmB,gBACnB,2BAA4B,eAC5B,0BAA2B,cAC3B,8BAA+B,UACjC,EACA,GAAI,CACF,kBAAmB,2BACnB,kBAAmB,eACnB,mBAAoB,mDACtB,EACA,GAAI,CACF,UAAW,yBACX,kBAAmB,aACnB,kBAAmB,gBACnB,mBAAoB,kCACpB,qBAAsB,aACtB,qBAAsB,oBACtB,kBAAmB,gBACnB,2BAA4B,uBAC5B,0BAA2B,mBAC3B,8BAA+B,qBACjC,EACA,GAAI,CACF,kBAAmB,eACnB,kBAAmB,eACnB,mBAAoB,mCACtB,EACA,GAAI,CACF,UAAW,oBACX,kBAAmB,aACnB,kBAAmB,YACnB,mBAAoB,6BACpB,qBAAsB,cACtB,qBAAsB,eACtB,kBAAmB,YACnB,2BAA4B,iBAC5B,0BAA2B,gBAC3B,8BAA+B,kBACjC,EACA,GAAI,CACF,kBAAmB,uCACnB,kBAAmB,uCACnB,mBAAoB,oCACtB,CACF,CAAC,EAED,GAAO,IAAQ,AAAC,GAAW,CAEzB,GAAM,GAAe,KAAK,MAAM,KAAK;AAAA;AAAA,qCAEF,KAAK,WAAW;AAAA;AAAA,UAE3C,KAAK,GAAG,SAAS,SAAS,CAC1B,QAAS,CACP,CACE,MAAO,CAAC,KAAK,WAAW,iBAAiB,EACzC,OAAQ,KACV,EACA,CACE,MAAO,CAAC,KAAK,WAAW,iBAAiB,EACzC,OAAQ,YACV,CACF,EACA,SAAU,CAAC,EAAG,IAAU,CACtB,EAAO,cAAgB,EAAM,MAC/B,CACF,CAAC,IAED,EAAuB,KAAK,MAAM,KAAK;AAAA;AAAA,qCAEV,KAAK,WAAW;AAAA;AAAA,UAE3C,KAAK,GAAG,SAAS,SAAS,CAC1B,QAAS,CACP,CACE,MAAO,CAAC,KAAK,WAAW,0BAA0B,EAClD,OAAQ,UACV,EACA,CACE,MAAO,CAAC,KAAK,WAAW,yBAAyB,EACjD,OAAQ,SACV,EACA,CACE,MAAO,CAAC,KAAK,WAAW,6BAA6B,EACrD,OAAQ,aACV,CACF,EACA,SAAU,CAAC,EAAG,IAAU,CACtB,EAAO,YAAc,EAAM,MAC7B,CACF,CAAC,IAEH,EAAoB,KAAK,MAAM,KAAK;AAAA,YAC9B,KAAK,WAAW,uBAEtB,EAAa,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,iBAGlB,GAAK,CACd,GAAM,GAAsB,EAAa,cAAc,qCAAqC,EAE5F,AAAI,EAAE,OAAO,MAEX,GAAO,QAAU,GAAI,MAAK,EAAE,OAAO,KAAK,EAAE,YAAY,EAGlD,GACF,GAAO,iBAAmB,GAC1B,EAAoB,QAAU,GAC9B,EAAoB,SAAW,KAKjC,GAAO,QAAU,OACb,GAAqB,GAAoB,SAAW,IAE5D,KAEE,EAAa,KAAK,MAAM,KAAK;AAAA;AAAA,QAE7B;AAAA,QACA,IAGA,EAAc,KAAK,GAAG,SAAS,OAAO,CAC1C,MAAO,KAAK,WAAW,mBACvB,IAAK,EAAO,SACZ,IAAK,EAAO,SACZ,IAAK,GACL,SAAU,GAAK,CACb,EAAO,MAAQ,SAAS,EAAE,OAAO,KAAK,CACxC,CACF,CAAC,EAEK,EAAsB,MAAO,GAAO,iBAAqB,KAAe,KAAK,GAAG,SAAS,OAAO,CACpG,MAAO,4BACP,QAAS,oBACT,QAAS,CAAC,CAAC,EAAO,iBAClB,SAAU,AAAC,GAAY,CACrB,EAAkB,YAAc,GAAW,KAAK,WAAW,sBAAwB,KAAK,WAAW,qBACnG,EAAO,iBAAmB,CAC5B,CAAC,CAAC,EAEE,EAAe,KAAK,GAAG,SAAS,OAAO,CAC3C,OAAQ,KAAK,MAAM;AAAA,YACX,KAAK,WAAW;AAAA,8CAExB,QAAS,KAAK,MAAM;AAAA,WACb,KAAK,WAAW;AAAA;AAAA,UAEjB;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAuB;AAAA,UACvB,GACR,CAAC,EAED,MAAO,EAET,ECxLA,KAAK,MAAM,MAAM,KAAK,aAAc,CAClC,GAAI,CACF,eAAgB,cAChB,YAAa,uDACb,YAAa,OACb,eAAgB,UAChB,eAAgB,UAChB,eAAgB,UAChB,mBAAoB,wBACtB,EACA,GAAI,CACF,eAAgB,WAChB,YAAa,8BACb,YAAa,OACb,eAAgB,gBAChB,eAAgB,YAChB,eAAgB,UAChB,mBAAoB,qBACtB,EACA,GAAI,CACF,YAAa,eACb,eAAgB,2BAChB,eAAgB,eAChB,eAAgB,eAChB,mBAAoB,kDACtB,EACA,GAAI,CACF,YAAa,MACb,eAAgB,aAChB,eAAgB,gBAChB,eAAgB,UAChB,mBAAoB,iCACtB,EACA,GAAI,CACF,YAAa,eACb,eAAgB,eAChB,eAAgB,eAChB,eAAgB,qBAChB,mBAAoB,kCACtB,EACA,GAAI,CACF,YAAa,OACb,eAAgB,aAChB,eAAgB,YAChB,eAAgB,YAChB,mBAAoB,6BACtB,EACA,GAAI,CACF,YAAa,qBACb,eAAgB,uCAChB,eAAgB,uCAChB,eAAgB,uCAChB,mBAAoB,mCACtB,CACF,CAAC,EAED,GAAO,IAAQ,AAAC,GAAW,CACzB,GAAM,GAAe,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,qCAGF,KAAK,WAAW;AAAA;AAAA,UAE3C,KAAK,GAAG,SAAS,SAAS,CAC1B,QAAS,CACP,CACE,MAAO,CAAC,KAAK,WAAW,cAAc,EACtC,OAAQ,SACV,EACA,CACE,MAAO,CAAC,KAAK,WAAW,cAAc,EACtC,OAAQ,SACV,EACA,CACE,MAAO,CAAC,KAAK,WAAW,cAAc,EACtC,OAAQ,SACV,CACF,EACA,SAAU,CAAC,EAAG,IAAU,CACtB,EAAO,QAAU,EAAM,MACzB,CACF,CAAC,IAED,EAAe,KAAK,GAAG,SAAS,OAAO,CAC3C,MAAO,KAAK,WAAW,mBACvB,IAAK,EAAO,WACZ,IAAK,EAAO,WACZ,IAAK,EAAO,QACZ,SAAU,AAAC,GAAM,CACf,EAAO,QAAU,SAAS,EAAE,OAAO,KAAK,CAC1C,CACF,CAAC,EAaD,MAXqB,MAAK,GAAG,SAAS,OAAO,CAC3C,OAAQ,KAAK,MAAM;AAAA,YACX,KAAK,WAAW;AAAA,8CAExB,QAAS,KAAK,MAAM;AAAA,WACb,KAAK,WAAW;AAAA;AAAA,UAEjB;AAAA,UACA,GACR,CAAC,CAGH,ECxGA,GAAM,IAAgB,GAAI,eAEnB,GAAQ,AAAC,GAAW,CAEzB,GAAI,EAAO,KAAO,EAAO,MAAQ,EAAO,OAAQ,CAE9C,GAAI,GAAkB,EAAO,QACxB,MAAM,QAAQ,EAAO,MAAM,GAC3B,EAAO,OACT,IAAI,GAAM,OAAO,EAAG,MAAM,EAC1B,QAAQ,EACR,KAAK,GAAG,GACN,OAAO,EAAO,KAAO,EAAO,KAAO,KAAK,MAAM,WAAW,EAAO,MAAM,CAAM,KAE7E,EAAc;AAAA;AAAA;AAAA;AAAA,eAIN,EAAO,MAAQ,MAAS;AAAA,gBACvB,EAAO,OAAS,MAAS;AAAA,yBACjB,KAErB,MAAO,MAAK,MAAM,kBAAkB,IAEtC,CAEA,GAAI,CAAC,EAAO,WAAa,EAAO,YAAa,CAE3C,GAAI,GAAO;AAAA,YACH,EAAO,OAAO;AAAA,UAChB,EAAO,MAAM,KAAK,EAAO,OAAO;AAAA,QAClC,EAAO,MAAM,KAAK,EAAO,OAAO;AAAA,QAChC,EAAO,SAAS,EAAO,OAAO,IAE9B,EAAO,KAAK,MAAM,IAAI;AAAA,oBACV,EAAO,gBAAgB,EAAO;AAAA,kBAChC;AAAA;AAAA,mBAEC,EAAO;AAAA,yBACD,EAAO,aAAe,MAEvC,EAAkB,sBAAsB,mBAAmB,GAAc,kBAAkB,CAAI,CAAC,IAEhG,EAAc;AAAA;AAAA;AAAA;AAAA,eAIP,EAAO;AAAA,gBACN,EAAO;AAAA,8BACO,MAE1B,MAAO,MAAK,MAAM,kBAAkB,IACtC,CAEA,GAAI,EAAO,UAAW,CAEpB,GAAI,GAAO,KAAK,MAAM,IAAI;AAAA,oBACV,EAAO,gBAAgB,EAAO;AAAA;AAAA,cAEpC,EAAO,aAAe;AAAA,cACtB,EAAO,aAAe;AAAA;AAAA;AAAA;AAAA,kBAIlB,EAAO,MAAQ,EAAK,GAAO,aAAe;AAAA,mBACzC,EAAO,OAAS,EAAK,GAAO,aAAe;AAAA,iBAC7C,EAAO;AAAA,yBACC,EAAO,aAAe;AAAA,mBAC5B,EAAO;AAAA,yBACD,EAAO,aAAe,KAEvC,EAAkB,sBAAsB,mBAAmB,GAAc,kBAAkB,CAAI,CAAC,IAEhG,EAAc;AAAA;AAAA;AAAA;AAAA,eAIP,EAAO;AAAA,gBACN,EAAO;AAAA,8BACO,MAE1B,MAAO,MAAK,MAAM,kBAAkB,IACtC,CAEF,ECpFA,GAAO,IAAQ,AAAC,GAAW,CAEzB,GAAI,CAAE,GAAO,iBAAkB,cAAc,OAE7C,EAAO,MAAQ,EAAO,OAAO,YAAY,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAG3C,EAAO,SAAW;AAAA;AAAA;AAAA,gBAGlB,EAAO;AAAA;AAAA;AAAA;AAAA,oBAIH,GAAK,CACnB,EAAE,OAAO,QAAQ,QAAQ,EAAE,OAAO,EAClC,EAAO,OAAS,EAAO,MAAM,CAAC,CAChC;AAAA;AAAA,QAEI,EAAO,SAAS,EAEtB,EAAO,MAAM,iBAAiB,YAAa,AAAC,GAAM,CAChD,EAAE,eAAe,EACjB,EAAO,MAAM,MAAM,OAAS,WAC5B,OAAO,iBAAiB,YAAa,CAAU,EAC/C,OAAO,iBAAiB,UAAW,CAAS,CAC9C,CAAC,EAED,EAAO,MAAM,iBAAiB,aAAc,AAAC,GAAM,CACjD,EAAE,eAAe,EACjB,EAAO,MAAM,MAAM,OAAS,WAC5B,OAAO,iBAAiB,YAAa,CAAU,EAC/C,OAAO,iBAAiB,WAAY,CAAS,CAC/C,EAAG,CACD,QAAS,EACX,CAAC,EAGD,YAAqB,CACnB,EAAO,MAAM,MAAM,OAAS,OAC5B,EAAI,OACJ,EAAI,OACJ,OAAO,oBAAoB,YAAa,CAAU,EAClD,OAAO,oBAAoB,YAAa,CAAU,EAClD,OAAO,oBAAoB,UAAW,CAAS,EAC/C,OAAO,oBAAoB,WAAY,CAAS,CAClD,CAEA,GAAI,GAAG,EAEP,WAAoB,EAAG,CAErB,GAAM,GAAS,EAAE,SAAW,EAAE,QAAQ,GAAG,OAAU,EAAE,MAE/C,EAAS,EAAE,SAAW,EAAE,QAAQ,GAAG,OAAU,EAAE,MAGrD,GAAI,CAAC,GAAK,CAAC,EAAG,CACZ,EAAI,EACJ,EAAI,EACJ,MACF,CAEA,EAAO,MAAM,MAAM,MAAQ,SAAS,EAAO,MAAM,MAAM,KAAK,EAAK,GAAI,GAAS,KAC9E,EAAO,MAAM,MAAM,IAAM,SAAS,EAAO,MAAM,MAAM,GAAG,EAAK,GAAQ,GAAK,KAE1E,EAAI,EACJ,EAAI,CACN,CAEF,ECtEA,GAAO,IAAQ,GAAU,CAEvB,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA,gBAGT,EAAO,SAAW;AAAA,cACpB,EAAO,OAAS;AAAA;AAAA,cAEhB,UAAU,EAAO,eAAe,EAAO,aAAa,EAAO,QAAQ,EAAO,OAAS;AAAA;AAAA,iBAEhF,EAAO;AAAA;AAAA;AAAA,gBAGR,EAAO;AAAA,gBACP,EAAO;AAAA,kBACL,EAAO;AAAA,oBACL;AAAA;AAAA;AAAA;AAAA;AAAA,cAKN,EAAO;AAAA,cACP,EAAO;AAAA,gBACL,EAAO;AAAA,eACR,EAAO,MAAQ;AAAA,kBACZ,KAEhB,WAAiB,EAAG,CAElB,GAAI,GAAM,WAAW,EAAE,OAAO,KAAK,EAEnC,AAAI,OAAM,CAAG,GAAK,EAAM,EAAO,MAAK,GAAM,EAAO,KAEjD,GAAM,GAAQ,EAAE,OAAO,QAAQ,cAAc,EAE7C,AAAI,EAAM,EAAO,KACf,GAAM,MAAM,YAAY,QAAS,CAAG,EACpC,EAAM,iBAAiB,OAAO,EAAE,QAAQ,GAAM,EAAG,IAAM,CAAG,GAG5D,EAAM,MAAM,YAAY,KAAK,EAAE,OAAO,KAAM,CAAG,EAE/C,EAAM,iBAAiB,OAAO,EAC3B,QAAQ,GAAM,CACb,AAAI,EAAG,IAAM,EAAE,OAAO,IAClB,GAAM,EAAE,QACZ,GAAG,MAAQ,EACb,CAAC,EAEH,EAAO,UAAY,EAAO,SAAS,CAAC,CACtC,CAEF,ECpDA,GAAO,IAAQ,GAAU,CAEvB,GAAM,GAAU,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,cAIpB;AAAA,iBACG,EAAO;AAAA,iBACP,EAAO;AAAA,eACT,EAAO;AAAA,eACP,EAAO;AAAA;AAAA;AAAA,iBAGL,EAAO,SAAW;AAAA;AAAA,oBAEf,EAAO;AAAA,kBACT,EAAO;AAAA,kBACP,EAAO;AAAA;AAAA,sBAEH;AAAA;AAAA,iBAEL,EAAO,SAAW;AAAA;AAAA,oBAEf,EAAO;AAAA,kBACT,EAAO;AAAA,kBACP,EAAO;AAAA;AAAA,sBAEH;AAAA;AAAA;AAAA;AAAA;AAAA,cAKR,EAAO;AAAA,cACP,EAAO;AAAA,eACN,EAAO,MAAQ;AAAA,gBACd,EAAO;AAAA,kBACL;AAAA;AAAA,cAEJ,EAAO;AAAA,cACP,EAAO;AAAA,eACN,EAAO,MAAQ;AAAA,gBACd,EAAO;AAAA,kBACL,MAEhB,WAAiB,EAAG,CAElB,EAAE,OAAO,MAAQ,EAAE,OAAO,MAAQ,EAAO,IAAM,EAAO,IAAM,EAAE,OAAO,MAErE,EAAQ,MAAM,YAAY,KAAK,EAAE,OAAO,KAAM,EAAE,OAAO,KAAK,EAE5D,EAAQ,iBAAiB,OAAO,EAC7B,QAAQ,GAAM,CACb,AAAI,EAAG,IAAM,EAAE,OAAO,IAClB,GAAM,EAAE,QACZ,GAAG,MAAQ,EAAE,OAAO,MACtB,CAAC,EAEH,EAAE,OAAO,KAAO,KACX,MAAO,GAAO,YAAe,YAC7B,EAAO,WAAW,CAAC,EAExB,EAAE,OAAO,KAAO,KACX,MAAO,GAAO,YAAe,YAC7B,EAAO,WAAW,CAAC,CAE1B,CAEA,MAAO,EACT,ECpEA,GAAO,IAAQ,CACb,YACA,iBACA,eACF,EAEA,YAAkB,EAAU,CAE1B,MAAO,MAAK,MAAM;AAAA;AAAA,cAEN,QAAQ,EAAS,UAAY,UAAW;AAAA,gBACtC,GAAK,CACb,EAAE,OAAO,UAAU,OAAO,QAAQ,EAClC,EAAS,SAAW,CAAC,EAAS,SAC9B,EAAS,OAAO,CAClB,YAEN,CAEA,YAAuB,EAAU,CAE/B,MAAO,MAAK,MAAM;AAAA;AAAA;AAAA,gBAGJ,IAAM,CACd,EAAS,UAAU,SAAS,OAAQ,GAAG,EAAS,OAAS,cAAc,CACzE,kBAEN,CAEA,YAAsB,EAAU,CAE9B,MAAO,MAAK,MAAM;AAAA;AAAA;AAAA,gBAGJ,IAAM,CACd,EAAS,UAAU,SAAS,MAAO,GAAG,EAAS,OAAS,aAAa,CACvE,mBAEN,CCXA,GAAO,IAAQ,CACb,QACA,UACA,eACA,UACA,WACA,YACA,kBACA,uBACA,yBACA,cACA,SACA,UACA,aACA,aACF,EC3CA,GAAI,GAAS,EAAQ,KAErB,kBAA8B,EAAQ,EAAS,CAG7C,MAAI,GAAc,GAAI,GAAM,EAAQ,CAAO,EAGtC,IAAS,GAAU,GAAI,SAAQ,KAAM,IAAW,CAGnD,GAAI,OAAO,MAAO,CAEhB,EAAQ,OAAO,MAEf,EAAQ,EAER,MACF,CAGA,QACG,IAAI,CACH,OAAO,0CACP,OAAO,2DACP,OAAO,0DACT,CAAC,EACA,KAAK,GAAW,CAGf,EAAQ,GAAG,MAAM,SAAS,GAAG,EAAQ,GAAG,aAAa,EAErD,EAAQ,GAAG,MAAM,SAAS,EAAQ,GAAG,OAAO,EAE5C,EAAQ,GAAG,MAAM,SAAS,EAAQ,GAAG,OAAO,EAE5C,EAAQ,EAAQ,GAAG,MAEnB,EAAQ,CACV,CAAC,EACA,MAAM,GAAS,CACd,QAAQ,MAAM,EAAM,OAAO,EAC3B,MAAM,6DAA6D,CACrE,CAAC,CAEL,CAAC,GAED,KAAM,GAEC,GAAI,GAAM,EAAQ,CAAO,EAClC,CClDA,GAAI,GAAS,EAAY,KAEzB,mBAAgC,CAG9B,MAAI,GAAkB,GAAI,GAAU,GAAG,SAAS,EAG3C,IAAS,GAAU,GAAI,SAAQ,KAAM,IAAW,CAGnD,GAAI,OAAO,UAAW,CAEpB,EAAY,OAAO,UAEnB,EAAQ,EAER,MACF,CAGA,QACG,IAAI,CACH,OAAO,0HACT,CAAC,EACA,KAAK,GAAW,CAEf,EAAY,EAAQ,GAAG,cAEvB,EAAQ,CACV,CAAC,EACA,MAAM,GAAS,CACd,QAAQ,MAAM,EAAM,OAAO,EAC3B,MAAM,8DAA8D,CACtE,CAAC,CAEL,CAAC,GAED,KAAM,GAEC,GAAI,GAAU,GAAG,SAAS,EACnC,CCzCA,GAAO,IAAQ,CACb,aAAc,CACZ,QACA,WACA,MACF,CACF,EAEA,YAAc,EAAO,CAEnB,MAAO,CAAC,EAAM,EAAY,EAAS,EAAQ,IAAuB,CAEhE,GAAM,GAAQ,EAAK,UAAU,EAAE,SAAS,EAExC,WAAoB,EAAG,CAGrB,GAAM,GAAS,EAAM,UAAU,WAAW,EAAE,KAAK,GAAK,EAAE,QAAU,GAAS,EAAE,MAAQ,MAAM,EAG3F,AAAI,GACF,GAAM,UAAU,aAAa,GAAG,OAAO,OAAO,CAAM,CAAC,EAGrD,EAAmB,OAAS,MAAO,GAAM,MAAM,OAAO,QAAQ,IAG7D,EAAE,OAAO,MAAM,QAAQ,EAAM,UAAU,UAAU,CAClD,CAAE,MAAO,EAAO,KAAM,OAAQ,MAAO,EAAE,OAAO,KAAM,CACtD,CAAC,EAEG,EAAmB,OAEnB,GAAE,OAAO,MAAM,OAAU,EAAM,MAAM,OAAO,QAAQ,GAAS,CAC3D,CAAC,EAAmB,MAAO,mBAAmB,EAAE,OAAO,KAAK,CAC9D,EAAK,MAAO,GAAM,MAAM,OAAO,QAAQ,GAEvC,EAAM,MAAM,OAAO,GAIvB,EAAM,OAAO,CAEf,CAEA,MAAO,MAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,kBAIT;AAAA,iBACD,IAEf,CACF,CAEA,YAAiB,EAAO,CAEtB,MAAO,CAAC,EAAM,EAAY,EAAS,EAAQ,IAAuB,CAGhE,GAAM,GAAQ,EAAK,UAAU,EAAE,SAAS,EAElC,EAAW,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA,mBAIb;AAAA,iBACF,KAEb,WAAkB,EAAG,CAGnB,GAAM,GAAS,EAAM,UAAU,WAAW,EAAE,KAAK,GAAK,EAAE,QAAU,GAAS,EAAE,MAAQ,IAAI,EAGzF,AAAI,GACF,GAAM,UAAU,aAAa,GAAG,OAAO,OAAO,CAAM,CAAC,EAGrD,EAAmB,OAAS,MAAO,GAAM,MAAM,OAAO,QAAQ,IAI5D,OAAO,EAAE,OAAO,KAAK,GACvB,GAAM,UAAU,UAAU,EAAO,KAAM,OAAO,EAAE,OAAO,KAAK,CAAC,EAGzD,EAAmB,OACrB,GAAM,MAAM,OAAO,QAAQ,GAAS,OAAO,OAAO,EAAM,MAAM,OAAO,QAAQ,IAAU,CAAC,EAAG,CAAC,IAAI,OAAO,EAAE,OAAO,KAAK,CAAC,CAAC,EACvH,EAAM,MAAM,OAAO,EACnB,EAAM,OAAO,GAGnB,CAEA,GAAM,GAAW,KAAK,MAAM;AAAA;AAAA;AAAA;AAAA,mBAIb;AAAA,iBACF,KAEb,WAAkB,EAAG,CAGnB,GAAM,GAAS,EAAM,UAAU,WAAW,EAAE,KAAK,GAAK,EAAE,QAAU,GAAS,EAAE,MAAQ,IAAI,EAGzF,AAAI,GACF,GAAM,UAAU,aAAa,GAAG,OAAO,OAAO,CAAM,CAAC,EAGrD,EAAmB,OAAS,MAAO,GAAM,MAAM,OAAO,QAAQ,IAI5D,OAAO,EAAE,OAAO,KAAK,GACvB,GAAM,UAAU,UAAU,EAAO,KAAM,OAAO,EAAE,OAAO,KAAK,CAAC,EAGzD,EAAmB,OACrB,GAAM,MAAM,OAAO,QAAQ,GAAS,OAAO,OAAO,EAAM,MAAM,OAAO,QAAQ,IAAU,CAAC,EAAG,CAAE,IAAK,OAAO,EAAE,OAAO,KAAK,CAAE,CAAC,EAC1H,EAAM,MAAM,OAAO,EACnB,EAAM,OAAO,GAGnB,CAGA,MAAO,MAAK,MAAM,KAAK;AAAA,yCACc,IAAW,GAElD,CACF,CAEA,YAAa,EAAO,CAElB,MAAO,CAAC,EAAM,EAAY,EAAS,EAAQ,IAAuB,CAE/D,EAAmB,IAAM,GAAI,KAE9B,WAAkB,EAAM,EAAK,CAM3B,GAJA,EAAM,OAAO,EAAK,SAAS,GAAK,CAAC,EAE7B,EAAI,MAAM,GAAM,OAAO,EAAK,SAAS,GAAG,GAAK,MAAM,KAAK,CAAG,GAE5D,EAAmB,SAAW,EAAM,UAAU,aAAa,EAAI,EAAmB,QAAQ,EAAG,MAAO,GAAM,OAAO,EAEpH,GAAG,EAAM,UAAU,WAAW,EAAE,OAAQ,CACtC,GAAI,GAAS,EAAM,UAAU,WAAW,EAAE,KAAK,GAAK,EAAE,OAAS,EAAK,SAAS,GAAK,EAAE,MAAQ,IAAI,EAChG,AAAG,GAAQ,EAAM,UAAU,aAAa,EAAO,MAAO,EAAO,KAAM,EAAO,KAAK,CACjF,CAEA,AAAG,EAAI,MAAM,EAAM,UAAU,UAAU,EAAK,SAAS,EAAG,KAAM,MAAM,KAAK,CAAG,CAAC,EAE1E,MAAO,GAAmB,UAAc,YAAY,EAAmB,SAAS,EAAM,EAAmB,GAAG,CAEjH,CAEA,GAAM,GAAS,KAAK,MAAM,KAAK;AAAA;AAAA,eAEpB,GAAK,CAEd,GAAM,GAAM,EAAE,OAAO,MAErB,GAAoB,IAAI,IAAI,CAAG,GAC5B,EAAmB,IAAI,OAAO,CAAG,GACjC,EAAmB,IAAI,IAAI,CAAG,EAEjC,OAAS,GAAE,EAAG,EAAE,EAAE,OAAO,QAAQ,OAAQ,IAEvC,EAAE,OAAO,QAAQ,GAAG,MAAM,gBAAkB,EAAmB,IAC9D,IAAI,EAAE,OAAO,QAAQ,GAAG,KAAK,GAAM,GAAmB,UAAY,YAAc,UAGnF,EAAS,EAAM,EAAmB,GAAG,EAErC,EAAE,OAAO,MAAQ,IAEnB,KAAK,EAAmB,QAAQ,IAAI,GAAU,KAAK,MAAM,KAAK;AAAA,gBAClD,GAAQ,IAEpB,SAAO,MAAQ,KAEZ,EAAmB,UAAU,GAAO,SAAW,IAE3C,CAET,CAEF,CC/LA,GAAM,GAAO,CACX,KAAM,GACR,EAEO,GAAQ,GAAU,CAIvB,AAFA,OAAO,OAAO,EAAM,CAAM,EAEtB,EAAK,OAAS,GAGlB,QAAO,OAAS,EAChB,OAAO,YAAc,EACrB,OAAO,YAAc,EACrB,OAAO,aAAe,EACtB,OAAO,QAAU,EACjB,OAAO,WAAa,EACpB,EAAW,EACX,GAAW,EACb,EAGA,YAAsB,CAEpB,AAAI,EAAK,QAET,GAAK,SAAW,aAAa,EAAK,OAAO,EAEzC,EAAK,QAAU,WAAW,GAAM,EAAK,KAAO,GAAI,EAClD,CAGA,aAAgB,CAEd,EAAK,OAAS,GAGd,EAAK,OAAS,aAAa,EAAK,KAAK,EAGrC,GAAM,GAAM,GAAI,gBAChB,EAAI,KAAK,MAAO,GAAG,EAAK,mCAAmC,EAG3D,EAAI,OAAS,GAAK,SAAS,OAAO,EAClC,EAAI,KAAK,CACX,CAGA,aAAsB,CAGpB,EAAK,MAAQ,WAAW,EAAS,GAAK,KAAO,IAAM,GAAI,EAEvD,YAAkB,CAEhB,GAAM,GAAM,GAAI,gBAChB,EAAI,KAAK,MAAO,GAAG,EAAK,iCAAiC,EACzD,EAAI,OAAS,GAAK,CAGhB,GAAI,EAAE,OAAO,SAAW,IAAK,MAAO,IAAK,EAGzC,GAAW,CACb,EAEA,EAAI,KAAK,CACX,CACF,CCrEA,GAAO,IAAQ,GAAK,CAElB,SAAS,KAAK,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA,oCAEH,wBAAwB,EAAE,OAAO;AAAA;AAAA,kBAEnD,GAAK,EAAE,OAAO,cAAc,cAAc,OAAO,IAAI,CAEvE,ECRA,GAAO,IAAQ,AAAC,GAAW,CAEzB,EAAO,OAAO,iBAAiB,YAAa,AAAC,GAAM,CACjD,EAAE,eAAe,EACjB,SAAS,KAAK,MAAM,OAAS,WAC7B,OAAO,iBAAiB,YAAa,EAAO,WAAW,EACvD,OAAO,iBAAiB,UAAW,CAAU,CAC/C,CAAC,EAED,EAAO,OAAO,iBACZ,aACA,AAAC,GAAM,CACL,EAAE,eAAe,EACjB,OAAO,iBAAiB,YAAa,EAAO,WAAW,EACvD,OAAO,iBAAiB,WAAY,CAAU,CAChD,EACA,CACE,QAAS,EACX,CACF,EAGA,YAAsB,CACpB,SAAS,KAAK,MAAM,OAAS,OAC7B,OAAO,oBAAoB,YAAa,EAAO,WAAW,EAC1D,OAAO,oBAAoB,YAAa,EAAO,WAAW,EAC1D,OAAO,oBAAoB,UAAW,CAAU,EAChD,OAAO,oBAAoB,WAAY,CAAU,CACnD,CACF,ECjBA,GAAO,IAAQ,CACb,SACA,aACA,aACA,cACA,gBACA,gBACF,ECnBA,GAAO,IAAQ,GAAU,CAGvB,GAAM,GAAY,OAAO,OAAO,CAE9B,MAAO,EAAO,OAAO,cAAc,OAAO,EAE1C,OAAQ,EAAO,OAAO,cAAc,IAAI,EAExC,cAEA,QAAS,CACP,IAAK,EACL,OAAQ,EACR,OAAQ,CACV,CAEF,EAAG,CAAM,EAET,EAAU,MAAM,YAAc,EAAU,aAAe,GAEvD,EAAU,MAAM,QAAU,GAAK,CAG7B,EAAU,KAAO,EAAU,IAAI,MAAM,EAGrC,EAAU,OAAO,UAAY,GAG7B,EAAE,OAAO,MAAM,OAAS,GAAK,EAAO,EAAE,OAAO,KAAK,CACpD,EAGA,EAAU,MAAM,iBAAiB,UAAW,GAAK,CAC/C,AAAC,GAAE,SAAW,EAAE,YAAc,IACzB,EAAU,OAAO,cAAc,IAAI,EAAE,MAAM,CAClD,CAAC,EAED,WAAgB,EAAK,CAGnB,GAAI,GAAK,EAAK,MAAM,GAAG,EAAE,IAAI,UAAU,EAGvC,GAAI,EAAG,SAAW,GAAK,EAAG,MAAM,GAAK,CAAC,MAAM,CAAC,CAAC,EAAG,CAE/C,EAAU,OAAO,YAAY,KAAK,MAAM,KAAK;AAAA;AAAA,kBAEjC,GAAG,CAEX,EAAU,OAAO,UAAY,GAE7B,EAAU,YAAY,CACpB,MAAO,YAAY,EAAG,iBAAiB,EAAG,KAC1C,OAAQ,cACR,IAAK,EAAG,GACR,IAAK,EAAG,EACV,CAAC,CAEH,qBAAqB,EAAG,iBAAiB,EAAG,IAAI,EAGlD,MACF,CAGA,EAAU,IAAM,GAAI,gBAGpB,EAAU,IAAI,KAAK,MAAO,EAAU,QAAQ,KAAO,kBACjD,KAAK,MAAM,YAAY,CACrB,OAAQ,EAAU,QAAQ,OAAO,IACjC,MAAO,EAAU,MACjB,EAAG,mBAAmB,CAAI,CAC5B,CAAC,CAAC,EAEJ,EAAU,IAAI,iBAAiB,eAAgB,kBAAkB,EACjE,EAAU,IAAI,aAAe,OAC7B,EAAU,IAAI,OAAS,GAAK,CAE1B,GAAI,EAAE,OAAO,SAAW,IAGxB,IAAI,EAAE,OAAO,SAAS,SAAW,EAC/B,MAAO,GAAU,OAAO,YAAY,KAAK,MAAM,KAAK;AAAA,gBAC5C,KAAK,WAAW,YAAY,EAItC,OAAO,OAAO,EAAE,OAAO,QAAQ,EAAE,QAAQ,GAAS,CAEhD,EAAU,OAAO,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA,sBAE1B,GAAG,CAIX,GAFA,EAAU,OAAO,UAAY,GAEzB,EAAU,SAAU,MAAO,GAAU,SAAS,CAAK,EAEvD,EAAU,QAAQ,EAAM,QAAQ,CAC9B,MAAO,EAAM,MACb,GAAI,EAAM,GACV,OAAQ,EAAM,OACd,MAAO,EAAM,MACb,MAAO,EAAM,MACb,OAAQ,EAAM,OACd,SAAU,EAAO,QACnB,CAAC,CAEH;AAAA,kCACsB,EAAM,OAAU,EAAU,QAAQ,OAAO,EAAM,QAAU,EAAU,QAAQ,OAAO,EAAM,OAAO,MAAS,EAAM,OAAS,EAAM;AAAA,oBAC3I,EAAM,cAAc,CAElC,CAAC,EAEH,EAEA,EAAU,IAAI,KAAK,CACrB,CAEA,WAAa,EAAQ,CAEnB,EAAU,YAAY,CACpB,MAAO,EAAU,QAAQ,OAAO,EAAO,OACvC,MAAO,EAAO,MACd,GAAI,EAAO,EACb,EAAG,GAAO,KAAK,SAAS,IAAI,CAAG,EAAE,KAAK,GAAO,GAAO,EAAI,MAAM,CAAC,CAAC,CAClE,CAEA,WAAgB,EAAQ,CAEtB,KACG,MACE,IAAI,GAAG,EAAU,QAAQ,sBAAsB,mBAAmB,mEAAmE,EAAO,aAAa,GAAG,EAC1J,KAAK,GAAY,CAEhB,EAAU,YAAY,CACpB,MAAO,EAAO,MACd,OAAQ,EAAO,OACf,IAAK,EAAS,OAAO,SAAS,SAAS,IACvC,IAAK,EAAS,OAAO,SAAS,SAAS,GACzC,CAAC,CACH,CAAC,CACT,CAEA,WAAgB,EAAQ,CAEtB,EAAU,YAAY,CACpB,MAAO,EAAO,MACd,OAAQ,EAAO,OACf,IAAK,EAAO,OAAO,GACnB,IAAK,EAAO,OAAO,EACrB,CAAC,CACH,CAEA,WAAqB,EAAU,EAAU,CAEvC,GAAI,MAAO,IAAa,WAAY,CAClC,EAAS,CAAQ,EACjB,MACF,CAEA,OAAO,OAAO,EAAU,CACtB,MAAO,CACL,QAAS,EAAU,OACrB,EACA,OAAQ,CAAC,EACT,KAAM,EAAS,KACjB,CAAC,EAED,GAAM,GAAQ,CACZ,CACE,MAAO,EAAS,MAChB,MAAO,EAAS,MAClB,EACA,CACE,KAAM,MACN,MAAO,CAAC,EAAS,IAAK,EAAS,GAAG,EAClC,KAAM,OACN,MAAO,eACP,UACF,CACF,EAWA,GATA,EAAU,YAAc,EAAM,KAAK,CACjC,KAAM,aACN,UACF,CAAC,EAED,KAAK,SAAS,SAAS,OAAO,OAAO,EAAU,CAAE,OAAM,CAAC,CAAC,EAEzD,EAAU,QAAQ,UAAU,EAAS,MAAQ,EAEzC,EAAU,KAAM,CAClB,GAAI,GAAO,EAAU,QAAQ,IAAI,QAAQ,EACzC,EAAK,QAAQ,EAAU,IAAI,EAC3B,EAAK,UAAU,GAAG,KAAK,WAAW,CAAC,EAAS,IAAK,EAAS,GAAG,CAAC,CAAC,CAEjE,KACE,GAAS,MAAM,CAEnB,CACF,EC7LA,GAAM,IAAK,CACT,SACA,aACA,YACA,SACA,aACA,YACA,UACF,EAEA,AAAI,MAAO,QAAO,MAAS,UAEzB,QAAO,KAAK,GAAK,IAInB,GAAO,IAAQ",
  "names": []
}
